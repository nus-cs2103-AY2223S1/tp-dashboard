[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T08-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T08-2/tp/actions)","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"# Arrow","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"* This is **a project made by Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"* The project simulates an ongoing software project for a desktop application used for managing contact details and project tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"  * It is named `Arrow` after the Singaporean slang term which means to delegate somebody to perform a task.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"* For the detailed documentation of this project, visit the **[Arrow User Guide](https://ay2223s1-cs2103t-t08-2.github.io/tp/)**.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"## Acknowledgements","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"- This project uses the [PrettyTime NLP library](https://www.ocpsoft.org/prettytime/nlp/) to enable simple parsing and computer understanding of natural language in terms of dates.","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"KIANSEONG":2,"beetee17":9,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"    implementation \u0027org.ocpsoft.prettytime:prettytime-nlp:5.0.4.Final\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    archiveFileName \u003d \u0027arrow.jar\u0027","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"run {","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":1,"beetee17":2,"-":73,"yilinzyl":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project Team","lastModifiedDate":"2022-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Quah Kian Seong","lastModifiedDate":"2022-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"\u003cimg src\u003d\"images/kianseong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"GitHub: [@KIANSEONG](https://github.com/KIANSEONG)","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"### Wang Xinyi","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"\u003cimg src\u003d\"images/wxy1203.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"GitHub: [@wxy1203](https://github.com/wxy1203)","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"* Role: Team Member","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"* Responsibilities: Many","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Brandon Thio","lastModifiedDate":"2022-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"\u003cimg src\u003d\"images/beetee17.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"GitHub: [@beetee17](https://github.com/beetee17)","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"[[portfolio](team/beetee17.md)]","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Team Member","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Various","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### Zheng Yilin","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"\u003cimg src\u003d\"images/yilinzyl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"Github: [@yilinzyl](http://github.com/yilinzyl)","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"[[portfolio](team/yilinzyl.md)]","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"* Role: Team Member","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"* Responsibilities: Various","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### Amresh","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"\u003cimg src\u003d\"images/amresh2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"Github: [@amresh2000](http://github.com/amresh2000)","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"[[portfolio](team/amresh.md)]","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":7,"amresh2000":2,"wxy1203":4,"beetee17":1,"-":41,"yilinzyl":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"## Table of Contents","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"2. [Setting up and getting started](#setting-up-getting-started)","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"3. [Design](#design)","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"   1. [Architecture](#architecture)","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"   2. [UI](#ui-component)","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"   3. [Logic](#logic-component)","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"   4. [Model](#model-component)","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"   5. [Storage](#storage-component)","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"   1. [Assigning Teammates to a Task](#assign-teammates-to-a-task-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"   2. [Clearing Tasks](#clearing-tasks-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"   3. [Deleting a Task](#deleting-a-task-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"   4. [Editing a Task](#editing-a-task-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"   5. [Listing Tasks](#listing-tasks-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"   6. [Marking a Task](#marking-a-task-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"   7. [Unmarking a Task](#unmarking-a-task-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"   8. [Task Class Design Considerations](#task-class-design-considerations)","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"   9. [Proposed Undo/Redo Feature](#proposed-undoredo-feature)","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"5. [Other Guides](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"6. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"7. [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"* This project uses the [PrettyTime NLP library](https://www.ocpsoft.org/prettytime/nlp/) to enable simple parsing and computer understanding of natural language in terms of dates.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"* implements its functionality using a concrete `{Component Name} Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `TeammateListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"* depends on some classes in the `Model` component, as it displays `Teammate` and `Task` objects residing in the `Model`.","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"1. When `Logic` is called upon to execute a command, it uses either the `AddressBookParser` class or the `TaskPanelParser` class to parse the user command.","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`, `AddTaskCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a teammate).","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"task add New task\")` API call.","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"![Interactions inside the Logic Component for the `task add New task` Command](images/AddTaskSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"* When called upon to parse a user command, the `LogicManager` class first checks if the command is a task related command or an address book command. If the command is task related (i.e. format of `task ...`), it calls the `TaskPanelParser` to parse the user command. Otherwise, the `AddressBookParser` will parse the user command.","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"TaskPanel commands:","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"* The `TaskPanelParser` class creates an `XYZTaskCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddTaskCommandParser`) which uses the other classes shown above to parse the user command and create `XYZTaskCommand` object (e.g., `AddTaskCommand`) which the `TaskPanelParser` returns back as a `TaskCommand` object which is a `Command` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"* All `XYZTaskCommandParser` classes (e.g., `AddTaskCommandParser`, `DeleteTaskCommanParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g., during testing.","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"AddressBook commands:","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"* The `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"* stores the address book data i.e., all `Teammate` objects (which are contained in a `UniqueTeammateList` object).","lastModifiedDate":"2022-11-06"},{"lineNumber":158,"author":{"gitId":"yilinzyl"},"content":"* stores the task panel data i.e., all `Task` objects (which are contained in a `UniqueTaskList` object).","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"* stores the currently \u0027selected\u0027 `Teammate` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTeammate\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"yilinzyl"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Teammate` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Teammate` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"KIANSEONG"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-T08-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"yilinzyl"},"content":"* can save task panel data, address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"yilinzyl"},"content":"* inherits from all of `TaskPanelStorage`, `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"KIANSEONG"},"content":"This section describes some noteworthy details on how certain task management features are implemented.","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"KIANSEONG"},"content":"### Clearing Tasks Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"wxy1203"},"content":"#### Current Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"KIANSEONG"},"content":"The `task clear` feature is implemented by acting on the currently filtered `TaskPanel`, clearing all existing tasks in the task panel.","lastModifiedDate":"2022-11-07"},{"lineNumber":198,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"KIANSEONG"},"content":"#### Example Usage of `task clear`","lastModifiedDate":"2022-11-07"},{"lineNumber":200,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"wxy1203"},"content":"1. User launches Arrow and the `TaskPanel` is populated with existing `Task` entries.","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"KIANSEONG"},"content":"2. User types in the command `task clear`.","lastModifiedDate":"2022-11-07"},{"lineNumber":203,"author":{"gitId":"wxy1203"},"content":"3. The current state of the `TaskPanel` is obtained from `Model`.","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"KIANSEONG"},"content":"4. The `TaskPanel` is set to be an empty one.","lastModifiedDate":"2022-11-07"},{"lineNumber":205,"author":{"gitId":"KIANSEONG"},"content":"5. The `GUI` is updated to show the new `TaskPanel` with no tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":206,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"KIANSEONG"},"content":"### Deleting a Task Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":209,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"amresh2000"},"content":"#### Current Implementation","lastModifiedDate":"2022-11-01"},{"lineNumber":211,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":212,"author":{"gitId":"KIANSEONG"},"content":"The `task delete` feature is implemented by removing the `task` indicated by user using a one-based `Index` from the currently filtered `TaskPanel`.","lastModifiedDate":"2022-11-07"},{"lineNumber":213,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"amresh2000"},"content":"#### Example Usage of `task delete`","lastModifiedDate":"2022-11-01"},{"lineNumber":215,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":216,"author":{"gitId":"amresh2000"},"content":"1. User launches Arrow and the `TaskPanel` is filled with all the existing `Task` entries that has been added by user.","lastModifiedDate":"2022-11-01"},{"lineNumber":217,"author":{"gitId":"amresh2000"},"content":"2. User types in the command `task delete 1`, where `1` is the specified index given in one-based form.","lastModifiedDate":"2022-11-01"},{"lineNumber":218,"author":{"gitId":"amresh2000"},"content":"3. The current state of the `TaskPanel` is obtained from `Model`.","lastModifiedDate":"2022-11-01"},{"lineNumber":219,"author":{"gitId":"amresh2000"},"content":"4. The `Task` to be deleted is then fetched from the `TaskPanel` using the specified `Index`, using its zero-based form.","lastModifiedDate":"2022-11-01"},{"lineNumber":220,"author":{"gitId":"amresh2000"},"content":"5. The `Task` is deleted from the `Model`.","lastModifiedDate":"2022-11-01"},{"lineNumber":221,"author":{"gitId":"amresh2000"},"content":"6. The `GUI` is updated to show the new `TaskPanel` with the `Task` deleted.","lastModifiedDate":"2022-11-01"},{"lineNumber":222,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":223,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"KIANSEONG"},"content":"### Editing a Task Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":225,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":226,"author":{"gitId":"amresh2000"},"content":"#### Current Implementation","lastModifiedDate":"2022-11-01"},{"lineNumber":227,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":228,"author":{"gitId":"amresh2000"},"content":"The task editing feature is primarily implemented within `EditTaskCommand` and the `EditTaskCommandParser` objects utilizing the help of `EditTaskDescriptor`.","lastModifiedDate":"2022-11-01"},{"lineNumber":229,"author":{"gitId":"amresh2000"},"content":"The `EditTaskDescriptor` object contains the new value(s) of the data that needs to be edited.","lastModifiedDate":"2022-11-01"},{"lineNumber":230,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":231,"author":{"gitId":"amresh2000"},"content":"#### Example usage of `task edit`","lastModifiedDate":"2022-11-01"},{"lineNumber":232,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":233,"author":{"gitId":"yilinzyl"},"content":"Step 1. The user adds a `Task` to the `TaskPanel`.","lastModifiedDate":"2022-11-07"},{"lineNumber":234,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":235,"author":{"gitId":"yilinzyl"},"content":"Step 2. The user types in the command `task edit 1 ti/TITLE`.","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"amresh2000"},"content":"   The `EditTaskCommand` is created together with the `EditTaskDescriptor` object as shown below.","lastModifiedDate":"2022-11-01"},{"lineNumber":237,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":238,"author":{"gitId":"amresh2000"},"content":"![Sequence diagram](images/EditTaskCommandParse.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":239,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":240,"author":{"gitId":"yilinzyl"},"content":"Step 3. The command return is executed. The copy of the `EditTaskDescriptor` object is used  during the `EditTaskCommand#createEditedTask` method, after which it is destroyed.","lastModifiedDate":"2022-11-07"},{"lineNumber":241,"author":{"gitId":"amresh2000"},"content":"   The edited copy of the task then replaces the current task in the task list.","lastModifiedDate":"2022-11-01"},{"lineNumber":242,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":243,"author":{"gitId":"amresh2000"},"content":"![Sequence diagram](images/EditTaskCommandExecute.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":244,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":245,"author":{"gitId":"yilinzyl"},"content":"Step 4. Finally, the GUI is updated to reflect the changes made. In this case, it will show the task at index 1 with the new title.","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":247,"author":{"gitId":"amresh2000"},"content":"#### `EditTaskDescriptor` implementation","lastModifiedDate":"2022-11-01"},{"lineNumber":248,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":249,"author":{"gitId":"amresh2000"},"content":"`EditTaskDescriptor` is implemented as a public nested class within `EditTaskCommand`. The class contains the edited values which are provided by the user that can be manipulated.","lastModifiedDate":"2022-11-01"},{"lineNumber":250,"author":{"gitId":"amresh2000"},"content":"`EditTaskDescriptor` has `get` and `set` methods:","lastModifiedDate":"2022-11-01"},{"lineNumber":251,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":252,"author":{"gitId":"amresh2000"},"content":"- `setTitle()` / `getTitle()`","lastModifiedDate":"2022-11-01"},{"lineNumber":253,"author":{"gitId":"amresh2000"},"content":"- `setProject()` / `getProject()`","lastModifiedDate":"2022-11-01"},{"lineNumber":254,"author":{"gitId":"amresh2000"},"content":"- `setDeadline()` / `getDeadline()`","lastModifiedDate":"2022-11-01"},{"lineNumber":255,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":256,"author":{"gitId":"amresh2000"},"content":"where the `get` methods return `Optional\u003cT\u003e` objects containing the value to be edited, if any.","lastModifiedDate":"2022-11-01"},{"lineNumber":257,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":258,"author":{"gitId":"amresh2000"},"content":"`EditTaskDescriptor` also has:","lastModifiedDate":"2022-11-01"},{"lineNumber":259,"author":{"gitId":"amresh2000"},"content":"1. A constructor which accepts another `EditTaskDescriptor`, which creates a defensive copy of the original, which is only called in the constructor of `EditTaskCommand`.","lastModifiedDate":"2022-11-01"},{"lineNumber":260,"author":{"gitId":"amresh2000"},"content":"2. A `isAnyFieldEdited` method is implemented to check whether the user input any values to be edited.","lastModifiedDate":"2022-11-01"},{"lineNumber":261,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":262,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":263,"author":{"gitId":"KIANSEONG"},"content":"### Listing Tasks feature","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"beetee17"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":266,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":267,"author":{"gitId":"beetee17"},"content":"The list tasks feature filters the tasks in the task panel according to the user input. For example, users can choose to view only tasks containing a certain keyword, e.g. \u0027fix\u0027.","lastModifiedDate":"2022-10-20"},{"lineNumber":268,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":269,"author":{"gitId":"beetee17"},"content":"Other filter parameters are also available, which can filter tasks by their completion status, due date and assigned contacts.","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"beetee17"},"content":"The following sequence diagram shows how the operation works:","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"beetee17"},"content":"![ListTasksSequenceDiagram](images/ListTasksSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"beetee17"},"content":"As observed above, the execution flow for this command is quite straightforward.","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"beetee17"},"content":"1. The user enters a list tasks command","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"beetee17"},"content":"2. The `LogicManager` detects that this is a `TaskCommand`, and therefore passes the user input to the `TaskPanelParser`","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"KIANSEONG"},"content":"3. The `TaskPanelParser` detects the `ListTaskCommand.COMMAND_WORD`, and therefore parses the command arguments via a `ListTaskCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":280,"author":{"gitId":"KIANSEONG"},"content":"4. The relevant parameters are used to create an instance of a `ListTaskCommandd`, which is then returned to the `TaskPanelParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"KIANSEONG"},"content":"5. The `LogicManager` executes the command","lastModifiedDate":"2022-11-07"},{"lineNumber":282,"author":{"gitId":"KIANSEONG"},"content":"6. The command generates the appropriate predicate based on its parameters, and filters the `Model`\u0027s task list.","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"beetee17"},"content":"Most of the work is done in the parsing step by the `ListTaskCommandParser`, and the execution step to generate the right predicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"beetee17"},"content":"The `ListTaskCommandParser` relies on the `ArgumentMultimap` abstraction, which helps to tokenize the user input by pre-specified prefixes. For example, the `before` prefix denotes that the user wishes to filter tasks that are before a certain deadline. Other prefixes include `-a` and `-c`, which function as flags to specify if all tasks should be shown (including completed ones), or to show completed or incomplete tasks only.","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"beetee17"},"content":":information_source: **Note:** If both the `-a` and `-c` flags are specified, the `-c` flag takes precedence. This is because the `ListTasksCommand` combines multiple predicates with a logical `AND`. Therefore, the `-a` flag becomes redundant if another more specific flag is also included i.e. `-c`.","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":290,"author":{"gitId":"beetee17"},"content":"The `ListTaskCommandParser` also relies on the `PrettyTime NLP` open-source library to parse dates described in plain English. This is relevant for the `before` and `after` prefixes.","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"beetee17"},"content":"Lastly, upon execution, the `ListTaskCommand` builds a single predicate to be used to filter the `Model`\u0027s task list. As mentioned above, multiple filters are combined with the logical `AND`. For example, `task list fix before tomorrow -c` shows all tasks that are completed, contain the keyowrd \u0027fix\u0027, **and** has a due date that is before tomorrow.","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"KIANSEONG"},"content":"### Marking a Task Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"KIANSEONG"},"content":"#### Current Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"KIANSEONG"},"content":"The `mark` feature is implemented by acting on the current filtered`TaskPanel` with a one-based `Index` specified by the user, getting the target `Task` at the specified index, and marking it.","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"wxy1203"},"content":"![MarkTaskSequenceDiagram](images/MarkTaskSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"KIANSEONG"},"content":"#### Example Usage of `task mark`","lastModifiedDate":"2022-11-07"},{"lineNumber":304,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"KIANSEONG"},"content":"1. User launches Arrow and the `TaskPanel` is populated with existing `Task` entries.","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"KIANSEONG"},"content":"2. User types in the command `task mark 1`, where `1` is the specified index given in one-based form.","lastModifiedDate":"2022-11-07"},{"lineNumber":307,"author":{"gitId":"KIANSEONG"},"content":"3. The current state of the `TaskPanel` is obtained from `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":308,"author":{"gitId":"KIANSEONG"},"content":"4. The `Task` to be marked is fetched from the `TaskPanel` using the specified `Index`, using its zero-based form.","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"KIANSEONG"},"content":"5. The `Task` is marked as completed.","lastModifiedDate":"2022-11-07"},{"lineNumber":310,"author":{"gitId":"KIANSEONG"},"content":"6. The `GUI` is updated to show the new `TaskPanel` with the `Task` marked as complete.","lastModifiedDate":"2022-11-07"},{"lineNumber":311,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":312,"author":{"gitId":"KIANSEONG"},"content":"### Unmarking a Task Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":314,"author":{"gitId":"KIANSEONG"},"content":"#### Current Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":315,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":316,"author":{"gitId":"wxy1203"},"content":"![MarkTaskSequenceDiagram](images/UnmarkTaskSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":318,"author":{"gitId":"KIANSEONG"},"content":"The `unmark` feature is implemented by acting on the current filtered `TaskPanel` with a one-based `Index` specified by the user, getting the target `Task` at the specified index, and unmarking it.","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":320,"author":{"gitId":"KIANSEONG"},"content":"#### Example Usage of `task unmark`","lastModifiedDate":"2022-11-07"},{"lineNumber":321,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":322,"author":{"gitId":"KIANSEONG"},"content":"1. User launches Arrow and the `TaskPanel` is populated with existing `Task` entries.","lastModifiedDate":"2022-11-07"},{"lineNumber":323,"author":{"gitId":"KIANSEONG"},"content":"2. User types in the command `task unmark 1`, where `1` is the specified index given in one-based form.","lastModifiedDate":"2022-11-07"},{"lineNumber":324,"author":{"gitId":"KIANSEONG"},"content":"3. The current state of the `TaskPanel` is obtained from `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":325,"author":{"gitId":"KIANSEONG"},"content":"4. The `Task` to be unmarked is fetched from the `TaskPanel` using the specified `Index`, using its zero-based form.","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"KIANSEONG"},"content":"5. The `Task` is marked as incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":327,"author":{"gitId":"KIANSEONG"},"content":"6. The `GUI` is updated to show the new `TaskPanel` with the `Task` marked as incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":329,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":330,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":331,"author":{"gitId":"yilinzyl"},"content":"### Assign Teammate(s) to a Task Feature","lastModifiedDate":"2022-11-07"},{"lineNumber":332,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":333,"author":{"gitId":"yilinzyl"},"content":"#### Current Implementation","lastModifiedDate":"2022-11-07"},{"lineNumber":334,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":335,"author":{"gitId":"yilinzyl"},"content":"The `task assign` feature allows the user to assign/unassign contacts to a task. ","lastModifiedDate":"2022-11-07"},{"lineNumber":336,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":337,"author":{"gitId":"yilinzyl"},"content":"The selection of tasks is implemented by acting on the current filtered `TaskPanel` with a one-based `Index` specified by the user, getting the target `Task` at the specified index. The selection of teammates is implemented by acting on the current filtered `AddressBook` with one or more one-based `Index` specified by the user, getting the target `Teammate` at the specified index. The selection of teammate can also be done through specifying the full name of the teammate, which is matched with the target `Teammate` in the filtered `AddressBook`.","lastModifiedDate":"2022-11-07"},{"lineNumber":338,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":339,"author":{"gitId":"yilinzyl"},"content":"![AssignTaskSequenceDiagram](images/AssignTaskSequenceDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":340,"author":{"gitId":"yilinzyl"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AssignTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-11-07"},{"lineNumber":341,"author":{"gitId":"yilinzyl"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":342,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":343,"author":{"gitId":"yilinzyl"},"content":"#### Example Usage of `task assign`","lastModifiedDate":"2022-11-07"},{"lineNumber":344,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":345,"author":{"gitId":"yilinzyl"},"content":"Step 1. User launches Arrow. The `TaskPanel` and `AddressBook` is populated with existing `Task` and `Teammate` entries respectively.","lastModifiedDate":"2022-11-07"},{"lineNumber":346,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":347,"author":{"gitId":"yilinzyl"},"content":"Step 2. User types in the command `task assign 1 +@2 -@Bernice Yu`. `1` is the specified index of `Task` in `TaskPanel` to be assigned to given in one-based form. `2` is the specified index of `Teammate` in the `AddressBook` to be assigned. \"Bernice Yu\" is the full name of the `Teammate` in the `AddressBook` to be unassigned.","lastModifiedDate":"2022-11-07"},{"lineNumber":348,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":349,"author":{"gitId":"yilinzyl"},"content":"Step 3. The `LogicManager` detects that this is a `TaskCommand`, and therefore passes the user input to the `TaskPanelParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":350,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":351,"author":{"gitId":"yilinzyl"},"content":"Step 4. The `TaskPanelParser` detects the `AssignTaskCommand.COMMAND_WORD`, and therefore parses the command arguments via a `AssignTaskCommandParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":352,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":353,"author":{"gitId":"yilinzyl"},"content":"Step 5. The relevant parameters are used to create an instance of a `AssignTaskCommand`, which is then returned to the `TaskPanelParser`","lastModifiedDate":"2022-11-07"},{"lineNumber":354,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":355,"author":{"gitId":"yilinzyl"},"content":"Step 6. The `LogicManager` executes the command","lastModifiedDate":"2022-11-07"},{"lineNumber":356,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":357,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":358,"author":{"gitId":"yilinzyl"},"content":"![AssignTaskSequenceDiagramReferenceFrame](images/AssignTaskSequenceDiagramReferenceFrame.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":359,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":360,"author":{"gitId":"yilinzyl"},"content":"Step 7. The command obtains the current state of the `TaskPanel` and `AddressBook` from `Model`.","lastModifiedDate":"2022-11-07"},{"lineNumber":361,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":362,"author":{"gitId":"yilinzyl"},"content":"Step 8. The `Task` to be modified is fetched from the `TaskPanel` using the specified `Index`, using its zero-based form.","lastModifiedDate":"2022-11-07"},{"lineNumber":363,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":364,"author":{"gitId":"yilinzyl"},"content":"Note: if the `Index` provided is invalid, an exception will be thrown and user will retype their command.","lastModifiedDate":"2022-11-07"},{"lineNumber":365,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":366,"author":{"gitId":"yilinzyl"},"content":"Step 9. The `Teammate`s to be assigned are fetched from the `AddressBook` using the specified `Index`, using its zero-based form, or through matching his full name.","lastModifiedDate":"2022-11-07"},{"lineNumber":367,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":368,"author":{"gitId":"yilinzyl"},"content":"Note: if the `Index` of teammates is invalid, an exception will be thrown and user will retype their command.","lastModifiedDate":"2022-11-07"},{"lineNumber":369,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":370,"author":{"gitId":"yilinzyl"},"content":"Note: if the full name provided by user does not match any `Teammate`, an exception will be thrown and user will retype their command.","lastModifiedDate":"2022-11-07"},{"lineNumber":371,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":372,"author":{"gitId":"yilinzyl"},"content":"Step 10. For each `Teammate` to be assigned, a `Contact` is created using the `Teammate`s\u0027 name.","lastModifiedDate":"2022-11-07"},{"lineNumber":373,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":374,"author":{"gitId":"yilinzyl"},"content":"Step 11. The modified `Task` is created with the newly assigned `Contact`s","lastModifiedDate":"2022-11-07"},{"lineNumber":375,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":376,"author":{"gitId":"yilinzyl"},"content":"Step 12. The `Model` is updated with the modified `Task`.","lastModifiedDate":"2022-11-07"},{"lineNumber":377,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":378,"author":{"gitId":"yilinzyl"},"content":"Step 13. The `GUI` is updated to show the new `TaskPanel` with the `Task`\u0027s assigned contacts updated.","lastModifiedDate":"2022-11-07"},{"lineNumber":379,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":380,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":381,"author":{"gitId":"yilinzyl"},"content":"The AssignTaskCommandParser relies on the ArgumentMultimap abstraction, which helps to tokenize the user input by pre-specified prefixes. The prefix `+@` denotes that the contact is to be assigned, while prefix `-@` denotes that the contact is to be unassigned from the task\u0027s assigned contact list.","lastModifiedDate":"2022-11-07"},{"lineNumber":382,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":383,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":384,"author":{"gitId":"KIANSEONG"},"content":"### Task Class Design Considerations:","lastModifiedDate":"2022-11-07"},{"lineNumber":385,"author":{"gitId":"KIANSEONG"},"content":"![TaskClassDiagram](images/TaskClassDiagram.png)","lastModifiedDate":"2022-11-07"},{"lineNumber":386,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":387,"author":{"gitId":"yilinzyl"},"content":"The `Task` class composes of the `Contact` class. A `Contact` object is a reference to a `Teammate` in the `AddressBook`, and contains the name of the `Teammate`. We chose this implementation over composing `Task` and `Teammate` directly so that it will be easier to save the `Task`\u0027s assigned contacts in the storage. Furthermore, this prevents duplicated copies of `Teammate` objects created when we restart the app and populate the `Task`s with their assigned contacts.","lastModifiedDate":"2022-11-07"},{"lineNumber":388,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":389,"author":{"gitId":"yilinzyl"},"content":"All `Tasks` are iterated through with their assigned `Contact`s updated upon edition/deletion of a `Teammate`, to ensure `Contact` always points to an existing `Teammate` and contains up-to-date information about the `Teammate`.","lastModifiedDate":"2022-11-07"},{"lineNumber":390,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"KIANSEONG"},"content":"Step 2. The user executes `delete 5` command to delete the 5th teammate in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-11-06"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"KIANSEONG"},"content":"Step 3. The user executes `add n/David …​` to add a new teammate. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-11-06"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"KIANSEONG"},"content":"Step 4. The user now decides that adding the teammate was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-11-06"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"KIANSEONG"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the teammate being deleted).","lastModifiedDate":"2022-11-06"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":476,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":478,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"KIANSEONG"},"content":"* has a need to manage tasks of members","lastModifiedDate":"2022-10-04"},{"lineNumber":491,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":494,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"KIANSEONG"},"content":"**Value proposition**: This app will help users easily manage multiple projects from one place. By associating tasks to specific team members, users can keep track of what needs to be done and by who, and quickly reach out to the relevant members if needed.","lastModifiedDate":"2022-10-04"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"beetee17"},"content":"| s/n | Priority | User Story                                                                                                                                                                       |","lastModifiedDate":"2022-10-04"},{"lineNumber":504,"author":{"gitId":"KIANSEONG"},"content":"|-----|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-27"},{"lineNumber":505,"author":{"gitId":"beetee17"},"content":"| 1   | ***      | As a user, I can add a task.                                                                                                                                                     |","lastModifiedDate":"2022-10-04"},{"lineNumber":506,"author":{"gitId":"beetee17"},"content":"| 2   | ***      | As a user, I can add a contact.                                                                                                                                                  |","lastModifiedDate":"2022-10-04"},{"lineNumber":507,"author":{"gitId":"beetee17"},"content":"| 3   | ***      | As a user, I can assign a task to a specific contact, so that I can keep track of which tasks he/she is responsible for.                                                         |","lastModifiedDate":"2022-10-04"},{"lineNumber":508,"author":{"gitId":"beetee17"},"content":"| 4   | ***      | As a user, I can view all tasks.                                                                                                                                                 |","lastModifiedDate":"2022-10-04"},{"lineNumber":509,"author":{"gitId":"beetee17"},"content":"| 5   | ***      | As a user, I can view the tasks associated with a specific contact, so that I can easily see which tasks he/she has yet to complete.                                             |","lastModifiedDate":"2022-10-04"},{"lineNumber":510,"author":{"gitId":"beetee17"},"content":"| 6   | ***      | As a user, I can delete a task, so that I can remove unwanted tasks, or tasks that were entered incorrectly.                                                                     |","lastModifiedDate":"2022-10-04"},{"lineNumber":511,"author":{"gitId":"beetee17"},"content":"| 7   | ***      | As a user, I can mark a task as complete or incomplete, so that I can monitor and upgrade his/her progress.                                                                      |","lastModifiedDate":"2022-10-04"},{"lineNumber":512,"author":{"gitId":"beetee17"},"content":"| 8   | ***      | As a user, I can delete a contact, so that I can keep my contacts list up to date.                                                                                               |","lastModifiedDate":"2022-10-04"},{"lineNumber":513,"author":{"gitId":"beetee17"},"content":"| 9   | **       | As a user, I can search for a contact name, so that I can easily find his details.                                                                                               |","lastModifiedDate":"2022-10-04"},{"lineNumber":514,"author":{"gitId":"beetee17"},"content":"| 10  | **       | As a user, I can easily copy a contact\u0027s email, so that I can quickly paste it when I have to contact the team member.                                                           |","lastModifiedDate":"2022-10-04"},{"lineNumber":515,"author":{"gitId":"beetee17"},"content":"| 11  | **       | As a user, I can modify a task’s associated contact, so that I can reassign certain tasks to other team members.                                                                 |","lastModifiedDate":"2022-10-04"},{"lineNumber":516,"author":{"gitId":"beetee17"},"content":"| 12  | **       | As a user, I can edit a contact, so that I can keep my contact list updated with the latest changes.                                                                             |","lastModifiedDate":"2022-10-04"},{"lineNumber":517,"author":{"gitId":"beetee17"},"content":"| 13  | **       | As a user, I can associate a task with a date, so that I can record down the deadline I have set for a task.                                                                     |","lastModifiedDate":"2022-10-04"},{"lineNumber":518,"author":{"gitId":"beetee17"},"content":"| 14  | **       | As a user, I can view all tasks sorted by date, so that I can identify which tasks are the most urgent.                                                                          |","lastModifiedDate":"2022-10-04"},{"lineNumber":519,"author":{"gitId":"beetee17"},"content":"| 15  | **       | As a user, I can filter tasks by whether or not they have been completed, so that I can identify incomplete tasks.                                                               |","lastModifiedDate":"2022-10-04"},{"lineNumber":520,"author":{"gitId":"beetee17"},"content":"| 16  | **       | As a user, I can edit the details of a task, so that I can update the deadline or the deliverables.                                                                              |","lastModifiedDate":"2022-10-04"},{"lineNumber":521,"author":{"gitId":"beetee17"},"content":"| 17  | **       | As a user, I can create a task without assigning it to any contact, so that I can always choose to assign it later when I have more details of the task or project.              |","lastModifiedDate":"2022-10-04"},{"lineNumber":522,"author":{"gitId":"beetee17"},"content":"| 18  | **       | As a user, I can filter tasks by whether or not it has been assigned to a contact, so that I can identify the tasks I have to assign later on.                                   |","lastModifiedDate":"2022-10-04"},{"lineNumber":523,"author":{"gitId":"KIANSEONG"},"content":"| 19  | *        | As a user, I can associate a task with multiple contacts, so that I can assign a task with a higher workload to more than one teammate to work on it.                            |","lastModifiedDate":"2022-11-06"},{"lineNumber":524,"author":{"gitId":"beetee17"},"content":"| 20  | *        | As a user, I can associate a task with a project (which are collections of tasks), so that I can group related tasks together and separate them by the many projects I may have. |","lastModifiedDate":"2022-10-04"},{"lineNumber":525,"author":{"gitId":"beetee17"},"content":"| 21  | *        | As a user, I can tag tasks to milestones/versions, so that I can ensure each version is ready by the delivery date.                                                              |","lastModifiedDate":"2022-10-04"},{"lineNumber":526,"author":{"gitId":"beetee17"},"content":"| 22  | *        | As a user, I can associate a contact with a project, so that I can assign a task to only contacts with the specific project.                                                     |","lastModifiedDate":"2022-10-04"},{"lineNumber":527,"author":{"gitId":"beetee17"},"content":"| 23  | *        | As a user, I can tag my contact\u0027s roles and positions, so that I can easily plan what kind of work to assign to him.                                                             |","lastModifiedDate":"2022-10-04"},{"lineNumber":528,"author":{"gitId":"beetee17"},"content":"| 24  | *        | As a user, I can choose to view only the tasks associated with a project, so that I can focus myself on that specific project.                                                   |","lastModifiedDate":"2022-10-04"},{"lineNumber":529,"author":{"gitId":"beetee17"},"content":"| 25  | *        | As a user, I can check if each member has finished their certain amount of tasks, so that I can monitor the progress of the team project.                                        |","lastModifiedDate":"2022-10-04"},{"lineNumber":530,"author":{"gitId":"beetee17"},"content":"| 26  | *        | As a user, I can check the date and time for projects or tasks, so that I can plan out the work needed to be done.                                                               |","lastModifiedDate":"2022-10-04"},{"lineNumber":531,"author":{"gitId":"KIANSEONG"},"content":"| 27  | *        | As a user, I can set priority for the tasks, so that I can find out which are the most important.                                                                                |","lastModifiedDate":"2022-10-27"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"KIANSEONG"},"content":"(For all use cases below, the **System** is the `Arrow` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-10-04"},{"lineNumber":536,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":537,"author":{"gitId":"KIANSEONG"},"content":"**Use case: UC01 - Add a teammate**","lastModifiedDate":"2022-11-06"},{"lineNumber":538,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":539,"author":{"gitId":"KIANSEONG"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":540,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":541,"author":{"gitId":"KIANSEONG"},"content":"1. User requests to add teammate and provides name, phone, address and email.","lastModifiedDate":"2022-11-06"},{"lineNumber":542,"author":{"gitId":"KIANSEONG"},"content":"2. Arrow adds teammate to list of teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":543,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":544,"author":{"gitId":"KIANSEONG"},"content":"   Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":545,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":546,"author":{"gitId":"KIANSEONG"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":547,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":548,"author":{"gitId":"yilinzyl"},"content":"* 1a. There is no name provided.","lastModifiedDate":"2022-10-04"},{"lineNumber":549,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":550,"author":{"gitId":"KIANSEONG"},"content":"    * 1a1. Arrow shows an error message.","lastModifiedDate":"2022-10-04"},{"lineNumber":551,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":552,"author":{"gitId":"KIANSEONG"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2022-10-04"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"KIANSEONG"},"content":"* 1b. There is no phone provided.","lastModifiedDate":"2022-11-06"},{"lineNumber":555,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":556,"author":{"gitId":"KIANSEONG"},"content":"    * 1b1. Arrow shows an error message.","lastModifiedDate":"2022-11-06"},{"lineNumber":557,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":558,"author":{"gitId":"KIANSEONG"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2022-11-06"},{"lineNumber":559,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":560,"author":{"gitId":"KIANSEONG"},"content":"* 1c. There is no address provided.","lastModifiedDate":"2022-11-06"},{"lineNumber":561,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":562,"author":{"gitId":"KIANSEONG"},"content":"    * 1c1. Arrow shows an error message.","lastModifiedDate":"2022-11-06"},{"lineNumber":563,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":564,"author":{"gitId":"KIANSEONG"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2022-11-06"},{"lineNumber":565,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":566,"author":{"gitId":"KIANSEONG"},"content":"* 1d. There is no email provided.","lastModifiedDate":"2022-11-06"},{"lineNumber":567,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":568,"author":{"gitId":"KIANSEONG"},"content":"    * 1d1. Arrow shows an error message.","lastModifiedDate":"2022-11-06"},{"lineNumber":569,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":570,"author":{"gitId":"KIANSEONG"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2022-11-06"},{"lineNumber":571,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":572,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":573,"author":{"gitId":"KIANSEONG"},"content":"**Use case: UC02 - List all teammates**","lastModifiedDate":"2022-11-06"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"KIANSEONG"},"content":"1. User requests to list all teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":578,"author":{"gitId":"KIANSEONG"},"content":"2. Arrow shows a list of all teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":589,"author":{"gitId":"KIANSEONG"},"content":"**Use case: UC03 - Delete a teammate**","lastModifiedDate":"2022-11-06"},{"lineNumber":590,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":591,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":592,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":593,"author":{"gitId":"KIANSEONG"},"content":"1.  User requests to list teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":594,"author":{"gitId":"KIANSEONG"},"content":"2.  Arrow shows a list of teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":595,"author":{"gitId":"KIANSEONG"},"content":"3.  User requests to delete a specific teammate in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":596,"author":{"gitId":"KIANSEONG"},"content":"4.  Arrow deletes the teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":597,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":598,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":599,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":600,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":601,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":602,"author":{"gitId":"yilinzyl"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-04"},{"lineNumber":603,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":604,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":605,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":606,"author":{"gitId":"yilinzyl"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":607,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":608,"author":{"gitId":"yilinzyl"},"content":"    * 3a1. Arrow shows an error message.","lastModifiedDate":"2022-10-04"},{"lineNumber":609,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":610,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-04"},{"lineNumber":611,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":613,"author":{"gitId":"KIANSEONG"},"content":"**Use case: UC04 - Edit a teammate**","lastModifiedDate":"2022-11-06"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":615,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":617,"author":{"gitId":"KIANSEONG"},"content":"1.  User requests to list teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":618,"author":{"gitId":"KIANSEONG"},"content":"2.  Arrow shows a list of teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":619,"author":{"gitId":"KIANSEONG"},"content":"3.  User requests to edit a specific teammate in the list and provides new information.","lastModifiedDate":"2022-11-06"},{"lineNumber":620,"author":{"gitId":"KIANSEONG"},"content":"4.  Arrow updates the teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":624,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":626,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-04"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":630,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":632,"author":{"gitId":"yilinzyl"},"content":"    * 3a1. Arrow shows an error message.","lastModifiedDate":"2022-10-04"},{"lineNumber":633,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":634,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-04"},{"lineNumber":635,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":636,"author":{"gitId":"yilinzyl"},"content":"* 3b. There is no new information provided.","lastModifiedDate":"2022-10-04"},{"lineNumber":637,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":638,"author":{"gitId":"yilinzyl"},"content":"    * 3b1. Arrow shows an error message.","lastModifiedDate":"2022-10-04"},{"lineNumber":639,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":640,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-04"},{"lineNumber":641,"author":{"gitId":"yilinzyl"},"content":"      ","lastModifiedDate":"2022-10-04"},{"lineNumber":642,"author":{"gitId":"yilinzyl"},"content":"      ","lastModifiedDate":"2022-11-07"},{"lineNumber":643,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC05 - Find a teammate by name**","lastModifiedDate":"2022-11-07"},{"lineNumber":644,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":645,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":646,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":647,"author":{"gitId":"yilinzyl"},"content":"1. User requests to find a teammate and provides keyword(s) to search for.","lastModifiedDate":"2022-11-07"},{"lineNumber":648,"author":{"gitId":"yilinzyl"},"content":"2. Arrow shows a list of all teammates with names containing keyword.","lastModifiedDate":"2022-11-07"},{"lineNumber":649,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":650,"author":{"gitId":"yilinzyl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":651,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":652,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":653,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":654,"author":{"gitId":"yilinzyl"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":655,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":656,"author":{"gitId":"yilinzyl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":657,"author":{"gitId":"yilinzyl"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":658,"author":{"gitId":"yilinzyl"},"content":"   ","lastModifiedDate":"2022-11-07"},{"lineNumber":659,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC06 - Find a teammate by tag**","lastModifiedDate":"2022-11-07"},{"lineNumber":660,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":661,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":662,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":663,"author":{"gitId":"yilinzyl"},"content":"1. User requests to find a teammate and provides tag(s) to search for.","lastModifiedDate":"2022-11-07"},{"lineNumber":664,"author":{"gitId":"yilinzyl"},"content":"2. Arrow shows a list of all teammates containing the tag.","lastModifiedDate":"2022-11-07"},{"lineNumber":665,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":666,"author":{"gitId":"yilinzyl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":667,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":668,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":669,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":670,"author":{"gitId":"yilinzyl"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":671,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":672,"author":{"gitId":"yilinzyl"},"content":"   Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":673,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":674,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":675,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC07 - Add a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":676,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":677,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":678,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":679,"author":{"gitId":"yilinzyl"},"content":"1.  User requests to add task and provides task name.","lastModifiedDate":"2022-11-07"},{"lineNumber":680,"author":{"gitId":"yilinzyl"},"content":"2.  Arrow adds the task to the list of tasks.","lastModifiedDate":"2022-10-14"},{"lineNumber":681,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":682,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":683,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":684,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":685,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":686,"author":{"gitId":"yilinzyl"},"content":"* 1b. There is no task name provided.","lastModifiedDate":"2022-11-07"},{"lineNumber":687,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":688,"author":{"gitId":"yilinzyl"},"content":"    * 1b1. Arrow shows an error message.","lastModifiedDate":"2022-10-14"},{"lineNumber":689,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":690,"author":{"gitId":"yilinzyl"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2022-10-14"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":693,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC08 - Delete a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":694,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":695,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":696,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":697,"author":{"gitId":"amresh2000"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2022-11-01"},{"lineNumber":698,"author":{"gitId":"amresh2000"},"content":"2.  Arrow shows a list of tasks.","lastModifiedDate":"2022-11-01"},{"lineNumber":699,"author":{"gitId":"amresh2000"},"content":"3.  User requests to delete a specific task in the tasks list.","lastModifiedDate":"2022-11-01"},{"lineNumber":700,"author":{"gitId":"amresh2000"},"content":"4.  Arrow deletes the task.","lastModifiedDate":"2022-11-01"},{"lineNumber":701,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":702,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":703,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":704,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":705,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":706,"author":{"gitId":"amresh2000"},"content":"* 1a. The tasks list is empty.","lastModifiedDate":"2022-11-01"},{"lineNumber":707,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":708,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":709,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":710,"author":{"gitId":"amresh2000"},"content":"* 3a. The given task index is invalid.","lastModifiedDate":"2022-11-01"},{"lineNumber":711,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":712,"author":{"gitId":"amresh2000"},"content":"    * 3a1. Arrow shows an error message.","lastModifiedDate":"2022-11-01"},{"lineNumber":713,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":714,"author":{"gitId":"amresh2000"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-01"},{"lineNumber":715,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":716,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":717,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC09 - Edit a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":718,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":719,"author":{"gitId":"amresh2000"},"content":"**MSS**","lastModifiedDate":"2022-11-01"},{"lineNumber":720,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":721,"author":{"gitId":"amresh2000"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2022-11-01"},{"lineNumber":722,"author":{"gitId":"amresh2000"},"content":"2.  Arrow shows a list of tasks.","lastModifiedDate":"2022-11-01"},{"lineNumber":723,"author":{"gitId":"amresh2000"},"content":"3.  User requests to edit a specific task in the list and provides new information.","lastModifiedDate":"2022-11-01"},{"lineNumber":724,"author":{"gitId":"amresh2000"},"content":"4.  Arrow updates the task.","lastModifiedDate":"2022-11-01"},{"lineNumber":725,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":726,"author":{"gitId":"amresh2000"},"content":"    Use case ends.","lastModifiedDate":"2022-11-01"},{"lineNumber":727,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":728,"author":{"gitId":"amresh2000"},"content":"**Extensions**","lastModifiedDate":"2022-11-01"},{"lineNumber":729,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":730,"author":{"gitId":"amresh2000"},"content":"* 1a. The tasks list is empty.","lastModifiedDate":"2022-11-01"},{"lineNumber":731,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":732,"author":{"gitId":"amresh2000"},"content":"  Use case ends.","lastModifiedDate":"2022-11-01"},{"lineNumber":733,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":734,"author":{"gitId":"amresh2000"},"content":"* 3a. The given task index is invalid.","lastModifiedDate":"2022-11-01"},{"lineNumber":735,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":736,"author":{"gitId":"amresh2000"},"content":"    * 3a1. Arrow shows an error message.","lastModifiedDate":"2022-11-01"},{"lineNumber":737,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":738,"author":{"gitId":"amresh2000"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-01"},{"lineNumber":739,"author":{"gitId":"amresh2000"},"content":"      ","lastModifiedDate":"2022-11-01"},{"lineNumber":740,"author":{"gitId":"yilinzyl"},"content":"* 3b. There is no new information provided.","lastModifiedDate":"2022-11-07"},{"lineNumber":741,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":742,"author":{"gitId":"yilinzyl"},"content":"    * 3b1. Arrow shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":743,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":744,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 2.      ","lastModifiedDate":"2022-11-07"},{"lineNumber":745,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":746,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":747,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC10 - Mark a task as complete**","lastModifiedDate":"2022-11-07"},{"lineNumber":748,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":749,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":750,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":751,"author":{"gitId":"yilinzyl"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":752,"author":{"gitId":"yilinzyl"},"content":"2.  Arrow shows a list of tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":753,"author":{"gitId":"yilinzyl"},"content":"3.  User requests to mark a task in the list to be complete.","lastModifiedDate":"2022-11-07"},{"lineNumber":754,"author":{"gitId":"yilinzyl"},"content":"4.  Arrow shows the task to be complete.","lastModifiedDate":"2022-11-07"},{"lineNumber":755,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":756,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":757,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":758,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":759,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":760,"author":{"gitId":"yilinzyl"},"content":"* 2a. The tasks list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":761,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":762,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":763,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":764,"author":{"gitId":"yilinzyl"},"content":"* 3a. The given task index is invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":765,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":766,"author":{"gitId":"yilinzyl"},"content":"    * 3a1. Arrow shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":768,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":770,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":771,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC11 - Mark a task as incomplete**","lastModifiedDate":"2022-11-07"},{"lineNumber":772,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":773,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":774,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":775,"author":{"gitId":"yilinzyl"},"content":"1.  User requests to list tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":776,"author":{"gitId":"yilinzyl"},"content":"2.  Arrow shows a list of tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":777,"author":{"gitId":"yilinzyl"},"content":"3.  User requests to mark a task in the list to be incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":778,"author":{"gitId":"yilinzyl"},"content":"4.  Arrow shows the task to be incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":779,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":780,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":781,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":782,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":783,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":784,"author":{"gitId":"yilinzyl"},"content":"* 2a. The tasks list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":785,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":786,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":787,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":788,"author":{"gitId":"yilinzyl"},"content":"* 3a. The given task index is invalid.","lastModifiedDate":"2022-11-07"},{"lineNumber":789,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":790,"author":{"gitId":"yilinzyl"},"content":"    * 3a1. Arrow shows an error message.","lastModifiedDate":"2022-11-07"},{"lineNumber":791,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":792,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-11-07"},{"lineNumber":793,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":794,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":795,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC12 - List tasks**","lastModifiedDate":"2022-11-07"},{"lineNumber":796,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":797,"author":{"gitId":"amresh2000"},"content":"**MSS**","lastModifiedDate":"2022-11-01"},{"lineNumber":798,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":799,"author":{"gitId":"amresh2000"},"content":"1.  User requests to list all tasks.","lastModifiedDate":"2022-11-01"},{"lineNumber":800,"author":{"gitId":"amresh2000"},"content":"2.  Arrow shows a list of all tasks.","lastModifiedDate":"2022-11-01"},{"lineNumber":801,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":802,"author":{"gitId":"amresh2000"},"content":"    Use case ends.","lastModifiedDate":"2022-11-01"},{"lineNumber":803,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":804,"author":{"gitId":"amresh2000"},"content":"**Extensions**","lastModifiedDate":"2022-11-01"},{"lineNumber":805,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":806,"author":{"gitId":"amresh2000"},"content":"* 1a. The task list is empty.","lastModifiedDate":"2022-11-01"},{"lineNumber":807,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":808,"author":{"gitId":"amresh2000"},"content":"  Use case ends.","lastModifiedDate":"2022-11-01"},{"lineNumber":809,"author":{"gitId":"yilinzyl"},"content":"  ","lastModifiedDate":"2022-10-04"},{"lineNumber":810,"author":{"gitId":"amresh2000"},"content":"  ","lastModifiedDate":"2022-11-01"},{"lineNumber":811,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC13 - Filter tasks**","lastModifiedDate":"2022-11-07"},{"lineNumber":812,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":813,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-14"},{"lineNumber":814,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":815,"author":{"gitId":"yilinzyl"},"content":"1.  User requests to filter tasks based on name/completion status/assigned contact/deadlines/projects.","lastModifiedDate":"2022-11-07"},{"lineNumber":816,"author":{"gitId":"yilinzyl"},"content":"2.  Arrow shows a list of filtered tasks.","lastModifiedDate":"2022-11-07"},{"lineNumber":817,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":818,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":819,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":820,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-14"},{"lineNumber":821,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":822,"author":{"gitId":"yilinzyl"},"content":"* 1a. The task list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":823,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":824,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":825,"author":{"gitId":"yilinzyl"},"content":"  ","lastModifiedDate":"2022-10-04"},{"lineNumber":826,"author":{"gitId":"yilinzyl"},"content":"  ","lastModifiedDate":"2022-11-07"},{"lineNumber":827,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC14 - Sort tasks**","lastModifiedDate":"2022-11-07"},{"lineNumber":828,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":829,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":830,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":831,"author":{"gitId":"yilinzyl"},"content":"1.  User requests to sort tasks based on deadline.","lastModifiedDate":"2022-11-07"},{"lineNumber":832,"author":{"gitId":"yilinzyl"},"content":"2.  Arrow shows a list of tasks sorted by deadline.","lastModifiedDate":"2022-11-07"},{"lineNumber":833,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":834,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":835,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":836,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-11-07"},{"lineNumber":837,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":838,"author":{"gitId":"yilinzyl"},"content":"* 1a. The task list is empty.","lastModifiedDate":"2022-11-07"},{"lineNumber":839,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":840,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":841,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":842,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":843,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC15 - Assign teammates to a task**","lastModifiedDate":"2022-11-07"},{"lineNumber":844,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":845,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-10-04"},{"lineNumber":846,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":847,"author":{"gitId":"KIANSEONG"},"content":"1.  User requests to list teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":848,"author":{"gitId":"KIANSEONG"},"content":"2.  Arrow shows a list of teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":849,"author":{"gitId":"yilinzyl"},"content":"3.  User requests to list tasks.","lastModifiedDate":"2022-10-14"},{"lineNumber":850,"author":{"gitId":"yilinzyl"},"content":"4.  Arrow shows a list of tasks.","lastModifiedDate":"2022-10-14"},{"lineNumber":851,"author":{"gitId":"KIANSEONG"},"content":"5.  User requests to assign/unassign teammates in the teammates list to a specific task in the tasks list.","lastModifiedDate":"2022-11-06"},{"lineNumber":852,"author":{"gitId":"KIANSEONG"},"content":"6.  Arrow assigns/unassigns the teammates to the task.","lastModifiedDate":"2022-11-06"},{"lineNumber":853,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":854,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":855,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":856,"author":{"gitId":"yilinzyl"},"content":"**Extensions**","lastModifiedDate":"2022-10-04"},{"lineNumber":857,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":858,"author":{"gitId":"KIANSEONG"},"content":"* 1a. The teammates list is empty.","lastModifiedDate":"2022-11-06"},{"lineNumber":859,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":860,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":861,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":862,"author":{"gitId":"yilinzyl"},"content":"* 3a. The tasks list is empty.","lastModifiedDate":"2022-10-14"},{"lineNumber":863,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":864,"author":{"gitId":"yilinzyl"},"content":"  Use case ends.","lastModifiedDate":"2022-10-04"},{"lineNumber":865,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":866,"author":{"gitId":"KIANSEONG"},"content":"* 5a. The given task and/or teammate index is invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":867,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":868,"author":{"gitId":"yilinzyl"},"content":"    * 5a1. Arrow shows an error message.","lastModifiedDate":"2022-10-04"},{"lineNumber":869,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":870,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2022-10-04"},{"lineNumber":871,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":872,"author":{"gitId":"KIANSEONG"},"content":"* 5b. The given teammate name is invalid.","lastModifiedDate":"2022-11-06"},{"lineNumber":873,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":874,"author":{"gitId":"yilinzyl"},"content":"    * 5b1. Arrow shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":875,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":876,"author":{"gitId":"yilinzyl"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2022-10-18"},{"lineNumber":877,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":878,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":879,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC16 - List Project**","lastModifiedDate":"2022-11-07"},{"lineNumber":880,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":881,"author":{"gitId":"wxy1203"},"content":"**MSS**","lastModifiedDate":"2022-10-16"},{"lineNumber":882,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":883,"author":{"gitId":"amresh2000"},"content":"1.  User requests to list all projects.","lastModifiedDate":"2022-11-01"},{"lineNumber":884,"author":{"gitId":"amresh2000"},"content":"2.  Arrow shows a list of all project.","lastModifiedDate":"2022-11-01"},{"lineNumber":885,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":886,"author":{"gitId":"wxy1203"},"content":"    Use case ends.","lastModifiedDate":"2022-10-16"},{"lineNumber":887,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":888,"author":{"gitId":"wxy1203"},"content":"**Extensions**","lastModifiedDate":"2022-10-16"},{"lineNumber":889,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":890,"author":{"gitId":"amresh2000"},"content":"* 1a. No projects available.","lastModifiedDate":"2022-11-01"},{"lineNumber":891,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":892,"author":{"gitId":"wxy1203"},"content":"  Use case ends.","lastModifiedDate":"2022-10-16"},{"lineNumber":893,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":894,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":895,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC17 - Clear the address book**","lastModifiedDate":"2022-11-07"},{"lineNumber":896,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":897,"author":{"gitId":"yilinzyl"},"content":"**MSS**","lastModifiedDate":"2022-11-07"},{"lineNumber":898,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":899,"author":{"gitId":"yilinzyl"},"content":"1.  User requests to clear address book.","lastModifiedDate":"2022-11-07"},{"lineNumber":900,"author":{"gitId":"yilinzyl"},"content":"2.  Arrow shows a new empty address book.","lastModifiedDate":"2022-11-07"},{"lineNumber":901,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":902,"author":{"gitId":"yilinzyl"},"content":"    Use case ends.","lastModifiedDate":"2022-11-07"},{"lineNumber":903,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":904,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":905,"author":{"gitId":"yilinzyl"},"content":"**Use case: UC18 - Clear the task panel**","lastModifiedDate":"2022-11-07"},{"lineNumber":906,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":907,"author":{"gitId":"wxy1203"},"content":"**MSS**","lastModifiedDate":"2022-10-27"},{"lineNumber":908,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":909,"author":{"gitId":"wxy1203"},"content":"1.  User requests to clear task panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":910,"author":{"gitId":"wxy1203"},"content":"2.  Arrow shows a new empty task panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":911,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":912,"author":{"gitId":"wxy1203"},"content":"    Use case ends.","lastModifiedDate":"2022-10-27"},{"lineNumber":913,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":917,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"KIANSEONG"},"content":"2.  Should be able to hold up to 1000 teammates without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-11-06"},{"lineNumber":919,"author":{"gitId":"amresh2000"},"content":"3.  Should be able to hold up to 500 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-03"},{"lineNumber":920,"author":{"gitId":"amresh2000"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-03"},{"lineNumber":921,"author":{"gitId":"amresh2000"},"content":"5.  Any changes to the data should be saved permanently and automatically.","lastModifiedDate":"2022-10-03"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"wxy1203"},"content":"* **Issue**: Issue on GitHub to track your work on a project","lastModifiedDate":"2022-10-03"},{"lineNumber":928,"author":{"gitId":"wxy1203"},"content":"* **Repository**: A repository (GitHub) contains all of your project\u0027s files","lastModifiedDate":"2022-10-03"},{"lineNumber":929,"author":{"gitId":"wxy1203"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-10-03"},{"lineNumber":930,"author":{"gitId":"wxy1203"},"content":"* **Task**: An item or activity that needs to be completed and contributes towards the progress of the project","lastModifiedDate":"2022-10-03"},{"lineNumber":931,"author":{"gitId":"KIANSEONG"},"content":"* **User**: Teammate in charge of a software engineering project","lastModifiedDate":"2022-11-06"},{"lineNumber":932,"author":{"gitId":"wxy1203"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-10-03"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":934,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"KIANSEONG"},"content":"    2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-11-06"},{"lineNumber":952,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"KIANSEONG"},"content":"2. Saving window preferences","lastModifiedDate":"2022-11-06"},{"lineNumber":954,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"KIANSEONG"},"content":"    2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":958,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"KIANSEONG"},"content":"### Deleting a Teammate","lastModifiedDate":"2022-11-07"},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"KIANSEONG"},"content":"1. Deleting a teammate while all teammates are being shown","lastModifiedDate":"2022-11-06"},{"lineNumber":963,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"KIANSEONG"},"content":"    1. Prerequisites: List all teammates using the `list` command. Multiple teammates in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":965,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"KIANSEONG"},"content":"    2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":967,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"KIANSEONG"},"content":"    3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":970,"author":{"gitId":"KIANSEONG"},"content":"       Expected: No teammate is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-11-06"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"KIANSEONG"},"content":"    4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":973,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":182,"amresh2000":99,"wxy1203":36,"beetee17":53,"-":313,"yilinzyl":290}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"subtitle: Explore our guide to use Arrow","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"Welcome to **Arrow** User Guide! This user guide will give a descriptive instruction on how to use **Arrow**.","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"The _words_ _in_ _italic_ are terms you may be unfamiliar with. And if that is the case, ","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"do not hesitate checking them out in [Glossary](#glossary).","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"**Arrow** is a **desktop app** that **help software project managers keep track of their members’ tasks and deliverables**. ","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"By associating tasks to specific team members, users can **keep track of what needs to be done and have quick access to ","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"contact information should they wish to reach out to the member**. More specifically, apart from the _command box_, ","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"there are two main lists which store the tasks list and the contact list. In this way, our target users (software project manager)","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"can use two lists to organize the team project easily.","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"**Arrow** uses a _Command Line Interface_ (CLI)at the same time possessing convenience of a _Graphical User Interface_ (GUI). The main target audiences are software","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"project managers, who should be equipped with _Command Line Interface_ (CLI) skills. And if you can type fast,","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"**Arrow** can help you manage your teammates in an exceptionally quick way.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"### Note","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"**:information_source: If you are unfamiliar with Command Line Interface (CLI):**\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"**Arrow** has the target audiences of software project team leads. ","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"In this circumstance, we assume users having some experience of using command line tools.\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"However, it\u0027s perfectly fine if you do not know how to use CLI.\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"Click [here](#tutorial-for-cli) to learn more about what is CLI.","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"wxy1203"},"content":"## Table of Contents","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"2. [Overview of Features](#overview-of-features)","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"    1. [Basic Commands](#basic-commands)","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"        - [Clear all Teammate records](#clearing-all-teammates--clear)","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"        - [Clear all Task records](#clearing-all-tasks-from-task-panel-task-clear)","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        - [Help](#viewing-help--help)","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"        - [Exit the program](#exiting-the-program--exit)","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"    2. [Teammate Commands](#teammate-commands)","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"        - [Add a Teammate](#adding-a-new-teammate-add)","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"        - [List all Teammates](#listing-all-teammates--list)","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"        - [Delete a Teammate](#deleting-a-teammate--delete)","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"        - [Edit a Teammate](#editing-a-teammates-information--edit)","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        - [Find Teammate](#finding-teammates-based-on-namekeywordtags-find)","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    3. [Task Management Commands](#task-management-commands)","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"        - [Add a Task](#adding-a-new-task-task-add)","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"        - [Assign a Task to a Teammate](#assigning-a-task-to-a-teammate-task-assign)","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"        - [Mark completed Task](#marking-completed-tasks-task-mark)","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"        - [Unmark incomplete Task](#unmarking-incomplete-tasks-task-unmark)","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"        - [Delete a task](#deleting-a-task-task-delete)","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"        - [Set deadline to Task](#setting-deadlines-to-a-task-task-do--by)","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"        - [Sort Task by deadline](#sorting-tasks-by-deadline-task-sort)","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"        - [Filter Task by parameters](#filtering-the-tasks-list-task-list)","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"        - [Edit a Task](#editing-a-task-task-edit)","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"        - [List all project title](#listing-all-projects-task-project)","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"3. [Command Summary](#command-summary)","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"4. [FAQ](#faq)","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"5. [Tutorial for CLI](#tutorial-for-cli)","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"6. [Behind Everything](#behind-everything)","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"7. [Glossary](#glossary)","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"## Quick Start","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"1. Ensure you have Java `11` or above installed in your Computer. If you are unsure of how to check, refer to the [FAQ](#faq).","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"2. Download the latest `arrow.jar` from [here](https://github.com/AY2223S1-CS2103T-T08-2/tp/releases).","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Arrow.","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"wxy1203"},"content":"4. Double-click the file to start the app. The _GUI_ or _main window_ should appear in a few seconds.","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"wxy1203"},"content":"Note how the app contains some sample data. If the app does not start and an `error` appears on your screen, do refer to the [FAQ](#faq).\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"wxy1203"},"content":"5. The picture below shows the _main window_ of **Arrow**.","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"* The command box is boxed in \u003cspan style\u003d\"color:red\"\u003e*red*\u003c/span\u003e, where you enter commands.","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"* The task panel is boxed in \u003cspan style\u003d\"color:blue\"\u003e*blue*\u003c/span\u003e, where you can see the current task list.","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"* The address book is boxed in \u003cspan style\u003d\"color:green\"\u003e*green*\u003c/span\u003e, where you can see the contact information of your teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"    * **`list`** : Lists all teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"amresh2000"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"    * ","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"7. Refer to the **Features** section below for details of each command.","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"## Overview of Features","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"This section provides a brief overview of `Arrow`. The intention is for users to gain a better","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"understanding of basic functionalities of `Arrow`, before diving into specific commands.","lastModifiedDate":"2022-11-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"Task Details","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"![Task](images/TaskDetails.png)","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"1. **Basic functionality**","lastModifiedDate":"2022-11-02"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"    1. Clear all Teammates\u0027 records","lastModifiedDate":"2022-11-02"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"    2. Clear all Task records","lastModifiedDate":"2022-11-02"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"    3. Get Help","lastModifiedDate":"2022-11-02"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"    4. Exit app","lastModifiedDate":"2022-11-02"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"2. **Managing Teammate Information**","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"    1. Adding a new Teammate","lastModifiedDate":"2022-11-02"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"    2. Listing all Teammates","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"    3. Deleting a Teammate","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"    4. Editing a Teammate\u0027s information","lastModifiedDate":"2022-11-02"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"    5. Finding Teammate(s) based on name/keyword/tag","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"3. **Managing Task Information**","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"    1. Adding a new Task","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"    2. Assigning a Task to a Teammate","lastModifiedDate":"2022-11-02"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"    3. Viewing all Tasks assigned to a Teammate ","lastModifiedDate":"2022-11-02"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"    4. Marking completed Tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"    5. Unmarking incomplete Tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"    6. Deleting a Task","lastModifiedDate":"2022-11-02"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"    7. Setting deadlines to a Task","lastModifiedDate":"2022-11-02"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"    8. Sorting Task by deadline","lastModifiedDate":"2022-11-02"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"    9. Filtering Task by","lastModifiedDate":"2022-11-02"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"       1. Description","lastModifiedDate":"2022-11-02"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"       2. Project Title","lastModifiedDate":"2022-11-02"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"       3. Assigned Contacts to Task","lastModifiedDate":"2022-11-02"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"       4. Deadline","lastModifiedDate":"2022-11-02"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"       5. Completion Status","lastModifiedDate":"2022-11-02"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"    10. Editing a Task","lastModifiedDate":"2022-11-02"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"    11. Listing all project title","lastModifiedDate":"2022-11-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-11-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"wxy1203"},"content":"If you are new to **Arrow**, here provides some tips for you to enter commands efficiently.","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"wxy1203"},"content":"* The task list shows only **INCOMPLETE** tasks. ","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"wxy1203"},"content":"Once a task has been marked (either by the command or the by ticking the white box), ","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"wxy1203"},"content":"it will be completed and disappears from the task panel as it is NOT incomplete.","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"wxy1203"},"content":"* To view the task list with both complete and incomplete ones, using `task list -a`.","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":167,"author":{"gitId":"wxy1203"},"content":"* _Extraneous parameters_ for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":170,"author":{"gitId":"amresh2000"},"content":"* `INDEX` must a positive integer of the given item in the panel.","lastModifiedDate":"2022-11-02"},{"lineNumber":171,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"KIANSEONG"},"content":"---","lastModifiedDate":"2022-11-06"},{"lineNumber":175,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"amresh2000"},"content":"## Basic Commands","lastModifiedDate":"2022-11-02"},{"lineNumber":177,"author":{"gitId":"amresh2000"},"content":"This section covers basic application-related commands.","lastModifiedDate":"2022-11-02"},{"lineNumber":178,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"amresh2000"},"content":"### Clearing all Teammates : `clear`","lastModifiedDate":"2022-11-02"},{"lineNumber":180,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":181,"author":{"gitId":"amresh2000"},"content":"Clears all Teammates from the address book.","lastModifiedDate":"2022-11-02"},{"lineNumber":182,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":183,"author":{"gitId":"amresh2000"},"content":"Format: `clear`","lastModifiedDate":"2022-11-02"},{"lineNumber":184,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":186,"author":{"gitId":"amresh2000"},"content":"### Clearing all tasks from Task Panel: `task clear`","lastModifiedDate":"2022-11-02"},{"lineNumber":187,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":188,"author":{"gitId":"amresh2000"},"content":"Clears the tasks from tasks list.","lastModifiedDate":"2022-11-02"},{"lineNumber":189,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":190,"author":{"gitId":"amresh2000"},"content":"Format: `task clear`","lastModifiedDate":"2022-11-02"},{"lineNumber":191,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":192,"author":{"gitId":"amresh2000"},"content":"Examples:","lastModifiedDate":"2022-11-02"},{"lineNumber":193,"author":{"gitId":"KIANSEONG"},"content":"- `task list` followed by `task clear` to delete all incomplete tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":194,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"KIANSEONG"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":205,"author":{"gitId":"amresh2000"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-11-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"amresh2000"},"content":"Exits the program.","lastModifiedDate":"2022-11-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"amresh2000"},"content":"Format: `exit`","lastModifiedDate":"2022-11-02"},{"lineNumber":210,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":211,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":212,"author":{"gitId":"amresh2000"},"content":"## Teammate Commands","lastModifiedDate":"2022-11-02"},{"lineNumber":213,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":214,"author":{"gitId":"KIANSEONG"},"content":"Teammate entails all the members that you can assign tasks to in the future. This section documents how to add, delete, edit and list operations on teammate records.","lastModifiedDate":"2022-11-06"},{"lineNumber":215,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":216,"author":{"gitId":"amresh2000"},"content":"### Adding a new Teammate: `add`","lastModifiedDate":"2022-11-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":218,"author":{"gitId":"amresh2000"},"content":"Adds a new Teammate to the address book.","lastModifiedDate":"2022-11-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"KIANSEONG"},"content":"- `TAG` can only be 1 word.","lastModifiedDate":"2022-11-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"KIANSEONG"},"content":"A teammate can have 0 or more tags.","lastModifiedDate":"2022-11-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":232,"author":{"gitId":"amresh2000"},"content":"### Listing all Teammates : `list`","lastModifiedDate":"2022-11-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":234,"author":{"gitId":"amresh2000"},"content":"Shows a list of all teammates in the address book.","lastModifiedDate":"2022-11-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":239,"author":{"gitId":"amresh2000"},"content":"### Deleting a Teammate : `delete`","lastModifiedDate":"2022-11-02"},{"lineNumber":240,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"amresh2000"},"content":"Deletes the specified Teammate from the address book.","lastModifiedDate":"2022-11-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"amresh2000"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-11-02"},{"lineNumber":244,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":245,"author":{"gitId":"KIANSEONG"},"content":"* Deletes the teammate at the specified `INDEX`.","lastModifiedDate":"2022-11-06"},{"lineNumber":246,"author":{"gitId":"KIANSEONG"},"content":"* The index refers to the index number shown in the displayed teammate list.","lastModifiedDate":"2022-11-06"},{"lineNumber":247,"author":{"gitId":"amresh2000"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-02"},{"lineNumber":248,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"amresh2000"},"content":"Examples:","lastModifiedDate":"2022-11-02"},{"lineNumber":250,"author":{"gitId":"KIANSEONG"},"content":"* `list` followed by `delete 2` deletes the 2nd teammate in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":251,"author":{"gitId":"KIANSEONG"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st teammate in the results of the `find` command.","lastModifiedDate":"2022-11-06"},{"lineNumber":252,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":253,"author":{"gitId":"yilinzyl"},"content":"Note:","lastModifiedDate":"2022-11-06"},{"lineNumber":254,"author":{"gitId":"yilinzyl"},"content":"* This teammate will also be deleted from all tasks he is assigned to. Task panel will be filtered to show you the affected tasks!","lastModifiedDate":"2022-11-06"},{"lineNumber":255,"author":{"gitId":"yilinzyl"},"content":"* Enter `task list` to view all tasks again.","lastModifiedDate":"2022-11-06"},{"lineNumber":256,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":257,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":258,"author":{"gitId":"amresh2000"},"content":"### Editing a Teammate\u0027s information : `edit`","lastModifiedDate":"2022-11-02"},{"lineNumber":259,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":260,"author":{"gitId":"amresh2000"},"content":"Edits an existing Teammate in the address book.","lastModifiedDate":"2022-11-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-10-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":264,"author":{"gitId":"KIANSEONG"},"content":"* Edits the teammate at the specified `INDEX`. The index refers to the index number shown in the displayed teammate list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-26"},{"lineNumber":267,"author":{"gitId":"KIANSEONG"},"content":"* `TAG` can only be 1 word.","lastModifiedDate":"2022-11-06"},{"lineNumber":268,"author":{"gitId":"KIANSEONG"},"content":"* When editing tags, the existing tags of the teammate will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2022-11-06"},{"lineNumber":269,"author":{"gitId":"KIANSEONG"},"content":"* You can remove all the teammate’s tags by typing `t/` without","lastModifiedDate":"2022-11-06"},{"lineNumber":270,"author":{"gitId":"amresh2000"},"content":"  specifying any tags after it.","lastModifiedDate":"2022-10-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-26"},{"lineNumber":273,"author":{"gitId":"KIANSEONG"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st teammate to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-11-06"},{"lineNumber":274,"author":{"gitId":"KIANSEONG"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd teammate to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-11-06"},{"lineNumber":275,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":276,"author":{"gitId":"yilinzyl"},"content":"Note:","lastModifiedDate":"2022-11-06"},{"lineNumber":277,"author":{"gitId":"yilinzyl"},"content":"* This teammate\u0027s details will also be edited under all tasks he is assigned to. Task panel will be filtered to show you the affected tasks!","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"yilinzyl"},"content":"* Enter `task list` to view all tasks again.","lastModifiedDate":"2022-11-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":280,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":281,"author":{"gitId":"yilinzyl"},"content":"### Finding Teammate(s) based on name/keyword/tags: `find`","lastModifiedDate":"2022-11-06"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"KIANSEONG"},"content":"Finds teammates whose names contain any of the given name/keywords, or teammates who contain any of the given tags.","lastModifiedDate":"2022-11-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":285,"author":{"gitId":"yilinzyl"},"content":"Format: `find [NAME/KEYWORD]… [t/TAG]…`","lastModifiedDate":"2022-11-06"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"yilinzyl"},"content":"* At least one keyword/tag has to be provided.","lastModifiedDate":"2022-11-06"},{"lineNumber":288,"author":{"gitId":"amresh2000"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2022-10-26"},{"lineNumber":290,"author":{"gitId":"yilinzyl"},"content":"* For names/keywords, only the name is searched.","lastModifiedDate":"2022-11-06"},{"lineNumber":291,"author":{"gitId":"yilinzyl"},"content":"* Partial names/keywords will be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2022-11-06"},{"lineNumber":292,"author":{"gitId":"yilinzyl"},"content":"* Only full tags will be matched e.g. `t/frontend` will only match with `t/frontend`","lastModifiedDate":"2022-11-06"},{"lineNumber":293,"author":{"gitId":"KIANSEONG"},"content":"* Teammates matching at least one keyword/tag will be returned (i.e. `OR` search).","lastModifiedDate":"2022-11-06"},{"lineNumber":294,"author":{"gitId":"yilinzyl"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2022-11-06"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2022-10-26"},{"lineNumber":298,"author":{"gitId":"yilinzyl"},"content":"* `find t/frontend` returns `Alex Yeoh`","lastModifiedDate":"2022-11-06"},{"lineNumber":299,"author":{"gitId":"yilinzyl"},"content":"* `find John t/frontend` returns `john`, `John Doe` and `Alex Yeoh`","lastModifiedDate":"2022-11-06"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":303,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":304,"author":{"gitId":"amresh2000"},"content":"## Task Management Commands","lastModifiedDate":"2022-11-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":306,"author":{"gitId":"KIANSEONG"},"content":"A team Leader in `Arrow` may have tasks to complete or assign to Teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":308,"author":{"gitId":"amresh2000"},"content":"In the Task panel, all tasks are shown coupled with who it has been assigned to.","lastModifiedDate":"2022-11-02"},{"lineNumber":309,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":310,"author":{"gitId":"amresh2000"},"content":"A Task has the ability to store these details:","lastModifiedDate":"2022-11-02"},{"lineNumber":311,"author":{"gitId":"amresh2000"},"content":"* Index of Task: The index of an existing Task in the Tasks panel","lastModifiedDate":"2022-11-02"},{"lineNumber":312,"author":{"gitId":"amresh2000"},"content":"* Deadline: The deadline given to the Task","lastModifiedDate":"2022-11-02"},{"lineNumber":313,"author":{"gitId":"amresh2000"},"content":"* Project Title: The Project Title the Task is under","lastModifiedDate":"2022-11-02"},{"lineNumber":314,"author":{"gitId":"amresh2000"},"content":"* Description: Description given to the Task","lastModifiedDate":"2022-11-02"},{"lineNumber":315,"author":{"gitId":"amresh2000"},"content":"* Assigned Teammates: Teammates that the Task has been assigned to","lastModifiedDate":"2022-11-02"},{"lineNumber":316,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":317,"author":{"gitId":"amresh2000"},"content":"\u003e:information_source: All task-related commands have the keyword `task` in front of them.","lastModifiedDate":"2022-11-02"},{"lineNumber":318,"author":{"gitId":"amresh2000"},"content":"These commands modify the Task panel of `Arrow`.","lastModifiedDate":"2022-11-02"},{"lineNumber":319,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":320,"author":{"gitId":"amresh2000"},"content":"### Adding a new Task: `task add`","lastModifiedDate":"2022-11-02"},{"lineNumber":321,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":322,"author":{"gitId":"amresh2000"},"content":"Adds a new task to the task panel.","lastModifiedDate":"2022-11-02"},{"lineNumber":323,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":324,"author":{"gitId":"KIANSEONG"},"content":"Format: `task add TITLE`","lastModifiedDate":"2022-11-06"},{"lineNumber":325,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":326,"author":{"gitId":"KIANSEONG"},"content":"* `TITLE` refers to the task and **cannot be empty**.","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"KIANSEONG"},"content":"* Tasks with the same `TITLE` cannot be added and will result in an error message.","lastModifiedDate":"2022-11-06"},{"lineNumber":328,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":329,"author":{"gitId":"KIANSEONG"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"KIANSEONG"},"content":"If the current task list only shows completed task (via `task list -c`), the newly added will not show up in the list. You can view it by running the command `task list` to show incomplete tasks or `task list -a` to show all tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":331,"author":{"gitId":"KIANSEONG"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":332,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":333,"author":{"gitId":"KIANSEONG"},"content":"Examples:","lastModifiedDate":"2022-10-02"},{"lineNumber":334,"author":{"gitId":"KIANSEONG"},"content":"* `task add Task 1`","lastModifiedDate":"2022-11-06"},{"lineNumber":335,"author":{"gitId":"KIANSEONG"},"content":"* `task add Finish GUI`","lastModifiedDate":"2022-11-06"},{"lineNumber":336,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":337,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":338,"author":{"gitId":"amresh2000"},"content":"### Assigning a Task to a Teammate: `task assign`","lastModifiedDate":"2022-11-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":340,"author":{"gitId":"amresh2000"},"content":"Assigns or unassigns the specified teammate from address book to a task from task panel.","lastModifiedDate":"2022-11-02"},{"lineNumber":341,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":342,"author":{"gitId":"KIANSEONG"},"content":"Format: `task assign TASK_INDEX [+@TEAMMATE_INDEX]…​ [+@TEAMMATE_NAME]…​ [-@TEAMMATE_INDEX]…​ [-@TEAMMATE_NAME]…​`","lastModifiedDate":"2022-11-06"},{"lineNumber":343,"author":{"gitId":"KIANSEONG"},"content":"* +@: Assigns the teammates at the specified TEAMMATE_INDEXs, or with the TEAMMATE_NAME, from `address book` to task at the specified TASK_INDEX from `task list`.","lastModifiedDate":"2022-11-06"},{"lineNumber":344,"author":{"gitId":"KIANSEONG"},"content":"* -@: Unassigns the teammates at the specified TEAMMATE_INDEXs, or with the TEAMMATE_NAME, from `address book` from task at the specified TASK_INDEX from `task list`.","lastModifiedDate":"2022-11-06"},{"lineNumber":345,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":346,"author":{"gitId":"amresh2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-11-02"},{"lineNumber":347,"author":{"gitId":"KIANSEONG"},"content":"A task can have 0 or more assigned teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":348,"author":{"gitId":"amresh2000"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-02"},{"lineNumber":349,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":350,"author":{"gitId":"amresh2000"},"content":"Examples:","lastModifiedDate":"2022-11-02"},{"lineNumber":351,"author":{"gitId":"KIANSEONG"},"content":"* `task assign 1 +@1 +@Alex Yeoh -@Bernice Yu` assigns the 1st teammate and \"Alex Yeoh\" from the address book to the 1st task from task list, and unassigns \"Bernice Yu\" from the same task.","lastModifiedDate":"2022-11-06"},{"lineNumber":352,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":353,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":354,"author":{"gitId":"amresh2000"},"content":"### Marking completed Tasks: `task mark`","lastModifiedDate":"2022-11-02"},{"lineNumber":355,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":356,"author":{"gitId":"KIANSEONG"},"content":"Marks a task as complete.","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":358,"author":{"gitId":"wxy1203"},"content":"Format: `task mark TASK_INDEX`","lastModifiedDate":"2022-10-14"},{"lineNumber":359,"author":{"gitId":"KIANSEONG"},"content":"* Marks the task at the specified `TASK_INDEX`.","lastModifiedDate":"2022-10-27"},{"lineNumber":360,"author":{"gitId":"KIANSEONG"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-02"},{"lineNumber":364,"author":{"gitId":"wxy1203"},"content":"* `task list` followed by `task mark 1` marks the 1st task in the task list as complete.","lastModifiedDate":"2022-10-14"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":366,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":367,"author":{"gitId":"amresh2000"},"content":"### Unmarking incomplete Tasks: `task unmark`","lastModifiedDate":"2022-11-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":369,"author":{"gitId":"KIANSEONG"},"content":"Unmarks a task and sets it as incomplete.","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":371,"author":{"gitId":"wxy1203"},"content":"Note;","lastModifiedDate":"2022-11-06"},{"lineNumber":372,"author":{"gitId":"wxy1203"},"content":"* To unmark a task, we need to show the full list of tasks with the completed (disappeared) tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":373,"author":{"gitId":"wxy1203"},"content":"* By executing `task list -a` command, we can fully display the task panel with both complete and incomplete tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":374,"author":{"gitId":"wxy1203"},"content":"* Thus we can `unmark` a task from complete to incomplete.","lastModifiedDate":"2022-11-06"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":376,"author":{"gitId":"wxy1203"},"content":"Format: `task unmark TASK_INDEX`","lastModifiedDate":"2022-10-16"},{"lineNumber":377,"author":{"gitId":"wxy1203"},"content":"* Show the full task lists by using `task list -a`.","lastModifiedDate":"2022-11-06"},{"lineNumber":378,"author":{"gitId":"KIANSEONG"},"content":"* Unmarks the task at the specified `TASK_INDEX`.","lastModifiedDate":"2022-10-27"},{"lineNumber":379,"author":{"gitId":"KIANSEONG"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-27"},{"lineNumber":380,"author":{"gitId":"KIANSEONG"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":382,"author":{"gitId":"wxy1203"},"content":"Examples:","lastModifiedDate":"2022-10-16"},{"lineNumber":383,"author":{"gitId":"wxy1203"},"content":"* `task list -a` followed by `task unmark 1` unmarks the 1st task in the task list and sets it as incomplete.","lastModifiedDate":"2022-11-06"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":385,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":386,"author":{"gitId":"amresh2000"},"content":"### Deleting a Task: `task delete`","lastModifiedDate":"2022-11-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":388,"author":{"gitId":"KIANSEONG"},"content":"Deletes the specified task from the task panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":390,"author":{"gitId":"amresh2000"},"content":"Format: `task delete TASK_INDEX`","lastModifiedDate":"2022-10-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"KIANSEONG"},"content":"* Deletes the task at the specified `TASK_INDEX`.","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"KIANSEONG"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-27"},{"lineNumber":394,"author":{"gitId":"KIANSEONG"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":396,"author":{"gitId":"KIANSEONG"},"content":"Examples:","lastModifiedDate":"2022-10-02"},{"lineNumber":397,"author":{"gitId":"KIANSEONG"},"content":"* `task list` followed by `task delete 2` deletes the 2nd task in the task panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":399,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":400,"author":{"gitId":"beetee17"},"content":"### Setting deadlines to a task: `task do ... by/`","lastModifiedDate":"2022-10-18"},{"lineNumber":401,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":402,"author":{"gitId":"beetee17"},"content":"You can use the `task do ... by/` command to set (or remove) a deadline for some task.","lastModifiedDate":"2022-10-18"},{"lineNumber":403,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":404,"author":{"gitId":"wxy1203"},"content":"Format: `task do TASK_INDEX by/DATE...`","lastModifiedDate":"2022-11-06"},{"lineNumber":405,"author":{"gitId":"beetee17"},"content":"- The `task do` command sets the deadline specified by `DATE` to the task at the specified `TASK_INDEX` from the task list.","lastModifiedDate":"2022-10-18"},{"lineNumber":406,"author":{"gitId":"KIANSEONG"},"content":"- You can only use plain English to describe the intended deadline, such as `today`, `tomorrow`, `next Thursday`, `14 November 2022`, and so on.","lastModifiedDate":"2022-11-06"},{"lineNumber":407,"author":{"gitId":"KIANSEONG"},"content":"- Dates containing non-alphanumeric characters such as `11-11-2022` will not be accepted and an error message will be thrown.","lastModifiedDate":"2022-11-05"},{"lineNumber":408,"author":{"gitId":"KIANSEONG"},"content":"- If the application is unable to determine a date from your input, an error message will be displayed, and you will be prompted to try a different input.","lastModifiedDate":"2022-10-27"},{"lineNumber":409,"author":{"gitId":"beetee17"},"content":"- To **remove** the deadline from a task, you can use the special character `?`.","lastModifiedDate":"2022-10-18"},{"lineNumber":410,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":411,"author":{"gitId":"beetee17"},"content":"##### Examples:","lastModifiedDate":"2022-11-04"},{"lineNumber":412,"author":{"gitId":"beetee17"},"content":"* `task do 1 by/tomorrow` sets the deadline for the 1st task in the list to tomorrow.","lastModifiedDate":"2022-10-18"},{"lineNumber":413,"author":{"gitId":"beetee17"},"content":"* `task do 1 by/?` **removes** the deadline from the 1st task in the list.","lastModifiedDate":"2022-10-18"},{"lineNumber":414,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":415,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":416,"author":{"gitId":"beetee17"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":417,"author":{"gitId":"beetee17"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":418,"author":{"gitId":"beetee17"},"content":"* As we foresee that most of your tasks should fall within the current year, the deadline of such tasks have their year omitted in the task panel.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":419,"author":{"gitId":"beetee17"},"content":"* You may refer to the screenshot below for a better understanding","lastModifiedDate":"2022-11-04"},{"lineNumber":420,"author":{"gitId":"beetee17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":421,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":422,"author":{"gitId":"beetee17"},"content":"![Task Deadline](images/deadline-ui.png)","lastModifiedDate":"2022-11-04"},{"lineNumber":423,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":425,"author":{"gitId":"KIANSEONG"},"content":"### Sorting tasks by deadline: `task sort`","lastModifiedDate":"2022-10-28"},{"lineNumber":426,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":427,"author":{"gitId":"KIANSEONG"},"content":"Sorts the task list by deadline. Tasks with earlier deadlines will be put at the top, while tasks without any deadlines will be at the bottom.","lastModifiedDate":"2022-11-06"},{"lineNumber":428,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":429,"author":{"gitId":"KIANSEONG"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":430,"author":{"gitId":"KIANSEONG"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":431,"author":{"gitId":"KIANSEONG"},"content":"* After this command is run, the task panel will only show incomplete tasks. ","lastModifiedDate":"2022-11-06"},{"lineNumber":432,"author":{"gitId":"KIANSEONG"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":433,"author":{"gitId":"KIANSEONG"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":434,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":435,"author":{"gitId":"KIANSEONG"},"content":"Format: `task sort`","lastModifiedDate":"2022-10-28"},{"lineNumber":436,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":437,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":438,"author":{"gitId":"beetee17"},"content":"### Filtering the Tasks List: `task list`","lastModifiedDate":"2022-11-04"},{"lineNumber":439,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":440,"author":{"gitId":"beetee17"},"content":"The `task list` command is a powerful command that allows you to focus only on the tasks that matter to you.","lastModifiedDate":"2022-11-04"},{"lineNumber":441,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":442,"author":{"gitId":"KIANSEONG"},"content":"Format: `task list [KEYWORD] [#PROJECT_NAME]... [@TEAMMATE_INDEX]... [before/DATE] [after/DATE] [-a] [-c]`","lastModifiedDate":"2022-11-06"},{"lineNumber":443,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":444,"author":{"gitId":"beetee17"},"content":"The format above may look daunting, but this is only because the `task list` command allows you to potentially describe complex queries.","lastModifiedDate":"2022-11-04"},{"lineNumber":445,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":446,"author":{"gitId":"beetee17"},"content":"However, all the parameters are optional, and in most cases, you will only need a simple query that uses just one or two parameters.","lastModifiedDate":"2022-11-04"},{"lineNumber":447,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":448,"author":{"gitId":"beetee17"},"content":"For ease of understanding, many of these common use cases have been detailed below.","lastModifiedDate":"2022-11-04"},{"lineNumber":449,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":450,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":451,"author":{"gitId":"beetee17"},"content":"#### 1. Filtering by Completion Status","lastModifiedDate":"2022-11-04"},{"lineNumber":452,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":453,"author":{"gitId":"beetee17"},"content":"`Format: task list [-a] [-c]`","lastModifiedDate":"2022-11-04"},{"lineNumber":454,"author":{"gitId":"beetee17"},"content":"- The simplest form of the command is simply `task list`. This allows you to view all incomplete tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":455,"author":{"gitId":"beetee17"},"content":"- You may find this command useful to reset your task list back to its default state.","lastModifiedDate":"2022-11-04"},{"lineNumber":456,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":457,"author":{"gitId":"beetee17"},"content":"##### Examples","lastModifiedDate":"2022-11-04"},{"lineNumber":458,"author":{"gitId":"beetee17"},"content":"- `task list -a` returns **all** tasks, regardless of completion status.","lastModifiedDate":"2022-11-04"},{"lineNumber":459,"author":{"gitId":"beetee17"},"content":"- `task list -c` returns all **completed** tasks only.","lastModifiedDate":"2022-11-04"},{"lineNumber":460,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":461,"author":{"gitId":"beetee17"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":462,"author":{"gitId":"beetee17"},"content":"**:information_source: Additional Notes:**\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":463,"author":{"gitId":"beetee17"},"content":"* When the `-a` or `-c` parameters are not specified, the `task list` command returns all **incomplete** tasks that match the given query.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":464,"author":{"gitId":"beetee17"},"content":"* In the following examples, \u0027all tasks\u0027 will refer to \u0027all incomplete tasks\u0027 for brevity.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":465,"author":{"gitId":"beetee17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":466,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":467,"author":{"gitId":"beetee17"},"content":"#### 2. Filtering by Description","lastModifiedDate":"2022-11-04"},{"lineNumber":468,"author":{"gitId":"beetee17"},"content":"`Format: task list KEYWORD`","lastModifiedDate":"2022-11-04"},{"lineNumber":469,"author":{"gitId":"beetee17"},"content":"- The `KEYWORD` parameter allows you to search for tasks that contain `KEYWORD`.","lastModifiedDate":"2022-10-25"},{"lineNumber":470,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":471,"author":{"gitId":"beetee17"},"content":"##### Example","lastModifiedDate":"2022-11-04"},{"lineNumber":472,"author":{"gitId":"beetee17"},"content":"- `task list fix` returns all tasks whose description contains the keyword `fix`.","lastModifiedDate":"2022-11-04"},{"lineNumber":473,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":474,"author":{"gitId":"beetee17"},"content":"#### 3. Filtering by Project","lastModifiedDate":"2022-11-04"},{"lineNumber":475,"author":{"gitId":"beetee17"},"content":"`Format: task list #PROJECT_NAME...`","lastModifiedDate":"2022-11-04"},{"lineNumber":476,"author":{"gitId":"beetee17"},"content":"- The `#` parameter allows you to search for tasks that are assigned to **any** of the project(s) you specify.","lastModifiedDate":"2022-10-25"},{"lineNumber":477,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":478,"author":{"gitId":"beetee17"},"content":"##### Example","lastModifiedDate":"2022-11-04"},{"lineNumber":479,"author":{"gitId":"beetee17"},"content":"- `task list #CS2101 #CS2103T` returns all tasks that are **either** under the project `CS2101` **or** `CS2103T`.","lastModifiedDate":"2022-11-04"},{"lineNumber":480,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":481,"author":{"gitId":"beetee17"},"content":"#### 4. Filtering by Assigned Contact(s)","lastModifiedDate":"2022-11-04"},{"lineNumber":482,"author":{"gitId":"KIANSEONG"},"content":"`Format: task list @TEAMMATE_INDEX...`","lastModifiedDate":"2022-11-06"},{"lineNumber":483,"author":{"gitId":"KIANSEONG"},"content":"- The `@` parameter allows you to search for tasks that are assigned to **all** the contact(s) you specify.","lastModifiedDate":"2022-10-27"},{"lineNumber":484,"author":{"gitId":"KIANSEONG"},"content":"- Shows the tasks of the specified `TEAMMATE_INDEX`.","lastModifiedDate":"2022-11-06"},{"lineNumber":485,"author":{"gitId":"KIANSEONG"},"content":"- The contact refers to the index number shown in the displayed teammate list.","lastModifiedDate":"2022-11-06"},{"lineNumber":486,"author":{"gitId":"KIANSEONG"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":487,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":488,"author":{"gitId":"beetee17"},"content":"##### Example","lastModifiedDate":"2022-11-04"},{"lineNumber":489,"author":{"gitId":"KIANSEONG"},"content":"- `task list @1 @2` returns all tasks that are assigned to **both** the 1st and 2nd teammates from the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":490,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":491,"author":{"gitId":"beetee17"},"content":"#### 5. Filtering by Deadline","lastModifiedDate":"2022-11-04"},{"lineNumber":492,"author":{"gitId":"KIANSEONG"},"content":"Format: `task list before/DATE after/DATE`","lastModifiedDate":"2022-11-06"},{"lineNumber":493,"author":{"gitId":"beetee17"},"content":"- The `before/` and `after/` parameters allow you to specify a date range to filter the tasks by, according to their deadline.","lastModifiedDate":"2022-10-25"},{"lineNumber":494,"author":{"gitId":"KIANSEONG"},"content":"- - Tasks with unspecified deadlines will be displayed regardless of the filters.","lastModifiedDate":"2022-11-06"},{"lineNumber":495,"author":{"gitId":"KIANSEONG"},"content":"- You can choose to use only one of the parameters, as shown in the examples below.","lastModifiedDate":"2022-11-06"},{"lineNumber":496,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":497,"author":{"gitId":"beetee17"},"content":"##### Examples","lastModifiedDate":"2022-11-04"},{"lineNumber":498,"author":{"gitId":"beetee17"},"content":"- `task list before/ next Monday after/ tomorrow` returns all tasks whose deadline is after tomorrow but before next Monday.","lastModifiedDate":"2022-11-04"},{"lineNumber":499,"author":{"gitId":"beetee17"},"content":"- `task list before/ end of the month` returns all tasks whose deadline is before the end of the month.","lastModifiedDate":"2022-11-04"},{"lineNumber":500,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":501,"author":{"gitId":"beetee17"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":502,"author":{"gitId":"beetee17"},"content":"**:bulb: Tips for Advanced Users:**\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":503,"author":{"gitId":"beetee17"},"content":"* You can use any combination of the parameters above to build a query that matches your unique requirements!\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":504,"author":{"gitId":"beetee17"},"content":"* Do note that the `KEYWORD` parameter **must** come first, if any other parameters are used.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":505,"author":{"gitId":"beetee17"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":506,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":507,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":508,"author":{"gitId":"amresh2000"},"content":"### Editing a task: `task edit`","lastModifiedDate":"2022-10-17"},{"lineNumber":509,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":510,"author":{"gitId":"amresh2000"},"content":"Edits an existing task in the task list.","lastModifiedDate":"2022-10-17"},{"lineNumber":511,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":512,"author":{"gitId":"KIANSEONG"},"content":"Format: `task edit TASK_INDEX [ti/TITLE] [by/DEADLINE] [#/PROJECT]`","lastModifiedDate":"2022-11-02"},{"lineNumber":513,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":514,"author":{"gitId":"KIANSEONG"},"content":"* Edits the teammate at the specified `TASK_INDEX`. The index refers to the index number shown in the displayed teammate list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-11-06"},{"lineNumber":515,"author":{"gitId":"KIANSEONG"},"content":"* At least one of the optional fields (TITLE, DEADLINE, PROJECT) must be provided. If none are provided, the application will give an error.","lastModifiedDate":"2022-11-04"},{"lineNumber":516,"author":{"gitId":"KIANSEONG"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-28"},{"lineNumber":517,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":518,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":519,"author":{"gitId":"amresh2000"},"content":"### Listing all projects: `task project`","lastModifiedDate":"2022-10-26"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"KIANSEONG"},"content":"Lists all the projects present in the task panel.\u003cbr\u003e","lastModifiedDate":"2022-11-05"},{"lineNumber":522,"author":{"gitId":"KIANSEONG"},"content":"Projects of hidden tasks will also be shown.","lastModifiedDate":"2022-11-05"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"KIANSEONG"},"content":"\u003e:information_source: The task panel will not be changed to show only tasks with project.","lastModifiedDate":"2022-11-05"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"amresh2000"},"content":"Format: `task project`","lastModifiedDate":"2022-10-26"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"amresh2000"},"content":"---","lastModifiedDate":"2022-11-04"},{"lineNumber":529,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"KIANSEONG"},"content":"Arrow data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-02"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"KIANSEONG"},"content":"Arrow data are saved as JSON files, one for Teammates and one for Task Panel.","lastModifiedDate":"2022-11-05"},{"lineNumber":534,"author":{"gitId":"KIANSEONG"},"content":"* Teammates: `[JAR file location]/data/addressbook.json`","lastModifiedDate":"2022-11-05"},{"lineNumber":535,"author":{"gitId":"KIANSEONG"},"content":"* TaskPanel: `[JAR file location]/data/taskpanel.json`","lastModifiedDate":"2022-11-05"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":538,"author":{"gitId":"yilinzyl"},"content":"Data file should not be edited manually!","lastModifiedDate":"2022-11-07"},{"lineNumber":539,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":542,"author":{"gitId":"KIANSEONG"},"content":"## Proposed Features","lastModifiedDate":"2022-11-06"},{"lineNumber":543,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":544,"author":{"gitId":"KIANSEONG"},"content":"Features to implement in the coming versions.","lastModifiedDate":"2022-11-06"},{"lineNumber":545,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":546,"author":{"gitId":"KIANSEONG"},"content":"### Sort Teammates by name","lastModifiedDate":"2022-11-06"},{"lineNumber":547,"author":{"gitId":"KIANSEONG"},"content":"Sort Teammates by alphabetical order of their names. Currently, it is difficult to search for specific Teammates if the list becomes too long. This feature would allow easier finding of Teammates as there is an order in the list of Teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":548,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":549,"author":{"gitId":"KIANSEONG"},"content":"### Recurring Tasks","lastModifiedDate":"2022-11-06"},{"lineNumber":550,"author":{"gitId":"KIANSEONG"},"content":"Extensive project management is planned for future iterations, to allow for better planning. This will also add the ability to","lastModifiedDate":"2022-11-06"},{"lineNumber":551,"author":{"gitId":"KIANSEONG"},"content":"add tasks of the same name (different projects) since categorisation will be done by projects instead.","lastModifiedDate":"2022-11-06"},{"lineNumber":552,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":553,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":554,"author":{"gitId":"amresh2000"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-02"},{"lineNumber":555,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":556,"author":{"gitId":"amresh2000"},"content":"## Command Summary","lastModifiedDate":"2022-11-02"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"amresh2000"},"content":"This summary provides a list of useful and straightforward instructions on how to use the command lines more efficiently.","lastModifiedDate":"2022-11-02"},{"lineNumber":559,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":560,"author":{"gitId":"KIANSEONG"},"content":"### Basic Commands Summary","lastModifiedDate":"2022-11-06"},{"lineNumber":561,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":562,"author":{"gitId":"amresh2000"},"content":"| Command         | Format       |","lastModifiedDate":"2022-11-02"},{"lineNumber":563,"author":{"gitId":"amresh2000"},"content":"|-----------------|--------------|","lastModifiedDate":"2022-11-02"},{"lineNumber":564,"author":{"gitId":"amresh2000"},"content":"| User Manual     | `help`       |","lastModifiedDate":"2022-11-02"},{"lineNumber":565,"author":{"gitId":"amresh2000"},"content":"| Clear Teammates | `clear`      |","lastModifiedDate":"2022-11-02"},{"lineNumber":566,"author":{"gitId":"amresh2000"},"content":"| Clear Tasks     | `task clear` |","lastModifiedDate":"2022-11-02"},{"lineNumber":567,"author":{"gitId":"amresh2000"},"content":"| Exit            | `exit`       |","lastModifiedDate":"2022-11-02"},{"lineNumber":568,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":569,"author":{"gitId":"KIANSEONG"},"content":"### Teammate Commands Summary","lastModifiedDate":"2022-11-06"},{"lineNumber":570,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":571,"author":{"gitId":"amresh2000"},"content":"| Command | Format                                                                 | Example                                                                                            |","lastModifiedDate":"2022-11-02"},{"lineNumber":572,"author":{"gitId":"amresh2000"},"content":"|---------|------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-02"},{"lineNumber":573,"author":{"gitId":"amresh2000"},"content":"| Add     | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`                | `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-11-02"},{"lineNumber":574,"author":{"gitId":"amresh2000"},"content":"| List    | `list`                                                                 | -                                                                                                  |","lastModifiedDate":"2022-11-02"},{"lineNumber":575,"author":{"gitId":"amresh2000"},"content":"| Delete  | `delete INDEX`                                                         | `delete 3`                                                                                         |","lastModifiedDate":"2022-11-02"},{"lineNumber":576,"author":{"gitId":"amresh2000"},"content":"| Edit    | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` | `edit 2 n/James Lee e/jameslee@example.com`                                                        |","lastModifiedDate":"2022-11-02"},{"lineNumber":577,"author":{"gitId":"yilinzyl"},"content":"| Find    | `find [KEYWORD]… [t/TAG]…`                                             | `find James Jake t/frontend t/backend`                                                             |","lastModifiedDate":"2022-11-06"},{"lineNumber":578,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":579,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":580,"author":{"gitId":"KIANSEONG"},"content":"### Task Commands Summary","lastModifiedDate":"2022-11-06"},{"lineNumber":581,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":582,"author":{"gitId":"amresh2000"},"content":"| Command      | Format                                                                                                         | Example                                 |","lastModifiedDate":"2022-11-02"},{"lineNumber":583,"author":{"gitId":"KIANSEONG"},"content":"|--------------|----------------------------------------------------------------------------------------------------------------|-----------------------------------------|","lastModifiedDate":"2022-11-06"},{"lineNumber":584,"author":{"gitId":"KIANSEONG"},"content":"| Task add     | `task add TITLE`                                                                                               | `task add Test 1`                       |","lastModifiedDate":"2022-11-06"},{"lineNumber":585,"author":{"gitId":"KIANSEONG"},"content":"| Task assign  | `task assign TASK_INDEX [+@/TEAMMATE_INDEX]…​ [+@/TEAMMATE_NAME]…​ [cd/TEAMMATE_INDEX]…​ [-@/TEAMMATE_NAME]…​` | `task assign 3 +@/1 +@/Alex Yeoh @-/2`  |","lastModifiedDate":"2022-11-06"},{"lineNumber":586,"author":{"gitId":"amresh2000"},"content":"| Task list    | `task list`                                                                                                    | -                                       |","lastModifiedDate":"2022-11-02"},{"lineNumber":587,"author":{"gitId":"amresh2000"},"content":"| Task mark    | `task mark TASK_INDEX`                                                                                         | `task mark 1`                           |","lastModifiedDate":"2022-11-02"},{"lineNumber":588,"author":{"gitId":"amresh2000"},"content":"| Task unmark  | `task unmark TASK_INDEX`                                                                                       | `task unmark 1`                         |","lastModifiedDate":"2022-11-02"},{"lineNumber":589,"author":{"gitId":"amresh2000"},"content":"| Task delete  | `task delete INDEX`                                                                                            | `task delete 3`                         |","lastModifiedDate":"2022-11-02"},{"lineNumber":590,"author":{"gitId":"KIANSEONG"},"content":"| Task do      | `task do TASK_INDEX by/DATE...`                                                                                | `task do 1 by/tomorrow`                 |","lastModifiedDate":"2022-11-06"},{"lineNumber":591,"author":{"gitId":"amresh2000"},"content":"| Task sort    | `task sort`                                                                                                    | -                                       |","lastModifiedDate":"2022-11-02"},{"lineNumber":592,"author":{"gitId":"amresh2000"},"content":"| Task filter  | `task list`                                                                                                    | -                                       |","lastModifiedDate":"2022-11-02"},{"lineNumber":593,"author":{"gitId":"KIANSEONG"},"content":"| Task edit    | `task edit TASK_INDEX [ti/TITLE] [by/DEADLINE] [#/PROJECT] `                                                   | `task edit 2 ti/Finish bar by/tomorrow` |","lastModifiedDate":"2022-11-06"},{"lineNumber":594,"author":{"gitId":"amresh2000"},"content":"| Task project | `task project`                                                                                                 | -                                       |","lastModifiedDate":"2022-11-02"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"KIANSEONG"},"content":"**Q**: How do I check my Java version?\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":601,"author":{"gitId":"KIANSEONG"},"content":"**A**: Open Terminal if you\u0027re on Mac or Command Prompt if you\u0027re on Windows. Type \"java -version\" and press Enter.","lastModifiedDate":"2022-10-27"},{"lineNumber":602,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":603,"author":{"gitId":"wxy1203"},"content":"**Q**: How do I install `java 11`?\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":604,"author":{"gitId":"wxy1203"},"content":"**A**: Download `java 11` to your computer via this [link](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2022-10-31"},{"lineNumber":605,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":606,"author":{"gitId":"wxy1203"},"content":"**Q**: If I already have java on my computer, but not `java 11`, how do I switch java version to `java 11`?\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":607,"author":{"gitId":"wxy1203"},"content":"**A**: For MacOS user, check this [tutorial](https://medium.com/@devkosal/switching-java-jdk-versions-on-macos-80bc868e686a).","lastModifiedDate":"2022-10-31"},{"lineNumber":608,"author":{"gitId":"wxy1203"},"content":"For Windows user, check this [tutorial](https://www.happycoders.eu/java/how-to-switch-multiple-java-versions-windows/).","lastModifiedDate":"2022-10-31"},{"lineNumber":609,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":610,"author":{"gitId":"KIANSEONG"},"content":"**Q**: What if the app does not open when I double-click it?\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":611,"author":{"gitId":"KIANSEONG"},"content":"**A**: Follow the steps listed to open the app.","lastModifiedDate":"2022-10-27"},{"lineNumber":612,"author":{"gitId":"KIANSEONG"},"content":"1. Ensure that you have done Step 1 to 3 in the Quick Start.","lastModifiedDate":"2022-10-27"},{"lineNumber":613,"author":{"gitId":"KIANSEONG"},"content":"2. Open Terminal app if you are on a Mac or the Command Prompt if you are on Windows.","lastModifiedDate":"2022-10-27"},{"lineNumber":614,"author":{"gitId":"KIANSEONG"},"content":"3. Type \"java -jar \" into Terminal or Command Prompt (do not do anything else).","lastModifiedDate":"2022-10-27"},{"lineNumber":615,"author":{"gitId":"KIANSEONG"},"content":"4. Go to the folder where you just copied `arrow.jar` to.","lastModifiedDate":"2022-10-27"},{"lineNumber":616,"author":{"gitId":"KIANSEONG"},"content":"5. Drag `arrow.jar` and drop anywhere into Terminal or Command Prompt.","lastModifiedDate":"2022-10-27"},{"lineNumber":617,"author":{"gitId":"KIANSEONG"},"content":"6. Press Enter and the command will run, the GUI will pop up.","lastModifiedDate":"2022-10-27"},{"lineNumber":618,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":619,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"amresh2000"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Arrow home folder.","lastModifiedDate":"2022-11-05"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"wxy1203"},"content":"## Tutorial for CLI","lastModifiedDate":"2022-10-31"},{"lineNumber":625,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":626,"author":{"gitId":"wxy1203"},"content":"A command-line interface (CLI) is a text-based user interface (UI) used to run programs, ","lastModifiedDate":"2022-11-02"},{"lineNumber":627,"author":{"gitId":"wxy1203"},"content":"manage computer files and interact with the computer.","lastModifiedDate":"2022-11-02"},{"lineNumber":628,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":629,"author":{"gitId":"wxy1203"},"content":"[This article](https://www.freecodecamp.org/news/command-line-commands-cli-tutorial/) showed you several “unknown-to-many” commands ","lastModifiedDate":"2022-11-02"},{"lineNumber":630,"author":{"gitId":"wxy1203"},"content":"you can use to get access to hidden functionalities on your personal computer.","lastModifiedDate":"2022-11-02"},{"lineNumber":631,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":632,"author":{"gitId":"KIANSEONG"},"content":"### Some of our features","lastModifiedDate":"2022-11-04"},{"lineNumber":633,"author":{"gitId":"KIANSEONG"},"content":"To improve the speed of your actions and quality of your life while using the application we have also implemented the below features","lastModifiedDate":"2022-11-04"},{"lineNumber":634,"author":{"gitId":"KIANSEONG"},"content":"* When your command box is out of focus and empty, you can press the `/` key on your command to immediately put your cursor on the command box.","lastModifiedDate":"2022-11-04"},{"lineNumber":635,"author":{"gitId":"KIANSEONG"},"content":"  ![command box out of focus](images/CommandBoxFocus.png)","lastModifiedDate":"2022-11-04"},{"lineNumber":636,"author":{"gitId":"KIANSEONG"},"content":"  The command box will be focused and appears as below. A slash will appear and you will have to delete it before entering the next command.","lastModifiedDate":"2022-11-04"},{"lineNumber":637,"author":{"gitId":"KIANSEONG"},"content":"  ![command box set focused](images/CommandBoxSetFocused.png)","lastModifiedDate":"2022-11-04"},{"lineNumber":638,"author":{"gitId":"KIANSEONG"},"content":"* When you enter a command, it disappears from the command box is run by the application. You may use the `UP` arrow key to go back to a previous command or `DOWN` arrow key to go to the next command. However, if there is text entered, then you cannot use this feature.","lastModifiedDate":"2022-11-04"},{"lineNumber":639,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":640,"author":{"gitId":"wxy1203"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-02"},{"lineNumber":641,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":642,"author":{"gitId":"wxy1203"},"content":"## Behind Everything","lastModifiedDate":"2022-11-02"},{"lineNumber":643,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":644,"author":{"gitId":"wxy1203"},"content":"### Why we are using two different lists?","lastModifiedDate":"2022-11-02"},{"lineNumber":645,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":646,"author":{"gitId":"wxy1203"},"content":"* **Task Panel List**","lastModifiedDate":"2022-11-02"},{"lineNumber":647,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":648,"author":{"gitId":"wxy1203"},"content":"    As software project team leaders, it is important to have a clear vision of tasks to be implemented,","lastModifiedDate":"2022-11-02"},{"lineNumber":649,"author":{"gitId":"wxy1203"},"content":"since there could be many projects and each project may have so many items to keep in track.","lastModifiedDate":"2022-11-02"},{"lineNumber":650,"author":{"gitId":"wxy1203"},"content":"Thus, **Arrow** has a task panel list to keep every task organized. ","lastModifiedDate":"2022-11-02"},{"lineNumber":651,"author":{"gitId":"wxy1203"},"content":"Details of each task can be added, which helps the team managers no fear of leaving out any progress.","lastModifiedDate":"2022-11-02"},{"lineNumber":652,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":653,"author":{"gitId":"wxy1203"},"content":"    Also the task panel list only shows the incomplete tasks.","lastModifiedDate":"2022-11-06"},{"lineNumber":654,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":655,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":656,"author":{"gitId":"amresh2000"},"content":"* **Teammate List**","lastModifiedDate":"2022-11-02"},{"lineNumber":657,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":658,"author":{"gitId":"wxy1203"},"content":"    The most important part of a software project is the team members serving at different positions,","lastModifiedDate":"2022-11-02"},{"lineNumber":659,"author":{"gitId":"wxy1203"},"content":"**Arrow** helps tracking details of every team member and links them to their tasks to be finished.","lastModifiedDate":"2022-11-02"},{"lineNumber":660,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":661,"author":{"gitId":"wxy1203"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-02"},{"lineNumber":662,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":663,"author":{"gitId":"amresh2000"},"content":"## Glossary","lastModifiedDate":"2022-11-02"},{"lineNumber":664,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":665,"author":{"gitId":"amresh2000"},"content":"| Term                  | Definition                                                                                                                                                                                                                                                        |","lastModifiedDate":"2022-11-02"},{"lineNumber":666,"author":{"gitId":"amresh2000"},"content":"|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-02"},{"lineNumber":667,"author":{"gitId":"amresh2000"},"content":"| CLI                   | [Command Line Interface](https://en.wikipedia.org/wiki/Command-line_interface) is a text-based _user interface_ (UI) used to run programs,manage computer files and interact with the computer. Click [here](#tutorial-for-cli) if you are not familiar with CLI. |","lastModifiedDate":"2022-11-02"},{"lineNumber":668,"author":{"gitId":"amresh2000"},"content":"| User Interface        | The point at which human users interact with a computer, website or application.                                                                                                                                                                                  |","lastModifiedDate":"2022-11-02"},{"lineNumber":669,"author":{"gitId":"amresh2000"},"content":"| GUI                   | [Graphical User Interface](https://en.wikipedia.org/wiki/Graphical_user_interface) is a type of user interface                                                                                                                                                    |","lastModifiedDate":"2022-11-02"},{"lineNumber":670,"author":{"gitId":"amresh2000"},"content":"| Home Folder           | The folder/directory where Arrow stores all information.                                                                                                                                                                                                          |","lastModifiedDate":"2022-11-02"},{"lineNumber":671,"author":{"gitId":"amresh2000"},"content":"| Main Window           | The main window of the application that shows the list of students.                                                                                                                                                                                               |","lastModifiedDate":"2022-11-02"},{"lineNumber":672,"author":{"gitId":"amresh2000"},"content":"| Command Box           | The text box where you can enter commands.                                                                                                                                                                                                                        |","lastModifiedDate":"2022-11-02"},{"lineNumber":673,"author":{"gitId":"amresh2000"},"content":"| Extraneous Parameters | The specified  command contains more positional parameters than is allowed.                                                                                                                                                                                       |","lastModifiedDate":"2022-11-02"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":675,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-11-02"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":677,"author":{"gitId":"KIANSEONG"},"content":"This is the end of Arrow User Guide. If you have reached this far, thank you for reading and hope you enjoy using our app :)","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":168,"amresh2000":192,"wxy1203":85,"beetee17":78,"-":135,"yilinzyl":19}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"KIANSEONG"},"content":"    content: \"Arrow\";","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"KIANSEONG":1,"-":294}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"  margin-bottom: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"KIANSEONG"},"content":".post-subtitle {","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"    margin-top: 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"KIANSEONG"},"content":"    color: #808080;","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"KIANSEONG"},"content":"    font-size: $large-font-size;","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":7,"-":262}},{"path":"docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Define defaults for each variable.","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"$large-font-size: $base-font-size * 1.5 !default;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"$spacing-unit:     30px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$table-text-align: left !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// Width of the content area","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$content-width:    800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Use media queries like this:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//   .wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//   }","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// }","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@mixin media-query($device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @content;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":";","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":1,"-":51}},{"path":"docs/diagrams/AddTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"participant \":TaskPanelParser\" as TaskPanelParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"participant \":AddTaskCommandParser\" as AddTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"participant \"a:AddTaskCommand\" as AddTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"[-\u003e LogicManager : execute(\"task add New task\")","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"LogicManager -\u003e TaskPanelParser : parse(\"task add New task\")","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"activate TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"create AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"TaskPanelParser -\u003e AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommandParser --\u003e TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"deactivate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"TaskPanelParser -\u003e AddTaskCommandParser : parse(\"New task\")","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"create AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommandParser -\u003e AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommand --\u003e AddTaskCommandParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommandParser --\u003e TaskPanelParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"deactivate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommandParser -[hidden]-\u003e TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"destroy AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"TaskPanelParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"deactivate TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"LogicManager -\u003e AddTaskCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommand -\u003e Model : addTask(\"New task\")","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"Model --\u003e AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"CommandResult --\u003e AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"AddTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"KIANSEONG":69}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTeammate(t)","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":1,"-":37}},{"path":"docs/diagrams/AssignTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"!include style.puml","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"participant \":TaskPanelParser\" as TaskPanelParser LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"participant \":AssignTaskCommandParser\" as AssignTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"participant \"c:AssignTaskCommand\" as AssignTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"end box","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"end box","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"[-\u003e LogicManager : execute(\"task assign 1 +@2 -@Bernice Yu\")","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"activate LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"LogicManager -\u003e TaskPanelParser : parseCommand(\"task assign 1 +@2 -@Bernice Yu\")","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"activate TaskPanelParser","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"create AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"TaskPanelParser -\u003e AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"activate AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommandParser --\u003e TaskPanelParser","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"deactivate AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"TaskPanelParser -\u003e AssignTaskCommandParser : parse(\"1 +@2 -@Bernice Yu\")","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"activate AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"create AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommandParser -\u003e AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"activate AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommand --\u003e AssignTaskCommandParser : c","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"deactivate AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommandParser --\u003e TaskPanelParser : c","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"deactivate AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommandParser -[hidden]-\u003e TaskPanelParser","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"destroy AssignTaskCommandParser","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"TaskPanelParser --\u003e LogicManager : c","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"deactivate TaskPanelParser","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"LogicManager -\u003e AssignTaskCommand : execute()","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"activate AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"ref over AssignTaskCommand, Model: update Model","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"create CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"activate CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"CommandResult --\u003e AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"deactivate AssignTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"@enduml","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"yilinzyl":66}},{"path":"docs/diagrams/AssignTaskSequenceDiagramReferenceFrame.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"@startuml","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"!include style.puml","lastModifiedDate":"2022-11-07"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"mainframe **sd** update Model","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"participant \"c:AssignTaskCommand\" as AssignTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-11-07"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"participant \"updatedTask:Task\" as Task MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"participant \":assignedContact\" as Contact MODEL_COLOR","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"end box","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"create Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommand -\u003e Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"activate Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"Contact --\u003e AssignTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"deactivate Contact","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"create Task","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommand -\u003e Task","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"activate Task","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"Task --\u003e AssignTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"deactivate Task","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"AssignTaskCommand -\u003e Model : setTask(oldTask, updatedTask)","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"activate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"Model --\u003e AssignTaskCommand","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"deactivate Model","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"@enduml","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"}],"authorContributionMap":{"yilinzyl":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"AddressBook *-right-\u003e \"1\" UniqueTeammateList","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"UniqueTagList -[hidden]down- UniqueTeammateList","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"UniqueTagList -[hidden]down- UniqueTeammateList","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"UniqueTeammateList -right-\u003e Teammate","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"Teammate -up-\u003e \"*\" Tag","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Name","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Phone","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Email","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Address","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":9,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"DeleteCommand -\u003e Model : deleteTeammate(1)","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":1,"-":68}},{"path":"docs/diagrams/EditTaskCommandExecute.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"@startuml","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"autoactivate on","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"box \"Logic\" #LightBlue","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"participant \"e:EditTaskCommand\" as e","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"participant \"result:CommandResult\" as result","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"box \"Model\" #Pink","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"participant \":Model\" as M","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"participant \"editedTask:Task\" as t","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"[-\u003e e : execute()","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"e -\u003e e :  createEditedTask\\n(taskToEdit, copy, teammateList)","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"e -\u003e t **","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"activate t","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"return","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"return editedTask","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"e -\u003e M : setTask(taskToEdit, editedTask)","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"return","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"e -\u003e result ** : new CommandResult\\n(MESSAGE_EDIT_TASK_SUCCESS)","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"activate result","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"return","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"return result","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"destroy e","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"@enduml","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"KIANSEONG":1,"amresh2000":27}},{"path":"docs/diagrams/EditTaskCommandParse.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"@startuml","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"autoactivate on","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"box \"Logic\" #LightBlue","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"participant \":EditTaskCommandParser\" as ETCP","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"participant \"desc:EditTaskDescriptor\" as ETD","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"participant \"copy:EditTaskDescriptor\" as copyETD","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"participant \"e:EditTaskCommand\" as ETC","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"end box","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"[-\u003e ETCP : parse(arguments)","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"ETCP -\u003e ETD ** :","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"activate ETD","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"return desc","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"ETCP -\u003e ETC ** : new EditTaskCommand(index, desc)","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"activate ETC","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"note over copyETD","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"Defensive copyETD of desc created","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"end note","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"ETC -\u003e copyETD ** : new EditTaskDescriptor(desc)","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"activate copyETD","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"return copyETD","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"destroy ETD","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"return ETC","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"destroy copyETD","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"return ETC","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"@enduml","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"amresh2000":36}},{"path":"docs/diagrams/ListTasksSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"participant \":TaskPanelParser\" as TaskPanelParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"participant \":ListTasksCommandParser\" as ListTasksCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"participant \"c:ListTasksCommand\" as ListTasksCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"[-\u003e LogicManager : execute(\"task list -a\")","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"LogicManager -\u003e TaskPanelParser : parseCommand(\"task list -a\")","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"activate TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"create ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"TaskPanelParser -\u003e ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"activate ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"ListTasksCommandParser --\u003e TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"deactivate ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"TaskPanelParser -\u003e ListTasksCommandParser : parse(\" -a\")","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"activate ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"create ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"ListTasksCommandParser -\u003e ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"activate ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"ListTasksCommand --\u003e ListTasksCommandParser : c","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"deactivate ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"ListTasksCommandParser --\u003e TaskPanelParser : c","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"deactivate ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"ListTasksCommandParser -[hidden]-\u003e TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"destroy ListTasksCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"TaskPanelParser --\u003e LogicManager : c","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"deactivate TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"LogicManager -\u003e ListTasksCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"activate ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"ListTasksCommand -\u003e Model : updateFilteredTaskList()","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"Model -\u003e Model : setPredicate()","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"Model --\u003e ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"ListTasksCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"CommandResult --\u003e ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"ListTasksCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"deactivate ListTasksCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"beetee17":70}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    Class TaskPanelParser","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    Class \"{abstract}\\nTaskCommand\" as TaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"package Storage {}","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"LogicManager --\u003e\"0..1\" AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"LogicManager --\u003e\"0..1\" TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"TaskPanelParser ..\u003e TaskCommand : creates \u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"AddressBookParser -[hidden]left-\u003e TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"LogicManager -[hidden]down-\u003e TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"LogicManager -[hidden]down-\u003e AddressBookParser","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"note right of TaskPanelParser: There must be exactly one \\n AddressBookParser or TaskPanelParser","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"XYZCommand --|\u003e Command","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"TaskCommand ---|\u003e Command","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"LogicManager ..\u003e Command : executes \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"Command .[hidden].\u003e Storage","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"Command ..\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"LogicManager ..\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"Command ..\u003e CommandResult : produces \u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":19,"-":35}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaskPanel\" as ReadOnlyTaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    Class TaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    Class UniqueTeammateList","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    Class Teammate","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    Class UniqueTaskList","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    Class Task","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    Class Title","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    Class Deadline","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    Class Project","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    Class Contact","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"Model ..\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"Model ..\u003e ReadOnlyTaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"Model ..\u003e ReadOnlyUserPrefs","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"ModelManager --\u003e \"1\" AddressBook","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"ModelManager --\u003e \"1\" UserPrefs","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"ModelManager --\u003e \"1\" TaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"TaskPanel .up.|\u003e ReadOnlyTaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"AddressBook *--\u003e \"1\" UniqueTeammateList","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"UniqueTeammateList --\u003e \"~* all\" Teammate","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Name","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Phone","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Email","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e Address","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"Teammate *--\u003e \"*\" Tag","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"TaskPanel *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"Task *--\u003e Title","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e Project","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e \"*\" Contact","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"ModelManager --\u003e\"~* filtered\" Teammate","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"ModelManager --\u003e\"~* filtered\" Task","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"Task -[hidden]left-\u003e Teammate","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"Phone -[hidden]left-\u003e Phone","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"Address -[hidden]left-\u003e Phone","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":34,"-":34,"yilinzyl":6}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"Class TaskPanelParser","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"HiddenOutside ..\u003e TaskPanelParser","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"TaskPanelParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"TaskPanelParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"KIANSEONG":4,"-":38}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6 {","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"package \"TaskPanel Storage\" #F4F6F6 {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nTaskPanelStorage\" as TaskPanelStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    Class JsonTaskPanelStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    Class JsonSerializableTaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    Class JsonAdaptedTask","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    Class JsonAdaptedContact","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6 {","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    Class JsonAdaptedTeammate","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"StorageManager -down-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"StorageManager -down-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"StorageManager -down-\u003e \"1\" TaskPanelStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"Storage --|\u003e UserPrefsStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"Storage --|\u003e AddressBookStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"Storage --|\u003e TaskPanelStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTeammate","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"JsonAdaptedTeammate --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"JsonTaskPanelStorage .up.|\u003e TaskPanelStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"JsonTaskPanelStorage ..\u003e JsonSerializableTaskPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"JsonSerializableTaskPanel --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"JsonAdaptedTask --\u003e \"*\" JsonAdaptedContact","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":19,"-":39,"yilinzyl":2}},{"path":"docs/diagrams/TaskClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"!include style.puml","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"Class Task","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"Class Title","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"Class Deadline","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"Class Project","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"Class Contact","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e Title","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e Project","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"Task *--\u003e \"*\" Contact","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"yilinzyl":20}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"Class TeammateListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"Class TeammateCard","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"Class TaskListPanel","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"Class TaskCard","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"MainWindow *-down-\u003e \"1\" TeammateListPanel","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"TeammateListPanel -down-\u003e \"*\" TeammateCard","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"TeammateListPanel --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"TeammateCard --|\u003e UiPart","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"TeammateCard ..\u003e Model","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"TeammateListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"KIANSEONG":8,"-":52,"yilinzyl":7}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"ecp -\u003e ec ++: index, editTeammateDescriptor","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"KIANSEONG":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"title: Arrow","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T08-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T08-2/tp/actions)","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T08-2/tp/branch/master/graph/badge.svg?token\u003dRSRRNMAYHF)](https://codecov.io/gh/AY2223S1-CS2103T-T08-2/tp)","lastModifiedDate":"2022-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"**Arrow is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"* If you are interested in using Arrow, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"* If you are interested about developing Arrow, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [PrettyTime NLP](https://www.ocpsoft.org/prettytime/nlp/)","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"KIANSEONG":5,"beetee17":1,"-":13}},{"path":"docs/team/amresh2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"# Amresh\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"## Software Product: `Arrow`","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"**Arrow** is a **desktop app** that **help software project managers keep track of their members’ tasks and deliverables**.","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"By associating tasks to specific team members, users can **keep track of what needs to be done and have quick access to","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"contact information should they wish to reach out to the member**.","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"**Arrow** uses a _Command Line Interface_ (CLI)at the same time possessing convenience of a _Graphical User Interface_ (GUI).","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"The main target audiences are software","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"project managers, which assumptively equipped with _Command Line Interface_ (CLI) skills.","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"## Summary of Contributions:","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"- **New feature**: Added the ability to delete tasks ([PR #75](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/75))","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"  - What it does: Allows the user to delete tasks. When `TaskPanel` gets too cluttered, or when `Task` are done, in order to declutter overall `TaskPanel`, this feature is implemented.","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"- **New feature**: Added the ability to edit tasks ([PR #92](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/92))","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"  - What it does: Allows the user to edit tasks. Once `Task` is added, if user wants to change title, deadline or even contacts that tasks has been assigned to, this feature would assist in that process.","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"- **New feature**: Added the ability to list all projects. ([PR #116](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/116))","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"  - What it does: Since some tasks are associated with some projects, if user wants to list all projects that are currently in progress, this command will assist in it.","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"- Code contributed: [Code Panel](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dt08\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003damresh2000\u0026tabRepo\u003dAY2223S1-CS2103T-T08-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"- **Testing**","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"  - Added test cases for task-related commands that I worked on ([#75](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/75),","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    [#92](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/92), [#116](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/116)).","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"- **Documentation**","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"  - Added `task delete`, `task edit`, `task project`","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"  - Added `task delete` and `task edit` and Non-functional Requirements to Developer Guide.","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"- **Community**","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"  - PRs reviewed: [#73](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/73), [#76](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/76), [#89](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/89),","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"amresh2000":28}},{"path":"docs/team/beetee17.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"# Brandon\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"## Arrow","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"**Arrow** is a **desktop app** that **help software project managers keep track of their members’ tasks and deliverables**.","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"By associating tasks to specific team members, users can **keep track of what needs to be done and have quick access to","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"contact information should they wish to reach out to the member**.","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"### Summary of Contributions:","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"#### [Code contributed](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dbeetee17\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"#### Enhancements implemented","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"- Implemented the `task list`, a fully-featured command for filtering the tasks list by numerous criteria","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"- Implemented the `task do ... by/` command for setting deadlines to a task.","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"  - Used the [`PrettyTime NLP` library](https://www.ocpsoft.org/prettytime/nlp/) for an improved user experience as it allows users to specify deadlines in plain English.","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"- Various GUI components such as:","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"  - Separating the bottom panel into two panels (for task list and address book)","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"  - Task checkboxes which indicate completion status and allows users an alternative way to `mark` and `unmark` tasks without typing in the command.","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"#### Contributions to the UG","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"- `Filtering the Tasks List`","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"- `Setting deadlines to a task: task do ... by/`, ","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"#### Contributions to the DG","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"- `List Tasks feature`","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"- `User Stories`","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"beetee17":26}},{"path":"docs/team/kianseong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"# Kian Seong\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"## Arrow","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"Arrow is a desktop app that help software project managers keep track of their members’ tasks and deliverables. It helps track the team\u0027s progress and delegate tasks effectively.","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"## Contributions","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"### Features","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"- `task add` - Command to add a new task to the task panel","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"- Quality of Life features including using arrow keys to navigate between previously entered command.","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"- Code contributed: [RepoSense](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dkianseong\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"- Contributions to the UG: Which sections did you contribute to the UG?","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"- Contributions to the DG: Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"- Documentation","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"- Contributions to team-based tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"  - Review/mentoring contributions: Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"- Contributions to the Developer Guide (Extracts): Reproduce the parts in the Developer Guide that you wrote.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"- Contributions to the User Guide (Extracts): Reproduce the parts in the User Guide that you wrote.","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"KIANSEONG":20}},{"path":"docs/team/wxy1203.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"# Xinyi\u0027s Project Portfolio Page","lastModifiedDate":"2022-11-07"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"## Software Product: `Arrow`","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"**Arrow** is a **desktop app** that **help software project managers keep track of their members’ tasks and deliverables**.","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"By associating tasks to specific team members, users can **keep track of what needs to be done and have quick access to","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"contact information should they wish to reach out to the member**.","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"**Arrow** uses a _Command Line Interface_ (CLI)at the same time possessing convenience of a _Graphical User Interface_ (GUI).","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"The main target audiences are software","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"project managers, which assumptively equipped with _Command Line Interface_ (CLI) skills.","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"## Summary of Contributions:","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"- **New feature**: Added the ability to mark tasks ([PR #73](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/73))","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"    - What it does: Users can enter `task mark` and the task index to mark the task as complete.","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"    - Justification: There are many tasks in the task panel list, and the command is to mark the complete status of task.","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"  Users can use this command to mark one task as complete.","lastModifiedDate":"2022-11-07"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"    - Highlights: And once the task is marked as completed, the task will disappear from the task panel list.","lastModifiedDate":"2022-11-07"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":"      To show the full task list with and without the complete ones, users need to enter `task -a`.","lastModifiedDate":"2022-11-07"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"- **New feature**: Added the ability to unmark tasks ([PR #91](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/91))","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"  - What it does: Users can enter `task unmark` and the task index to mark the task as incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"  - Justification: There are many tasks in the task panel list, and the command is to mark the incomplete status of task.","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"    Users can use this command to mark one task as incomplete.","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"  - Highlights: And once the task is marked as completed, the task will disappear from the task panel list.","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"    To show the full task list with and without the complete ones, users need to enter `task -a`.","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"- **New feature**: Added the ability to clear task panel list ([PR #118](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/118))","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"  - What it does: Users can enter `task clear` to clear all the tasks/data of the current task panel list.","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"  - Justification: There are many tasks in the task panel list, and the command is to clear all the tasks existing.","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"    Users can use this command to clear the task panel list.","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"- **New feature**: Added the ability to sort deadlines of tasks ([PR #124](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/124)), ([PR #103](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/103))","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"wxy1203"},"content":"  - What it does: Users can enter `task sort` to sort the tasks by deadlines.","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"wxy1203"},"content":"  - Justification: As the users make each task assigned with deadlines. ","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"wxy1203"},"content":"  It is certainly useful for them to have a vision of sorting by deadlines.","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"wxy1203"},"content":"  It gives a straightforward impression of which task is the most urgent, and which one is the least. ","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"  - Highlights: There can be tasks without assigning deadlines.","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"  For those tasks, after entering `task sort`, they won\u0027t be shown on the task panel list, since they have no deadline.","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"wxy1203"},"content":"  However, they are still in the panel list. And to show the task, users can enter `task list`.","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"wxy1203"},"content":"## Summary of Contributions:","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"wxy1203"},"content":"- Code contributed: [Code Panel](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dwxy1203\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dwxy1203\u0026tabRepo\u003dAY2223S1-CS2103T-T08-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"wxy1203"},"content":"- Enhancements implemented: `task` commands i.e. `mark`, `unmark`, `clear`, `sort`.","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"wxy1203"},"content":"- Contributions to the UG: `Introduction`, `Glossary`, `Quick Start`, `FAQ`, `Tutorial for CLI`.","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"wxy1203"},"content":"- Contributions to the DG: `Logic`,`Model`.","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"wxy1203"},"content":"- Documentation","lastModifiedDate":"2022-10-01"},{"lineNumber":49,"author":{"gitId":"wxy1203"},"content":"- Contributions to team-based tasks","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"wxy1203"},"content":"    - Review/mentoring contributions: \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"wxy1203"},"content":"  i.e. [PR #118](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/118),","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"wxy1203"},"content":"   [PR #73](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/73)","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"wxy1203"},"content":"- Contributions to the Developer Guide (Extracts): `Logic`,`Model`.","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"wxy1203"},"content":"- Contributions to the User Guide (Extracts): `Introduction`, `Glossary`, `Quick Start`, `FAQ`, `Tutorial for CLI`.","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"wxy1203":55}},{"path":"docs/team/yilinzyl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"# Yilin\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"## Software Product: `Arrow`","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"**Arrow** is a **desktop app** that **help software project managers keep track of their members’ tasks and deliverables**.","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"By associating tasks to specific team members, users can **keep track of what needs to be done and have quick access to","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"contact information should they wish to reach out to the member**.","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"**Arrow** uses a _Command Line Interface_ (CLI)at the same time possessing convenience of a _Graphical User Interface_ (GUI).","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"The main target audiences are software","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"project managers, which assumptively equipped with _Command Line Interface_ (CLI) skills.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"### Summary of Contributions:","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"#### [Code contributed](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dyilinzyl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"#### Enhancements implemented","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"- **New feature**: Added the ability to assign contacts to tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"  - What it does: Allows the user to assign contacts to tasks by full name or index of contact, for delegation of work. Also modified EditCommand and DeleteCommand to edit the name of/delete the contact tagged under tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"- **New feature**: Added the ability to tag projects under tasks.","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"  - What it does: Allows the user to group tasks under projects.","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"- **New feature**: Added the ability to filter teammates by tags.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"  - What it does: Allows the user to find all teammates with the same tag.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"#### Documentation","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"- UG: Added `task assign`, updated `find` to reflect search for tasks","lastModifiedDate":"2022-11-07"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"- DG: Added `task assign` and Use cases. Updated UI, Model, Storage diagram to reflect additional fields in Task.","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"#### Community","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"- PRs reviewed: [#73](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/73), [#75](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/75), [#108](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/108), [#118](https://github.com/AY2223S1-CS2103T-T08-2/tp/pull/118)","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"KIANSEONG":2,"yilinzyl":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":" * Changes the remark of an existing teammate in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"            + \": Edits the remark of the teammate identified \"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"            + \"by the index number used in the last teammate listing. \"","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"     * @param index of the teammate in the filtered teammate list to edit the remark","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"     * @param remark of the teammate to be updated to","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"KIANSEONG"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of teammate data. We achieve that by working with the `Teammate` model. Each field in a Teammate is implemented as a separate class (e.g. a `Name` object represents the teammate’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"KIANSEONG"},"content":"Create a new `Remark` in `seedu.address.model.teammate`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-11-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"KIANSEONG"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"KIANSEONG"},"content":"Simply add the following to [`seedu.address.ui.TeammateCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-11-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"KIANSEONG"},"content":"**`TeammateCard.java`:**","lastModifiedDate":"2022-11-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"KIANSEONG"},"content":"Then insert the following into [`main/resources/view/TeammateListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-11-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"KIANSEONG"},"content":"**`TeammateListCard.fxml`:**","lastModifiedDate":"2022-11-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"KIANSEONG"},"content":"## Modify `Teammate` to support a `Remark` field","lastModifiedDate":"2022-11-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"KIANSEONG"},"content":"Since `TeammateCard` displays data from a `Teammate`, we need to update `Teammate` to get our `Remark` displayed!","lastModifiedDate":"2022-11-06"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"KIANSEONG"},"content":"### Modify `Teammate`","lastModifiedDate":"2022-11-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"KIANSEONG"},"content":"We change the constructor of `Teammate` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-11-06"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"KIANSEONG"},"content":"### Update other usages of `Teammate`","lastModifiedDate":"2022-11-06"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"KIANSEONG"},"content":"Unfortunately, a change to `Teammate` will cause other commands to break, you will have to modify these commands to use the updated `Teammate`!","lastModifiedDate":"2022-11-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"KIANSEONG"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Teammate` class to find these commands.","lastModifiedDate":"2022-11-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"KIANSEONG"},"content":"AddressBook stores data by serializing `JsonAdaptedTeammate` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedTeammate` to work with our new `Teammate`!","lastModifiedDate":"2022-11-06"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"KIANSEONG"},"content":"Now that we have finalized the `Teammate` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-11-06"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"KIANSEONG"},"content":"**`TeammateCard.java`:**","lastModifiedDate":"2022-11-06"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"KIANSEONG"},"content":"public TeammateCard(Teammate teammate, int displayedIndex) {","lastModifiedDate":"2022-11-06"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"KIANSEONG"},"content":"    remark.setText(teammate.getRemark().value);","lastModifiedDate":"2022-11-06"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"KIANSEONG"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Teammate`. Since all fields in a `Teammate` are immutable, we create a new instance of a `Teammate` with the values that we want and","lastModifiedDate":"2022-11-06"},{"lineNumber":329,"author":{"gitId":"KIANSEONG"},"content":"save it with `Model#setTeammate()`.","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Teammate: %1$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":336,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Teammate: %1$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e lastShownList \u003d model.getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"KIANSEONG"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammateToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":347,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedTeammate \u003d new Teammate(","lastModifiedDate":"2022-11-06"},{"lineNumber":348,"author":{"gitId":"KIANSEONG"},"content":"                teammateToEdit.getName(), teammateToEdit.getPhone(), teammateToEdit.getEmail(),","lastModifiedDate":"2022-11-06"},{"lineNumber":349,"author":{"gitId":"KIANSEONG"},"content":"                teammateToEdit.getAddress(), remark, teammateToEdit.getTags());","lastModifiedDate":"2022-11-06"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"KIANSEONG"},"content":"        model.setTeammate(teammateToEdit, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":352,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTeammateList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-11-06"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(generateSuccessMessage(editedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"KIANSEONG"},"content":"     * {@code teammateToEdit}.","lastModifiedDate":"2022-11-06"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"KIANSEONG"},"content":"    private String generateSuccessMessage(Teammate teammateToEdit) {","lastModifiedDate":"2022-11-06"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"KIANSEONG"},"content":"        return String.format(message, teammateToEdit);","lastModifiedDate":"2022-11-06"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"KIANSEONG":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Teammate` class.","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"The `address` field in `Teammate` is actually an instance of the `seedu.address.model.teammate.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditTeammateDescriptor` may require more careful inspection.","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"Let’s try removing references to `Address` in `EditTeammateDescriptor`.","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"1. Safe delete the field `address` in `EditTeammateDescriptor`.","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Teammate` class will require you to modify its constructor.","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `TeammateCard` that has not been removed nor identified.","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"A quick look at the `TeammateCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"**`TeammateCard.java`**","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"**`TeammateCard.fxml`**","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"**`invalidTeammateAddressBook.json`:**","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"  \"teammates\": [ {","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    \"name\": \"Teammate with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"KIANSEONG"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditTeammateDescriptor`. Recall that we can verify the contents of `editTeammateDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"KIANSEONG"},"content":"       Teammate teammateToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":193,"author":{"gitId":"KIANSEONG"},"content":"       Teammate editedTeammate \u003d createEditedTeammate(teammateToEdit, editTeammateDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":194,"author":{"gitId":"KIANSEONG"},"content":"       if (!teammateToEdit.isSameTeammate(editedTeammate) \u0026\u0026 model.hasTeammate(editedTeammate)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":195,"author":{"gitId":"KIANSEONG"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"KIANSEONG"},"content":"       model.setTeammate(teammateToEdit, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":198,"author":{"gitId":"KIANSEONG"},"content":"       model.updateFilteredTeammateList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-11-06"},{"lineNumber":199,"author":{"gitId":"KIANSEONG"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"KIANSEONG"},"content":"   * it uses the `setTeammate()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the teammate data.","lastModifiedDate":"2022-11-06"},{"lineNumber":205,"author":{"gitId":"KIANSEONG"},"content":"   * it uses the `updateFilteredTeammateList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ teammates.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":206,"author":{"gitId":"KIANSEONG"},"content":"     FYI, The \u0027filtered list\u0027 is the list of teammates resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the teammates so that the user can see the edited teammate along with all other teammates. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":207,"author":{"gitId":"KIANSEONG"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of teammates is being tracked.","lastModifiedDate":"2022-11-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"KIANSEONG"},"content":"        teammates.addAll(","lastModifiedDate":"2022-11-06"},{"lineNumber":235,"author":{"gitId":"KIANSEONG"},"content":"            source.getTeammateList()","lastModifiedDate":"2022-11-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"KIANSEONG"},"content":"                  .map(JsonAdaptedTeammate::new)","lastModifiedDate":"2022-11-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"KIANSEONG"},"content":"1. It appears that a `JsonAdaptedTeammate` is created for each `Teammate` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-11-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"KIANSEONG"},"content":"    5.  Add a new field to `Teammate`","lastModifiedDate":"2022-11-06"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KIANSEONG":18,"-":283}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.storage.JsonTaskPanelStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.storage.TaskPanelStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Arrow ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanelStorage taskPanelStorage \u003d new JsonTaskPanelStorage(userPrefs.getTaskPanelFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        storage \u003d new StorageManager(addressBookStorage, taskPanelStorage, userPrefsStorage);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book, {@code storage}\u0027s task panel","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"     * and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"     * The data from the sample task panel will be used instead if {@code storage}\u0027s task panel is not found,","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        Optional\u003cReadOnlyTaskPanel\u003e taskPanelOptional;","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        ReadOnlyAddressBook initialAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        ReadOnlyTaskPanel initialTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"            initialAddressBook \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"            taskPanelOptional \u003d storage.readTaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"            if (taskPanelOptional.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"                logger.info(\"Task data file not found. Will be starting with a sample TaskPanel\");","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"            initialTaskPanel \u003d taskPanelOptional.orElseGet(SampleDataUtil::getSampleTaskPanel);","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"            logger.warning(\"Task data file not in the correct format. Will be starting with an empty TaskPanel\");","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"            initialTaskPanel \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"            logger.warning(\"Problem while reading from the task data file. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"                + \"Will be starting with an empty TaskPanel\");","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"            initialTaskPanel \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"        return new ModelManager(initialAddressBook, initialTaskPanel, userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"KIANSEONG"},"content":"        logger.info(\"Starting Arrow \" + MainApp.VERSION);","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"KIANSEONG"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Arrow ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"KIANSEONG"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"KIANSEONG"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"KIANSEONG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"KIANSEONG"},"content":"            logger.severe(\"Failed to save Address Book \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"KIANSEONG"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"KIANSEONG"},"content":"            storage.saveTaskPanel(model.getTaskPanel());","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"KIANSEONG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"KIANSEONG"},"content":"            logger.severe(\"Failed to save Task Panel \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":54,"-":171}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX \u003d \"The teammate index provided is invalid\";","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_TEAMMATES_LISTED_OVERVIEW \u003d \"%1$d teammates listed!\";","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM \u003d \"The teammate index %1$d provided is invalid\";","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_INVALID_TEAMMATE_NAME \u003d \"The name %1$s provided is invalid\";","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":4,"amresh2000":1,"-":11}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":1,"-":115}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"     * Returns true if {@code s} represents an integer","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"            return true;","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"            return false;","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":2,"-":65,"yilinzyl":16}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"     * Executes a valid command and returns the result.","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"     * @param command A valid command to be executed.","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"    CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    /** Returns an unmodifiable view of the filtered list of teammates */","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    ObservableList\u003cTeammate\u003e getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KIANSEONG":3,"beetee17":12,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskPanelParser;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    private final TaskPanelParser taskPanelParser;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        taskPanelParser \u003d new TaskPanelParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        Command command;","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        // checks if command starts with \"task\" and creates separate parsers for task-related commands","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        if ((commandText.startsWith(TaskCommand.COMMAND_WORD + \" \"))","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"            || (commandText.startsWith(TaskCommand.COMMAND_WORD_ALIAS + \" \"))) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            command \u003d taskPanelParser.parse(commandText);","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        } else {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"            command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"        return execute(command);","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"    public CommandResult execute(Command command) throws CommandException {","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"            storage.saveTaskPanel(model.getTaskPanel());","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"    public ObservableList\u003cTeammate\u003e getFilteredTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        return model.getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KIANSEONG":16,"beetee17":10,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":" * Adds a teammate to the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a teammate to the address book. \"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New teammate added: %1$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DUPLICATE_TEAMMATE \u003d \"This teammate already exists in the address book\";","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    private final Teammate toAdd;","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"     * Creates an AddCommand to add the specified {@code Teammate}","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    public AddCommand(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        toAdd \u003d teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        if (model.hasTeammate(toAdd)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        model.addTeammate(toAdd);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":13,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"        return feedbackToUser;","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"beetee17":4,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.AssignedToContactsPredicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":" * Deletes a teammate identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"            + \": Deletes the teammate identified by the index number used in the displayed teammate list.\\n\"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DELETE_TEAMMATE_SUCCESS \u003d \"Deleted Teammate: %1$s\"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"            + \"\\nThe following tasks\u0027 assigned contacts have been modified:\";","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e lastShownList \u003d model.getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammateToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        updateTasksAssignedContacts(model, teammateToDelete);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        model.deleteTeammate(teammateToDelete);","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TEAMMATE_SUCCESS, teammateToDelete));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    private void updateTasksAssignedContacts(Model model, Teammate teammateToDelete) throws CommandException {","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        Contact contactToDelete \u003d new Contact(teammateToDelete.getName().fullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        model.updateFilteredTaskList(new AssignedToContactsPredicate(contactToDelete));","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d new ArrayList\u003c\u003e(model.getFilteredTaskList());","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        List\u003cTask\u003e modifiedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        for (Task task : lastShownTaskList) {","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"            Set\u003cContact\u003e newAssignedContactList \u003d new HashSet\u003c\u003e(task.getAssignedContacts());","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"            newAssignedContactList.remove(contactToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"            Task newTask \u003d new Task(task.getTitle(), task.getCompleted(), task.getDeadline(),","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"                    task.getProject(), newAssignedContactList);","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"            model.setTask(task, newTask);","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"            modifiedTaskList.add(newTask);","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"        model.updateFilteredTaskList(modifiedTaskList::contains);","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":12,"-":46,"yilinzyl":19}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.AssignedToContactsPredicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":" * Edits the details of an existing teammate in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the teammate identified \"","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"            + \"by the index number used in the displayed teammate list. \"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_EDIT_TEAMMATE_SUCCESS \u003d \"Edited Teammate: %1$s\"","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"            + \"\\nThe following tasks\u0027 assigned contacts have been modified:\";","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DUPLICATE_TEAMMATE \u003d \"This teammate already exists in the address book.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    private final EditTeammateDescriptor editTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"     * @param index of the teammate in the filtered teammate list to edit","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"     * @param editTeammateDescriptor details to edit the teammate with","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"    public EditCommand(Index index, EditTeammateDescriptor editTeammateDescriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(editTeammateDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        this.editTeammateDescriptor \u003d new EditTeammateDescriptor(editTeammateDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e lastShownList \u003d model.getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammateToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedTeammate \u003d createEditedTeammate(teammateToEdit, editTeammateDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        if (!teammateToEdit.isSameTeammate(editedTeammate) \u0026\u0026 model.hasTeammate(editedTeammate)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        updateTasksAssignedContacts(model, teammateToEdit, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        model.setTeammate(teammateToEdit, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTeammateList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"    private void updateTasksAssignedContacts(Model model, Teammate teammateToEdit,","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"                                             Teammate editedTeammate) throws CommandException {","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"        Contact contactToEdit \u003d new Contact(teammateToEdit.getName().fullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        Contact editedContact \u003d new Contact(editedTeammate.getName().fullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"        model.updateFilteredTaskList(new AssignedToContactsPredicate(contactToEdit));","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d new ArrayList\u003c\u003e(model.getFilteredTaskList());","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"        for (Task task : lastShownTaskList) {","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"            Set\u003cContact\u003e newAssignedContactList \u003d new HashSet\u003c\u003e(task.getAssignedContacts());","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"            newAssignedContactList.remove(contactToEdit);","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"            newAssignedContactList.add(editedContact);","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"            model.setTask(task, new Task(task.getTitle(), task.getCompleted(), task.getDeadline(), task.getProject(),","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"                    newAssignedContactList));","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"        model.updateFilteredTaskList(new AssignedToContactsPredicate(editedContact));","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"     * Creates and returns a {@code Teammate} with the details of {@code teammateToEdit}","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"     * edited with {@code editTeammateDescriptor}.","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"    private static Teammate createEditedTeammate(","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"            Teammate teammateToEdit, EditTeammateDescriptor editTeammateDescriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"        assert teammateToEdit !\u003d null;","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"        Name updatedName \u003d editTeammateDescriptor.getName().orElse(teammateToEdit.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"        Phone updatedPhone \u003d editTeammateDescriptor.getPhone().orElse(teammateToEdit.getPhone());","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"        Email updatedEmail \u003d editTeammateDescriptor.getEmail().orElse(teammateToEdit.getEmail());","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"        Address updatedAddress \u003d editTeammateDescriptor.getAddress().orElse(teammateToEdit.getAddress());","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTeammateDescriptor.getTags().orElse(teammateToEdit.getTags());","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        return new Teammate(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 editTeammateDescriptor.equals(e.editTeammateDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"     * Stores the details to edit the teammate with. Each non-empty field value will replace the","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"     * corresponding field value of the teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    public static class EditTeammateDescriptor {","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"        public EditTeammateDescriptor() {}","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"        public EditTeammateDescriptor(EditTeammateDescriptor toCopy) {","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"KIANSEONG"},"content":"            if (!(other instanceof EditTeammateDescriptor)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"KIANSEONG"},"content":"            EditTeammateDescriptor e \u003d (EditTeammateDescriptor) other;","lastModifiedDate":"2022-11-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"KIANSEONG":50,"-":184,"yilinzyl":16}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.ContainsTagPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":" * Finds and lists all teammates in address book whose name contains any of the argument keywords, or any of the","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":" * argument tags.","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all teammates whose names contain any of \"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"            + \"the specified keywords (case-insensitive), or whose tags contain any of the specified tags, and \"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"            + \"displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"            + \"At least one keyword/tag has to be provided. \\n\"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"            + \"Parameters: [NAME_KEYWORD]... \"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"            + \"[\" + PREFIX_TAG + \"TAG_KEYWORD]...\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie \"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_TAG + \"developers \" + PREFIX_TAG + \"qa\";","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    private final ContainsTagPredicate tagsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"     * @param namePredicate for names to filter","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"     * @param tagsPredicate for tags to filter","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    public FindCommand(NameContainsKeywordsPredicate namePredicate, ContainsTagPredicate tagsPredicate) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        requireAllNonNull(namePredicate, tagsPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        this.tagsPredicate \u003d tagsPredicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        Predicate\u003cTeammate\u003e filter \u003d tagsPredicate.or(namePredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTeammateList(filter);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"                String.format(Messages.MESSAGE_TEAMMATES_LISTED_OVERVIEW, model.getFilteredTeammateList().size()));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"                \u0026\u0026 namePredicate.equals(((FindCommand) other).namePredicate)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"KIANSEONG":8,"-":30,"yilinzyl":23}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":" * Lists all teammates in the address book to the user.","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all teammates\";","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTeammateList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":5,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":" * Main command for task operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"    public static final String COMMAND_WORD_ALIAS \u003d \"t\";","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":9}},{"path":"src/main/java/seedu/address/logic/commands/task/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" * Adds a task to the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"public class AddTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL + \": Adds a task to the task panel. \\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"            + \"TITLE \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" \"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"            + \"New task\";","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully added new task: %s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task with the name \u0027%s\u0027 already exists.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    private final Title title;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    public AddTaskCommand(Title title) {","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     * Creates an AddTaskCommand for the purpose of testing.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        title \u003d task.getTitle();","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        Task toAdd \u003d new Task(title);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK, toAdd.getTitle()));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, title));","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 title.equals(((AddTaskCommand) other).title));","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":66,"yilinzyl":2}},{"path":"src/main/java/seedu/address/logic/commands/task/AssignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_CONTACT;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_CONTACT;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":" * Assigns teammate(s) to a task.","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"public class AssignTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL + \": Assigns/unassigns teammate(s) to a task.\\n\"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"            + \"TASK_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"            + \"[\" + PREFIX_ADD_CONTACT + \"CONTACT_INDEX OR CONTACT_NAME]... \"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"            + \"[\" + PREFIX_DELETE_CONTACT + \"CONTACT_INDEX OR CONTACT_NAME]...\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"            + \"1 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_ADD_CONTACT + \"1 \"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_ADD_CONTACT + \"Bernice Yu \"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_DELETE_CONTACT + \"3 \"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_DELETE_CONTACT + \"David Li\";","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assigned teammates updated for task: %1$s\";","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    public static final String MESSAGE_REPEATED_CONTACT \u003d \"Note: %1$s has already been added.\";","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    public static final String MESSAGE_CONTACT_DOES_NOT_EXIT \u003d \"Note: %1$s has not been previously assigned.\";","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    private final Index taskIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    private final Set\u003cIndex\u003e teammateAddIndexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    private final Set\u003cString\u003e teammateAddNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    private final Set\u003cIndex\u003e teammateDeleteIndexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    private final Set\u003cString\u003e teammateDeleteNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"    private final Set\u003cString\u003e invalidNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"    private final Set\u003cIndex\u003e invalidIndexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"    private final Set\u003cContact\u003e alreadyAddedContacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"    private final Set\u003cContact\u003e notAddedContacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"     * Creates an AssignTaskCommand to assign teammates to the given task.","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"     * @param taskIndex of the task to be updated","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"     * @param teammateAddIndexes Indexes of all teammates to be assigned to task","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"     * @param teammateAddNames Names of all teammates to be assigned to task","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"     * @param teammateDeleteIndexes Indexes of all teammates to be removed from task","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"     * @param teammateDeleteNames Names of all teammates to be removed from task","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    public AssignTaskCommand(Index taskIndex, Set\u003cIndex\u003e teammateAddIndexes, Set\u003cString\u003e teammateAddNames,","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"                             Set\u003cIndex\u003e teammateDeleteIndexes, Set\u003cString\u003e teammateDeleteNames) {","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(taskIndex, teammateAddIndexes, teammateAddNames, teammateDeleteIndexes, teammateDeleteNames);","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        this.teammateAddIndexes.addAll(teammateAddIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        this.teammateAddNames.addAll(teammateAddNames);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        this.teammateDeleteIndexes.addAll(teammateDeleteIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        this.teammateDeleteNames.addAll(teammateDeleteNames);","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"        Task taskToModify \u003d lastShownTaskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e lastShownTeammatesList \u003d model.getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cContact\u003e contactsToAdd \u003d getAllContacts(teammateAddIndexes, teammateAddNames, lastShownTeammatesList);","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cContact\u003e contactsToDelete \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"                getAllContacts(teammateDeleteIndexes, teammateDeleteNames, lastShownTeammatesList);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"        if (!invalidIndexes.isEmpty() || !invalidNames.isEmpty()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"            throw new CommandException(buildErrorMessage());","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"        Set\u003cContact\u003e contactSetToModify \u003d new HashSet\u003c\u003e(taskToModify.getAssignedContacts());","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"        for (Contact contactToAdd : contactsToAdd) {","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"            if (contactSetToModify.contains(contactToAdd)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"                alreadyAddedContacts.add(contactToAdd);","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"            contactSetToModify.add(contactToAdd);","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"        for (Contact contactToAdd : contactsToDelete) {","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"            if (!contactSetToModify.contains(contactToAdd)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"                notAddedContacts.add(contactToAdd);","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"            contactSetToModify.remove(contactToAdd);","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"beetee17"},"content":"        Task editedTask \u003d new Task(","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"                taskToModify.getTitle(),","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"                taskToModify.getCompleted(),","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"                taskToModify.getDeadline(),","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"                taskToModify.getProject(),","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"                contactSetToModify","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        model.setTask(taskToModify, editedTask);","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"        if (!alreadyAddedContacts.isEmpty() || !notAddedContacts.isEmpty()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"            return new CommandResult(buildInfoMessage()","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"                    + String.format(MESSAGE_SUCCESS, taskIndex.getOneBased()));","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskIndex.getOneBased()));","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"    private Set\u003cContact\u003e teammateIndexesToContacts(Set\u003cIndex\u003e teammateIndexes, List\u003cTeammate\u003e teammateList) {","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cContact\u003e assignedContacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"        for (Index teammateIndex : teammateIndexes) {","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"            if (teammateIndex.getZeroBased() \u003e\u003d teammateList.size()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"                invalidIndexes.add(teammateIndex);","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"                continue;","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"            Contact contactToAssign \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"                new Contact(teammateList.get(teammateIndex.getZeroBased()).getName().fullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"            assignedContacts.add(contactToAssign);","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"yilinzyl"},"content":"        return assignedContacts;","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"     * Returns teammate\u0027s name (with proper capitalisation) if a given string is a name that belongs to one of the","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"     * teammates in the list of teammates. Otherwise, returns an empty string.","lastModifiedDate":"2022-11-07"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"    public static String contactNameInTeammatesList(List\u003cTeammate\u003e teammateList, String test) {","lastModifiedDate":"2022-11-07"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"        return teammateList.stream()","lastModifiedDate":"2022-11-07"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"                .map(t -\u003e t.getName().fullName)","lastModifiedDate":"2022-11-07"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"                .filter(t -\u003e t.equalsIgnoreCase(test))","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"                .findFirst()","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"                .orElse(\"\");","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"    private Set\u003cContact\u003e teammateNamesToContacts(Set\u003cString\u003e teammateNames, List\u003cTeammate\u003e teammateList) {","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"yilinzyl"},"content":"        Set\u003cContact\u003e assignedContacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"        for (String teammateName : teammateNames) {","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"            String matchingTeammatesName \u003d contactNameInTeammatesList(teammateList, teammateName);","lastModifiedDate":"2022-11-07"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"            if (matchingTeammatesName.isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"                invalidNames.add(teammateName);","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"yilinzyl"},"content":"                continue;","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"            Contact contactToAssign \u003d new Contact(matchingTeammatesName);","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"yilinzyl"},"content":"            assignedContacts.add(contactToAssign);","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"yilinzyl"},"content":"        return assignedContacts;","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"    private Set\u003cContact\u003e getAllContacts(","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"KIANSEONG"},"content":"            Set\u003cIndex\u003e teammateIndexes, Set\u003cString\u003e teammateNames, List\u003cTeammate\u003e teammateList) {","lastModifiedDate":"2022-11-06"},{"lineNumber":172,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cContact\u003e contactsFromIndex \u003d teammateIndexesToContacts(teammateIndexes, teammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cContact\u003e contactsFromName \u003d teammateNamesToContacts(teammateNames, teammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":174,"author":{"gitId":"yilinzyl"},"content":"        contactsFromIndex.addAll(contactsFromName);","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"yilinzyl"},"content":"        return contactsFromIndex;","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"yilinzyl"},"content":"    private String buildErrorMessage() {","lastModifiedDate":"2022-10-18"},{"lineNumber":179,"author":{"gitId":"KIANSEONG"},"content":"        StringBuilder errorMessage \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"yilinzyl"},"content":"        for (Index invalidIndex : invalidIndexes) {","lastModifiedDate":"2022-10-18"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"            String currMessage \u003d String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-06"},{"lineNumber":182,"author":{"gitId":"yilinzyl"},"content":"                    invalidIndex.getOneBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"KIANSEONG"},"content":"            errorMessage.append(currMessage);","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"KIANSEONG"},"content":"            errorMessage.append(\"\\n\");","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"yilinzyl"},"content":"        for (String invalidName : invalidNames) {","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"KIANSEONG"},"content":"            String currMessage \u003d String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME, invalidName);","lastModifiedDate":"2022-11-06"},{"lineNumber":188,"author":{"gitId":"KIANSEONG"},"content":"            errorMessage.append(currMessage);","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"KIANSEONG"},"content":"            errorMessage.append(\"\\n\");","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"yilinzyl"},"content":"        return errorMessage.toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"yilinzyl"},"content":"    private String buildInfoMessage() {","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"yilinzyl"},"content":"        StringBuilder infoMessage \u003d new StringBuilder();","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"yilinzyl"},"content":"        for (Contact contact : alreadyAddedContacts) {","lastModifiedDate":"2022-10-18"},{"lineNumber":197,"author":{"gitId":"yilinzyl"},"content":"            String currMessage \u003d String.format(MESSAGE_REPEATED_CONTACT, contact.toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":198,"author":{"gitId":"yilinzyl"},"content":"            infoMessage.append(currMessage);","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"yilinzyl"},"content":"            infoMessage.append(\"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":200,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":201,"author":{"gitId":"yilinzyl"},"content":"        for (Contact contact : notAddedContacts) {","lastModifiedDate":"2022-10-18"},{"lineNumber":202,"author":{"gitId":"yilinzyl"},"content":"            String currMessage \u003d String.format(MESSAGE_CONTACT_DOES_NOT_EXIT, contact.toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":203,"author":{"gitId":"yilinzyl"},"content":"            infoMessage.append(currMessage);","lastModifiedDate":"2022-11-07"},{"lineNumber":204,"author":{"gitId":"yilinzyl"},"content":"            infoMessage.append(\"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":205,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":206,"author":{"gitId":"yilinzyl"},"content":"        return infoMessage.toString();","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"yilinzyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"yilinzyl"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"yilinzyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"yilinzyl"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"yilinzyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"yilinzyl"},"content":"        if (!(other instanceof AssignTaskCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"yilinzyl"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"yilinzyl"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand e \u003d (AssignTaskCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"KIANSEONG"},"content":"        return taskIndex.equals(e.taskIndex) \u0026\u0026 setIndexEquals(teammateAddIndexes, e.teammateAddIndexes)","lastModifiedDate":"2022-11-06"},{"lineNumber":224,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 setIndexEquals(teammateDeleteIndexes, e.teammateDeleteIndexes)","lastModifiedDate":"2022-11-06"},{"lineNumber":225,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 teammateAddNames.equals(e.teammateAddNames)","lastModifiedDate":"2022-11-06"},{"lineNumber":226,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 teammateDeleteNames.equals(e.teammateDeleteNames);","lastModifiedDate":"2022-11-06"},{"lineNumber":227,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"yilinzyl"},"content":"    private boolean setIndexEquals(Set\u003cIndex\u003e firstSet, Set\u003cIndex\u003e secondSet) {","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"yilinzyl"},"content":"        if (firstSet.size() !\u003d secondSet.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"yilinzyl"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cInteger\u003e firstSetValues \u003d firstSet.stream().map(Index::getZeroBased).collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cInteger\u003e secondSetValues \u003d secondSet.stream().map(Index::getZeroBased).collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"yilinzyl"},"content":"        return firstSetValues.equals(secondSetValues);","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"KIANSEONG":70,"beetee17":2,"yilinzyl":168}},{"path":"src/main/java/seedu/address/logic/commands/task/ClearTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":" * Clears the task panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"public class ClearTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task Panel has been cleared!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"        model.setTaskPanel(new TaskPanel());","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        return other instanceof ClearTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KIANSEONG":1,"wxy1203":31}},{"path":"src/main/java/seedu/address/logic/commands/task/DeadlineTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":" * A command for users to specify the deadline for a task.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"public class DeadlineTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"    public static final String COMMAND_WORD \u003d \"do\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL + \": Sets a deadline for a task.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"            + \"TASK_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"            + PREFIX_DEADLINE + \" DATE...\\n\\n\"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"            + \"1 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"            + PREFIX_DEADLINE + \" tomorrow\\n\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"            + \"You can also use a \u0027?\u0027 to remove the deadline from a task.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"            + \"1 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"            + PREFIX_DEADLINE + \" ?\\n\";","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deadline of %1$s was set to the task: %2$s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"    private final Deadline newDeadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     * @param targetIndex of the teammate\u0027s task to be updated","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"     * @param newDeadline the new deadline for the task","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"    public DeadlineTaskCommand(Index targetIndex, Deadline newDeadline) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"        requireAllNonNull(targetIndex);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"        this.newDeadline \u003d newDeadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"        Task taskToUpdate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"        Task updatedTask \u003d new Task(","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"                        taskToUpdate.getTitle(),","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"                        taskToUpdate.getCompleted(),","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"                        newDeadline,","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"                        taskToUpdate.getProject(),","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"                        taskToUpdate.getAssignedContacts()","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"        model.setTask(taskToUpdate, updatedTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, updatedTask.getDeadline(), updatedTask.getTitle()));","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"        if (!(other instanceof DeadlineTaskCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"beetee17"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand e \u003d (DeadlineTaskCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"beetee17"},"content":"        return targetIndex.equals(e.targetIndex) \u0026\u0026 newDeadline.equals(e.newDeadline);","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":1,"wxy1203":1,"beetee17":92,"yilinzyl":1}},{"path":"src/main/java/seedu/address/logic/commands/task/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":" * Deletes a task identified using it\u0027s displayed index from the task panel.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"public class DeleteTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"            + \": Deletes the task identified by the task index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"            + \"Parameters: \\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task deleted:\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        + \"Title: %s\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        + \"Deadline: %s\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        + \"Project: %s\\n\"","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        + \"Assigned Contacts: %s\\n\";","lastModifiedDate":"2022-11-05"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a DeleteTaskCommand to delete the specified {@code Task}","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"        List\u003cTask\u003e taskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        Task toDelete \u003d taskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        model.deleteTask(toDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2022-11-05"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"                toDelete.getTitle(),","lastModifiedDate":"2022-11-05"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"                toDelete.getDeadline(),","lastModifiedDate":"2022-11-05"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"                toDelete.getProject(),","lastModifiedDate":"2022-11-05"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"                toDelete.getAssignedContacts()));","lastModifiedDate":"2022-11-05"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"            || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"            \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"KIANSEONG":25,"amresh2000":45}},{"path":"src/main/java/seedu/address/logic/commands/task/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_CONTACT;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":" * Edits the details of an existing task in the address book.","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"public class EditTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"            + \"by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"            + \"Parameters: TASK_INDEX \"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"            + \"[\" + PREFIX_PROJECT + \"PROJECT]\\n\"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" 1 \"","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_TITLE + \"Add tasks functionality \"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"            + PREFIX_DEADLINE + \"next Friday\"","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_PROJECT + \"CS2103T tp \"","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"            + PREFIX_DELETE_CONTACT + \"2 \";","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task panel.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"     * @param targetIndex of the task in the filtered task list to edit","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"    public EditTaskCommand(Index targetIndex, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(targetIndex, editTaskDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"amresh2000"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        Task taskToEdit \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"amresh2000"},"content":"        // Replace task with edited task","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"amresh2000"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"amresh2000"},"content":"        // Return with new edited task","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"amresh2000"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"amresh2000"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"amresh2000"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        Title updatedTitle \u003d editTaskDescriptor.getTitle().orElse(taskToEdit.getTitle());","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        Deadline updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"        Project updatedProject \u003d editTaskDescriptor.getProject().orElse(taskToEdit.getProject());","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"        return new Task(updatedTitle, taskToEdit.getCompleted(), updatedDeadline, updatedProject,","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"                taskToEdit.getAssignedContacts());","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"amresh2000"},"content":"        // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"amresh2000"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"amresh2000"},"content":"     * Stores the details that the task will be edited with. Each non-empty field value will replace the","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"amresh2000"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"amresh2000"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        private Title title;","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        private Deadline deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"        private Project project;","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"        /**","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"         * A defensive copy of {@code contacts} is used internally.","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"amresh2000"},"content":"         */","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"amresh2000"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"amresh2000"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"            setProject(toCopy.project);","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"amresh2000"},"content":"        /**","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"amresh2000"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"amresh2000"},"content":"         */","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"amresh2000"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"            return CollectionUtil.isAnyNonNull(title, deadline, project);","lastModifiedDate":"2022-11-02"},{"lineNumber":147,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2022-10-22"},{"lineNumber":150,"author":{"gitId":"amresh2000"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2022-11-02"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"            this.title \u003d title;","lastModifiedDate":"2022-11-02"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2022-10-22"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2022-10-22"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2022-11-02"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2022-11-02"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"KIANSEONG"},"content":"        public Optional\u003cProject\u003e getProject() {","lastModifiedDate":"2022-11-02"},{"lineNumber":166,"author":{"gitId":"KIANSEONG"},"content":"            return Optional.ofNullable(project);","lastModifiedDate":"2022-11-02"},{"lineNumber":167,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"KIANSEONG"},"content":"        public void setProject(Project project) {","lastModifiedDate":"2022-11-02"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"            this.project \u003d project;","lastModifiedDate":"2022-11-02"},{"lineNumber":171,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"amresh2000"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"amresh2000"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"amresh2000"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"amresh2000"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"amresh2000"},"content":"                return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"amresh2000"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"amresh2000"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"amresh2000"},"content":"                return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"amresh2000"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"amresh2000"},"content":"            // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"amresh2000"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":187,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":188,"author":{"gitId":"KIANSEONG"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"KIANSEONG"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2022-11-06"},{"lineNumber":190,"author":{"gitId":"KIANSEONG"},"content":"                    \u0026\u0026 getProject().equals(e.getProject());","lastModifiedDate":"2022-11-06"},{"lineNumber":191,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":192,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":193,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"KIANSEONG":45,"amresh2000":129,"yilinzyl":19}},{"path":"src/main/java/seedu/address/logic/commands/task/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFTER;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BEFORE;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.AssignedToContactsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.ContainsProjectsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.DeadlineIsAfterPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.DeadlineIsBeforePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.TitleContainsKeywordPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":" * Lists all tasks in the task panel to the user that match the specified requirements.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"public class ListTasksCommand extends TaskCommand {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"    public static final String ALL_FLAG \u003d \"a\";","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"    public static final String COMPLETED_FLAG \u003d \"c\";","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"            + \": Lists all tasks that satisfy the specified requirements.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"            + \"[\" + \"KEYWORD]\"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"            + \"[\" + PREFIX_PROJECT + \"PROJECT_NAME]...\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"            + \"[\" + PREFIX_CONTACT + \"CONTACT_INDEX]...\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"            + \"[\" + PREFIX_BEFORE + \"DATE]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"            + \"[\" + PREFIX_AFTER + \"DATE]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"            + \"fix \"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"            + PREFIX_CONTACT + \"1 \";","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing all %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    private final String keywordFilter;","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"    private Optional\u003cDeadline\u003e beforeArgs;","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"    private Optional\u003cDeadline\u003e afterArgs;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    private final List\u003cString\u003e projectNames;","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    private final List\u003cString\u003e flags;","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    private final Set\u003cIndex\u003e teammateIndexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"     * Creates a ListTasksCommand to list the {@code Task}s with the specified filters","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"     * @param teammatesIndexes a set of indexes to view only tasks assigned to the corresponding contacts","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"    public ListTasksCommand(String keywordFilter,","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"                            List\u003cString\u003e projectNames,","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"                            List\u003cString\u003e flags,","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"                            Optional\u003cDeadline\u003e beforeArgs,","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"                            Optional\u003cDeadline\u003e afterArgs,","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"                            Set\u003cIndex\u003e teammatesIndexes) {","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(flags, teammatesIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"        this.keywordFilter \u003d keywordFilter;","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"        this.projectNames \u003d projectNames;","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"        this.flags \u003d flags;","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"        this.beforeArgs \u003d beforeArgs;","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"        this.afterArgs \u003d afterArgs;","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        this.teammateIndexes.addAll(teammatesIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"beetee17"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e filter;","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"        if (flags.contains(COMPLETED_FLAG)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"beetee17"},"content":"            filter \u003d Model.PREDICATE_COMPLETED_TASKS;","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"beetee17"},"content":"        } else if (flags.contains(ALL_FLAG)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"beetee17"},"content":"            filter \u003d Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"beetee17"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"            filter \u003d Model.PREDICATE_INCOMPLETE_TASKS;","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        filter \u003d filter.and(new TitleContainsKeywordPredicate(keywordFilter))","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"                .and(new ContainsProjectsPredicate(projectNames))","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"                .and(parseDeadlineArgs())","lastModifiedDate":"2022-10-26"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"                .and(new AssignedToContactsPredicate(model, teammateIndexes));","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"beetee17"},"content":"        model.updateFilteredTaskList(filter);","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(getSuccessMessage());","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"beetee17"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"beetee17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"beetee17"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"beetee17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"beetee17"},"content":"        if (!(other instanceof ListTasksCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"beetee17"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"beetee17"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand e \u003d (ListTasksCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"beetee17"},"content":"        return keywordFilter.equals(e.keywordFilter)","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 flags.equals(e.flags)","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 projectNames.equals(e.projectNames)","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 beforeArgs.equals(e.beforeArgs)","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 afterArgs.equals(e.afterArgs)","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 setIndexEquals(teammateIndexes, e.teammateIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"beetee17"},"content":"    private boolean setIndexEquals(Set\u003cIndex\u003e firstSet, Set\u003cIndex\u003e secondSet) {","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"beetee17"},"content":"        if (firstSet.size() !\u003d secondSet.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"beetee17"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"beetee17"},"content":"        Set\u003cInteger\u003e firstSetValues \u003d firstSet.stream().map(Index::getZeroBased).collect(Collectors.toSet());","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"beetee17"},"content":"        Set\u003cInteger\u003e secondSetValues \u003d secondSet.stream().map(Index::getZeroBased).collect(Collectors.toSet());","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"        return firstSetValues.equals(secondSetValues);","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"beetee17"},"content":"    private Predicate\u003cTask\u003e parseDeadlineArgs() {","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e predicate \u003d unused -\u003e true;","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"beetee17"},"content":"        if (beforeArgs.isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"beetee17"},"content":"            Deadline before \u003d beforeArgs.get();","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"beetee17"},"content":"            predicate \u003d predicate.and(new DeadlineIsBeforePredicate(before));","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"beetee17"},"content":"        if (afterArgs.isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"beetee17"},"content":"            Deadline after \u003d afterArgs.get();","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"beetee17"},"content":"            predicate \u003d predicate.and(new DeadlineIsAfterPredicate(after));","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"beetee17"},"content":"        return predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    public String getSuccessMessage() {","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"beetee17"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"beetee17"},"content":"        if (flags.contains(COMPLETED_FLAG)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"beetee17"},"content":"            successMessage.append(\"completed tasks\");","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"beetee17"},"content":"        } else if (flags.contains(ALL_FLAG)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"beetee17"},"content":"            successMessage.append(\"tasks\");","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"beetee17"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"beetee17"},"content":"            successMessage.append(\"incomplete tasks\");","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"beetee17"},"content":"        if (!keywordFilter.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"beetee17"},"content":"            successMessage.append(String.format(\" containing \u0027%s\u0027\", keywordFilter));","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"beetee17"},"content":"        if (!projectNames.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"beetee17"},"content":"            int numNames \u003d projectNames.size();","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"beetee17"},"content":"            if (numNames \u003d\u003d 1) {","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"beetee17"},"content":"                successMessage.append(\" assigned to the project\");","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"beetee17"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"beetee17"},"content":"                successMessage.append(\" assigned to any of the projects:\");","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"beetee17"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"beetee17"},"content":"            projectNames","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"beetee17"},"content":"                    .stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"beetee17"},"content":"                    .limit(numNames - 1)","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"beetee17"},"content":"                    .forEach(name -\u003e successMessage.append(\" \u0027\").append(name).append(\"\u0027,\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"beetee17"},"content":"            successMessage.append(\" \u0027\").append(projectNames.get(numNames - 1)).append(\"\u0027\");","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"        if (!teammateIndexes.isEmpty()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":182,"author":{"gitId":"beetee17"},"content":"            successMessage.append(","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"KIANSEONG"},"content":"                String.format(\" that are also assigned to %s contacts\", teammateIndexes.size())","lastModifiedDate":"2022-11-06"},{"lineNumber":184,"author":{"gitId":"beetee17"},"content":"            );","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":187,"author":{"gitId":"beetee17"},"content":"        if (beforeArgs.isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"beetee17"},"content":"            Deadline before \u003d beforeArgs.get();","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"beetee17"},"content":"            successMessage.append(","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"beetee17"},"content":"                    before.isUnspecified()","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"beetee17"},"content":"                            ? \"\"","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"beetee17"},"content":"                            : String.format(\" that are also due before %s\", before)","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"beetee17"},"content":"            );","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"beetee17"},"content":"        if (afterArgs.isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"beetee17"},"content":"            Deadline after \u003d afterArgs.get();","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"beetee17"},"content":"            successMessage.append(","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"beetee17"},"content":"                    after.isUnspecified()","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"beetee17"},"content":"                            ? \"\"","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"beetee17"},"content":"                            : String.format(\" that are also due after %s\", after)","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"beetee17"},"content":"            );","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":204,"author":{"gitId":"KIANSEONG"},"content":"        return String.format(MESSAGE_SUCCESS, successMessage);","lastModifiedDate":"2022-10-26"},{"lineNumber":205,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"KIANSEONG":19,"beetee17":188}},{"path":"src/main/java/seedu/address/logic/commands/task/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" * Marks a task and sets it as complete.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"public class MarkTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"            + \": Marks the task complete by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task %1$d is marked as complete\";","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * @param targetIndex of the teammate\u0027s task to be updated","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"wxy1203"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public MarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(targetIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"wxy1203"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"wxy1203"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"wxy1203"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"wxy1203"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"wxy1203"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        Task editedTask \u003d new Task(","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"                taskToMark.getTitle(),","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"                true,","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"                taskToMark.getDeadline(),","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"                taskToMark.getProject(),","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"                taskToMark.getAssignedContacts()","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"wxy1203"},"content":"        model.setTask(taskToMark, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"wxy1203"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetIndex.getOneBased()));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"wxy1203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"wxy1203"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"wxy1203"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"wxy1203"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"wxy1203"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"wxy1203"},"content":"        if (!(other instanceof MarkTaskCommand)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"wxy1203"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"wxy1203"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"wxy1203"},"content":"        MarkTaskCommand e \u003d (MarkTaskCommand) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"wxy1203"},"content":"        return targetIndex.equals(e.targetIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"KIANSEONG":8,"wxy1203":65,"beetee17":6,"yilinzyl":2}},{"path":"src/main/java/seedu/address/logic/commands/task/ProjectTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":" * Lists all project names available in task panel.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"public class ProjectTaskCommand extends TaskCommand {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    public static final String COMMAND_WORD \u003d \"project\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all projects\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cProject\u003e projectList \u003d model.getTaskPanel().getTaskList()","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"            .stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"            .map(Task::getProject)","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"            .filter(t -\u003e !t.isUnspecified())","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        final int[] counter \u003d { 1 };","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        projectList.forEach(p -\u003e builder.append(\"\\n\").append(counter[0]++).append(\". \").append(p.projectName));","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        return new CommandResult(MESSAGE_SUCCESS + builder);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        return other instanceof ProjectTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"KIANSEONG":20,"amresh2000":22}},{"path":"src/main/java/seedu/address/logic/commands/task/SortTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.model.Model.PREDICATE_INCOMPLETE_TASKS;","lastModifiedDate":"2022-11-05"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-11-05"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-11-05"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":" * Clears the task panel.","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"public class SortTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task Panel has been sorted by deadlines.\";","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    private static final Comparator\u003cTask\u003e DeadlineComparator \u003d Comparator.comparing(Task::getDeadline);","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTask\u003e taskList \u003d new SortedList\u003c\u003e(model.getFilteredTaskList(), DeadlineComparator);","lastModifiedDate":"2022-11-05"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        model.setFilteredTaskList(FXCollections.observableList(taskList));","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTaskList(PREDICATE_INCOMPLETE_TASKS);","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"KIANSEONG":12,"wxy1203":28}},{"path":"src/main/java/seedu/address/logic/commands/task/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" * Unmarks a task and sets it as incomplete.","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"public class UnmarkTaskCommand extends TaskCommand {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"    public static final String COMMAND_WORD_FULL \u003d TaskCommand.COMMAND_WORD + \" \" + COMMAND_WORD;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_FULL","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"            + \": Unmarks the task complete by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"            + \"Example: \" + COMMAND_WORD_FULL + \" 1\";","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task %1$d is marked as incomplete\";","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * @param targetIndex of the teammate\u0027s task to be updated","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"wxy1203"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"wxy1203"},"content":"    public UnmarkTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"        requireAllNonNull(targetIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"wxy1203"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"wxy1203"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"wxy1203"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"wxy1203"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"wxy1203"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"wxy1203"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"                new Task(taskToUnmark.getTitle(),","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"                        false,","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"                        taskToUnmark.getDeadline(),","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"                        taskToUnmark.getProject(),","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"                        taskToUnmark.getAssignedContacts());","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"wxy1203"},"content":"        model.setTask(taskToUnmark, editedTask);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"wxy1203"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetIndex.getOneBased()));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"wxy1203"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"wxy1203"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"wxy1203"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"wxy1203"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"wxy1203"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"wxy1203"},"content":"        if (!(other instanceof UnmarkTaskCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"wxy1203"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"wxy1203"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"wxy1203"},"content":"        UnmarkTaskCommand e \u003d (UnmarkTaskCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"wxy1203"},"content":"        return targetIndex.equals(e.targetIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"KIANSEONG":2,"wxy1203":72,"beetee17":5,"yilinzyl":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammate \u003d new Teammate(name, phone, email, address, tagList);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        return new AddCommand(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"KIANSEONG":7,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"    public static final Prefix PREFIX_CONTACT \u003d new Prefix(\"@\");","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public static final Prefix PREFIX_ADD_CONTACT \u003d new Prefix(\"+@\");","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"    public static final Prefix PREFIX_DELETE_CONTACT \u003d new Prefix(\"-@\");","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"    public static final Prefix PREFIX_BEFORE \u003d new Prefix(\"before/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    public static final Prefix PREFIX_AFTER \u003d new Prefix(\"after/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"ti/\");","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"    public static final Prefix PREFIX_PROJECT \u003d new Prefix(\"#\");","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    public static final Prefix PREFIX_FLAG \u003d new Prefix(\"-\");","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"amresh2000":1,"beetee17":6,"-":14,"yilinzyl":2}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand.EditTeammateDescriptor editTeammateDescriptor \u003d new EditCommand.EditTeammateDescriptor();","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            editTeammateDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"            editTeammateDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"            editTeammateDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            editTeammateDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTeammateDescriptor::setTags);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        if (!editTeammateDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        return new EditCommand(index, editTeammateDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KIANSEONG":8,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.ContainsTagPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"        String namesJoined \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(namesJoined.split(\"\\\\s+\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        if (namesJoined.equals(\"\")) {","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"            nameKeywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        List\u003cString\u003e tagKeywords \u003d argMultimap.getAllValues(PREFIX_TAG);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"        tagKeywords \u003d tagKeywords.stream().map(x -\u003e x.trim().toLowerCase()).collect(Collectors.toList());","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"                new ContainsTagPredicate(tagKeywords));","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KIANSEONG":2,"-":30,"yilinzyl":19}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero integer.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KIANSEONG":5,"-":119}},{"path":"src/main/java/seedu/address/logic/parser/TaskPanelParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.AssignTaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.task.ClearTaskCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.DeadlineTaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.DeleteTaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.task.ListTasksCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.MarkTaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.ProjectTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.task.SortTaskCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.task.UnmarkTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.task.AddTaskCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.task.AssignTaskCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.task.DeadlineTaskCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.task.DeleteTaskCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.task.EditTaskCommandParser;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.task.ListTasksCommandParser;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.task.MarkTaskCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.task.UnmarkTaskCommandParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":" * Parses user input for all task-related commands (starting with \"tasks\").","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"public class TaskPanelParser implements Parser\u003cTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    private static final String pattern \u003d \"(\" + TaskCommand.COMMAND_WORD + \"|\" + TaskCommand.COMMAND_WORD_ALIAS + \")\";","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        Pattern.compile(pattern + \"\\\\s(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    public TaskCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"wxy1203"},"content":"        case ClearTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"wxy1203"},"content":"            return new ClearTaskCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"amresh2000"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"wxy1203"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"wxy1203"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"wxy1203"},"content":"        case SortTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"wxy1203"},"content":"            return new SortTaskCommand();","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"wxy1203"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"wxy1203"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"        case ListTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"            return new ListTasksCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"        case AssignTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"            return new AssignTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"        case DeadlineTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"            return new DeadlineTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"amresh2000"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"amresh2000"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        case ProjectTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"            return new ProjectTaskCommand();","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        default:","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":44,"amresh2000":8,"wxy1203":12,"beetee17":15,"yilinzyl":2}},{"path":"src/main/java/seedu/address/logic/parser/TaskParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.time.ZoneId;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Date;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import org.ocpsoft.prettytime.nlp.PrettyTimeParser;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes related to tasks.","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"public class TaskParserUtil {","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero integer.\";","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    */","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(Deadline.MESSAGE_PARSE_FAILURE);","lastModifiedDate":"2022-11-05"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        if (trimmedDeadline.equals(\"?\") || trimmedDeadline.equals(Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"            return Deadline.UNSPECIFIED;","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cDate\u003e parseResult \u003d new PrettyTimeParser().parse(trimmedDeadline);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        if (parseResult.isEmpty()) {","lastModifiedDate":"2022-11-05"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(Deadline.MESSAGE_PARSE_FAILURE);","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        return Deadline.of(TaskParserUtil.convertToLocalDate(parseResult.get(0)));","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"     * Parses a {@code String project name} into a {@code Project}.","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"     * @throws ParseException if the given {@code project} is invalid.","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"    public static Project parseProject(String projectName) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(projectName);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"        String trimmedProjectName \u003d projectName.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"        if (!Project.isValidProjectName(trimmedProjectName)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"            throw new ParseException(Project.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"        return new Project(trimmedProjectName);","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"     * Parses {@code Collection\u003cString\u003e oneBasedIndexes} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"    public static Set\u003cIndex\u003e parseIndexes(Collection\u003cString\u003e oneBasedIndexes) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(oneBasedIndexes);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"        for (String oneBasedIndex : oneBasedIndexes) {","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"            String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"            indexSet.add(Index.fromOneBased(Integer.parseInt(trimmedIndex)));","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"        return indexSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"     * Parses {@code Collection\u003cString\u003e contacts} into a {@code Set\u003cContact\u003e}.","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    public static Set\u003cContact\u003e parseContacts(Collection\u003cString\u003e contacts) {","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(contacts);","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        final Set\u003cContact\u003e contactSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        for (String contactName : contacts) {","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"            contactSet.add(new Contact(contactName));","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        return contactSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"     * Parses index inputs in {@code Collection\u003cString\u003e inputs} (that can contain index and non-index inputs)","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"     * into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"    public static Set\u003cIndex\u003e parseIndexesMixed(Collection\u003cString\u003e inputs) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(inputs);","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        for (String input : inputs) {","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"            String trimmedInput \u003d input.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"            if (StringUtil.isInteger(trimmedInput)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"                if (!StringUtil.isNonZeroUnsignedInteger(trimmedInput)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"                    throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"                }","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"                indexSet.add(Index.fromOneBased(Integer.parseInt(trimmedInput)));","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"        return indexSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"yilinzyl"},"content":"     * Parses non-index inputs in {@code Collection\u003cString\u003e inputs} (that can contain index and non index inputs)","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"yilinzyl"},"content":"     * into a {@code Set\u003cString\u003e}.","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"    public static Set\u003cString\u003e parseTextsMixed(Collection\u003cString\u003e inputs) {","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(inputs);","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"yilinzyl"},"content":"        final Set\u003cString\u003e textSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"        for (String input : inputs) {","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"            String trimmedInput \u003d input.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"yilinzyl"},"content":"            if (!StringUtil.isInteger(trimmedInput)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"                textSet.add(trimmedInput);","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"yilinzyl"},"content":"        return textSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"     * Convert given Date object to LocalDate object.","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    public static LocalDate convertToLocalDate(Date date) {","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"     * Parses string to LocalDate object. Used for initialising TypicalTasks so the string given is always in","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"     * correct format.","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"    public static LocalDate convertStringToLocalDate(String date) {","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"        if (date.trim().equals(\"?\") || date.trim().equals(Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"            return Deadline.UNSPECIFIED.getDate();","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cDate\u003e result \u003d new PrettyTimeParser().parse(date);","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"        return TaskParserUtil.convertToLocalDate(result.get(0));","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":94,"amresh2000":2,"wxy1203":2,"yilinzyl":69}},{"path":"src/main/java/seedu/address/logic/parser/task/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"        // Guard: Title not present","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        Title title \u003d TaskParserUtil.parseTitle(args.trim());","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        return new AddTaskCommand(title);","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":31}},{"path":"src/main/java/seedu/address/logic/parser/task/AssignTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_CONTACT;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_CONTACT;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.commands.task.AssignTaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":" * Parses input arguments and creates a new AssignTaskCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"public class AssignTaskCommandParser implements Parser\u003cAssignTaskCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignTaskCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * and returns an AssignTaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public AssignTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ADD_CONTACT, PREFIX_DELETE_CONTACT);","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"        Index taskIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cIndex\u003e teammatesAddIndexes;","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cString\u003e teammatesAddNames;","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cIndex\u003e teammatesDeleteIndexes;","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cString\u003e teammatesDeleteNames;","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        String indexString \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            taskIndex \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"            List\u003cString\u003e contactsAddString \u003d argMultimap.getAllValues(PREFIX_ADD_CONTACT);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"            teammatesAddIndexes \u003d TaskParserUtil.parseIndexesMixed(contactsAddString);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"            teammatesAddNames \u003d TaskParserUtil.parseTextsMixed(contactsAddString);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"            List\u003cString\u003e contactsDeleteString \u003d argMultimap.getAllValues(PREFIX_DELETE_CONTACT);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"            teammatesDeleteIndexes \u003d TaskParserUtil.parseIndexesMixed(contactsDeleteString);","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"            teammatesDeleteNames \u003d TaskParserUtil.parseTextsMixed(contactsDeleteString);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"                    AssignTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        return new AssignTaskCommand(taskIndex, teammatesAddIndexes, teammatesAddNames,","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"                teammatesDeleteIndexes, teammatesDeleteNames);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"KIANSEONG":12,"yilinzyl":51}},{"path":"src/main/java/seedu/address/logic/parser/task/DeadlineTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.DeadlineTaskCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":" * Parses input arguments and creates a new DeadlineTaskCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"public class DeadlineTaskCommandParser implements Parser\u003cDeadlineTaskCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"     * Parses the given {@code String} of arguments in the context of the DeadlineTaskCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"     * and returns an DeadlineTaskCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    public DeadlineTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DEADLINE);","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeadlineTaskCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"                    pe","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"            );","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        String deadlineArg \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"                argMultimap","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"                        .getValue(PREFIX_DEADLINE)","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"                        .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"                                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeadlineTaskCommand.MESSAGE_USAGE))","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"                        );","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        Deadline deadline \u003d TaskParserUtil.parseDeadline(deadlineArg);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        return new DeadlineTaskCommand(index, deadline);","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":4,"beetee17":50}},{"path":"src/main/java/seedu/address/logic/parser/task/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.task.DeleteTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"     * and returns an DeleteTaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"KIANSEONG":6,"amresh2000":24}},{"path":"src/main/java/seedu/address/logic/parser/task/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DEADLINE, PREFIX_PROJECT);","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"        Index targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"        try {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"            targetIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"amresh2000"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"            editTaskDescriptor.setTitle(TaskParserUtil","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"                    .parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"            editTaskDescriptor.setDeadline(TaskParserUtil","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"                .parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"        if (argMultimap.getValue(PREFIX_PROJECT).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"            if (argMultimap.getValue(PREFIX_PROJECT).get().equals(\"\")) {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"                editTaskDescriptor.setProject(Project.UNSPECIFIED);","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"                editTaskDescriptor.setProject(TaskParserUtil","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"                        .parseProject(argMultimap.getValue(PREFIX_PROJECT).get()));","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"        return new EditTaskCommand(targetIndex, editTaskDescriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"KIANSEONG":12,"amresh2000":44,"yilinzyl":12}},{"path":"src/main/java/seedu/address/logic/parser/task/ListTasksCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AFTER;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BEFORE;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FLAG;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.ListTasksCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":" * Parses input arguments and creates a new ListTasksCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"public class ListTasksCommandParser implements Parser\u003cListTasksCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTasksCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"     * and returns an ListTasksCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"    public ListTasksCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"                        args,","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"                        PREFIX_CONTACT,","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"                        PREFIX_FLAG,","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"                        PREFIX_PROJECT,","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"                        PREFIX_BEFORE,","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"                        PREFIX_AFTER","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"        String keywordFilter \u003d argMultimap.getPreamble();","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e contactFilters \u003d argMultimap.getAllValues(PREFIX_CONTACT);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e projectNames \u003d argMultimap.getAllValues(PREFIX_PROJECT);","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e flags \u003d argMultimap.getAllValues(PREFIX_FLAG);","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"        Optional\u003cString\u003e beforeArgs \u003d argMultimap.getValue(PREFIX_BEFORE);","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"        Optional\u003cString\u003e afterArgs \u003d argMultimap.getValue(PREFIX_AFTER);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        if (keywordFilter.isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 contactFilters.isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 projectNames.isEmpty()","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 flags.isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 beforeArgs.isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 afterArgs.isEmpty()","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 !args.trim().isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"                    ListTasksCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cIndex\u003e teammatesIndexes;","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        Optional\u003cDeadline\u003e before \u003d Optional.empty();","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        Optional\u003cDeadline\u003e after \u003d Optional.empty();","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"        if (beforeArgs.isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"            before \u003d Optional.ofNullable(TaskParserUtil.parseDeadline(beforeArgs.get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"        if (afterArgs.isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"            after \u003d Optional.ofNullable(TaskParserUtil.parseDeadline(afterArgs.get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"            teammatesIndexes \u003d TaskParserUtil.parseIndexes(contactFilters);","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"                    ListTasksCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        return new ListTasksCommand(keywordFilter, projectNames, flags, before, after, teammatesIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":7,"beetee17":79}},{"path":"src/main/java/seedu/address/logic/parser/task/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.task.MarkTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     * and returns an MarkTaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"        Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"            targetIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"wxy1203"},"content":"        return new MarkTaskCommand(targetIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"KIANSEONG":5,"wxy1203":33}},{"path":"src/main/java/seedu/address/logic/parser/task/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.task.UnmarkTaskCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkTaskCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":"     * and returns an UnmarkTaskCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"            return new UnmarkTaskCommand(index);","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"            throw new ParseException(","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"KIANSEONG":5,"wxy1203":25}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.UniqueTeammateList;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" * Duplicates are not allowed (by .isSameTeammate comparison)","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    private final UniqueTeammateList teammates;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        teammates \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     * Creates an AddressBook using the Teammates in the {@code toBeCopied}","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the contents of the teammate list with {@code teammates}.","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     * {@code teammates} must not contain duplicate teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates(List\u003cTeammate\u003e teammates) {","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        this.teammates.setTeammates(teammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        setTeammates(newData.getTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    //// teammate-level operations","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a teammate with the same identity as {@code teammate} exists in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public boolean hasTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        return teammates.contains(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"     * Adds a teammate to the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate must not already exist in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    public void addTeammate(Teammate p) {","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        teammates.add(p);","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the given teammate {@code target} in the list with {@code editedTeammate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate identity of {@code editedTeammate} must not be the same as another existing teammate in the address","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"     * book.","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate(Teammate target, Teammate editedTeammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        teammates.setTeammate(target, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    public void removeTeammate(Teammate key) {","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        teammates.remove(key);","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        return teammates.asUnmodifiableObservableList().size() + \" teammates\";","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    public ObservableList\u003cTeammate\u003e getTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        return teammates.asUnmodifiableObservableList();","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 teammates.equals(((AddressBook) other).teammates));","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"        return teammates.hashCode();","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":33,"-":87}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    Predicate\u003cTeammate\u003e PREDICATE_SHOW_ALL_TEAMMATES \u003d unused -\u003e true;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"    /** {@code Predicate} that always evaluate to false */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    Predicate\u003cTask\u003e PREDICATE_HIDE_ALL_TASKS \u003d unused -\u003e false;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    /** {@code Predicate} that filters out incomplete tasks */","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    Predicate\u003cTask\u003e PREDICATE_COMPLETED_TASKS \u003d Task::getCompleted;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    /** {@code Predicate} that filters out completed tasks */","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"    Predicate\u003cTask\u003e PREDICATE_INCOMPLETE_TASKS \u003d task -\u003e !task.getCompleted();","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a teammate with the same identity as {@code teammate} exists in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    boolean hasTeammate(Teammate teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"     * Deletes the given teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate must exist in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"    void deleteTeammate(Teammate target);","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"     * Adds the given teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"     * {@code teammate} must not already exist in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    void addTeammate(Teammate teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the given teammate {@code target} with {@code editedTeammate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate identity of {@code editedTeammate} must not be the same as another existing teammate in the address","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"     * book.","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    void setTeammate(Teammate target, Teammate editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    /** Returns an unmodifiable view of the filtered teammate list */","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"    ObservableList\u003cTeammate\u003e getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"     * Updates the filter of the filtered teammate list to filter by the given {@code predicate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"    void updateFilteredTeammateList(Predicate\u003cTeammate\u003e predicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"wxy1203"},"content":"    /** Replaces the given new task list {@code newTasks} with {@code editedTasks}. */","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"wxy1203"},"content":"    void setFilteredTaskList(ObservableList\u003cTask\u003e newTasks);","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    /** Returns the TaskPanel */","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"    ReadOnlyTaskPanel getTaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"wxy1203"},"content":"     * Replaces task panel data with the data in {@code taskPanel}.","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"wxy1203"},"content":"    void setTaskPanel(ReadOnlyTaskPanel taskPanel);","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"     * {@code task} must not already exist in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"amresh2000"},"content":"     * Deletes the given task. The task must exist in the task list.","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"amresh2000"},"content":"     * @param deletedTask The task to delete","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"amresh2000"},"content":"    void deleteTask(Task deletedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"amresh2000"},"content":"    /** Returns an unmodifiable version of task list */","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"amresh2000"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"beetee17"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"wxy1203"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"wxy1203"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"wxy1203"},"content":"     * The task of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"wxy1203"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"wxy1203"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KIANSEONG":33,"amresh2000":10,"wxy1203":13,"beetee17":14,"-":77}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":" * Represents the in-memory model of Arrow data.","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    private final TaskPanel taskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    private final FilteredList\u003cTeammate\u003e filteredTeammates;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"     * Initializes a ModelManager with the given addressBook, taskPanel and userPrefs.","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTaskPanel taskPanel, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(addressBook, taskPanel, userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"                + \", task panel: \" + taskPanel","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        this.taskPanel \u003d new TaskPanel(taskPanel);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        filteredTeammates \u003d new FilteredList\u003c\u003e(this.addressBook.getTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskPanel.getTaskList(), PREDICATE_INCOMPLETE_TASKS);","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        this(new AddressBook(), new TaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"    public boolean hasTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        return addressBook.hasTeammate(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    public void deleteTeammate(Teammate target) {","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        addressBook.removeTeammate(target);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    public void addTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"        addressBook.addTeammate(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        updateFilteredTeammateList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate(Teammate target, Teammate editedTeammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(target, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"        addressBook.setTeammate(target, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Teammate List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an unmodifiable view of the list of {@code Teammate} backed by the internal list of","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"    public ObservableList\u003cTeammate\u003e getFilteredTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        return filteredTeammates;","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"beetee17"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"     * {@code versionedTaskPanel}","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"beetee17"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"    public void updateFilteredTeammateList(Predicate\u003cTeammate\u003e predicate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"        filteredTeammates.setPredicate(predicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"wxy1203"},"content":"    /** Replaces the given new task list {@code newTasks} with {@code editedTasks}. */","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"wxy1203"},"content":"    public void setFilteredTaskList(ObservableList\u003cTask\u003e newTasks) {","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel.setTasks(newTasks);","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"beetee17"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"beetee17"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 taskPanel.equals(other.taskPanel)","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 filteredTeammates.equals(other.filteredTeammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"KIANSEONG"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskPanel \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"KIANSEONG"},"content":"    public ReadOnlyTaskPanel getTaskPanel() {","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"wxy1203"},"content":"    public void setTaskPanel(ReadOnlyTaskPanel taskPanel) {","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"wxy1203"},"content":"        this.taskPanel.resetData(taskPanel);","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"KIANSEONG"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanel.hasTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"KIANSEONG"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel.addTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: updateFilteredTaskList","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"amresh2000"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"amresh2000"},"content":"    public void deleteTask(Task deletedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"amresh2000"},"content":"        taskPanel.removeTask(deletedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"wxy1203"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"wxy1203"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":211,"author":{"gitId":"wxy1203"},"content":"        taskPanel.setTask(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":212,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":53,"amresh2000":7,"wxy1203":12,"beetee17":12,"-":129}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an unmodifiable view of the teammates list.","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"     * This list will not contain any duplicate teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    ObservableList\u003cTeammate\u003e getTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":4,"-":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Unmodifiable view of a task list","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"public interface ReadOnlyTaskPanel {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":17,"amresh2000":1}},{"path":"src/main/java/seedu/address/model/TaskPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":" * Wraps all data at the task-panel level","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"public class TaskPanel implements ReadOnlyTaskPanel {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public TaskPanel() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a TaskPanel using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    public TaskPanel(ReadOnlyTaskPanel toBeCopied) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        this();","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"     * Resets the existing data of this {@code TaskPanel} with {@code newData}.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    public void resetData(ReadOnlyTaskPanel newData) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a task with the same title as {@code task} exists in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"     * Adds a task to the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"     * The task must not already exist in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        tasks.add(t);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"     * {@code target} must exist in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"     * The title of {@code editedTask} must not be the same as another existing title in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"     * Removes {@code key} from this {@code TaskPanel}.","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"     * {@code key} must exist in the task panel.","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"    //// util methods","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"                || (other instanceof TaskPanel // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 tasks.equals(((TaskPanel) other).tasks));","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":121,"amresh2000":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    private Path taskPanelFilePath \u003d Paths.get(\"data\", \"taskpanel.json\");","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    public Path getTaskPanelFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanelFilePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public void setTaskPanelFilePath(Path taskPanelFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(taskPanelFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        this.taskPanelFilePath \u003d taskPanelFilePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 taskPanelFilePath.equals(o.taskPanelFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, taskPanelFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        sb.append(\"Gui Settings : \").append(guiSettings)","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"                .append(\"\\nLocal address book file location : \").append(addressBookFilePath)","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"                .append(\"\\nLocal task panel file location : \").append(taskPanelFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":16,"-":83}},{"path":"src/main/java/seedu/address/model/task/AssignedToContactsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":" * Tests that a {@code Task}\u0027s assigned contacts contains a specified set of contacts.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"public class AssignedToContactsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    private final Set\u003cContact\u003e contacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"     * Constructs an AssignedToContactsPredicate.","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"     * @param contacts the set of contacts to search for","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    public AssignedToContactsPredicate(Collection\u003cContact\u003e contacts) {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"     * Constructs an AssignedToContactsPredicate.","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"     * @param contact the contact to search for","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    public AssignedToContactsPredicate(Contact contact) {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"        this.contacts.add(contact);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"     * Constructs an AssignedToContactsPredicate.","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"     * @param model the model to use when looking for contacts","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"     * @param teammateIndexes the indices which correspond to contacts in the model\u0027s address book","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    public AssignedToContactsPredicate(Model model, Set\u003cIndex\u003e teammateIndexes) throws CommandException {","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e lastShownTeammatesList \u003d model.getFilteredTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        for (Index teammateIndex : teammateIndexes) {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"            if (teammateIndex.getZeroBased() \u003e\u003d lastShownTeammatesList.size()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"            Contact c \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"                    new Contact(lastShownTeammatesList.get(teammateIndex.getZeroBased()).getName().fullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"            this.contacts.add(c);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"        return task.getAssignedContacts().containsAll(contacts);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"                || (other instanceof AssignedToContactsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 contacts.equals(((AssignedToContactsPredicate) other).contacts)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":8,"beetee17":49,"yilinzyl":8}},{"path":"src/main/java/seedu/address/model/task/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":" * Contact is a Teammate who is related to a task and is present in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Guarantees: immutable; contact is valid as declared in {@link #isValidContactName(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"public class Contact {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Contact names should be letters\";","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z ]*$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    public final String contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code Contact}.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"     * @param contactName A valid contact name.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public Contact(String contactName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(contactName);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        this.contactName \u003d contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public String getContactName() {","lastModifiedDate":"2022-11-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        return contactName;","lastModifiedDate":"2022-11-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a given string is a valid contact name.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public static boolean isValidContactName(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"            || (other instanceof Contact) // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"            \u0026\u0026 contactName.equals(((Contact) other).contactName); // state check","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        return contactName.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        return contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"KIANSEONG":51,"yilinzyl":2}},{"path":"src/main/java/seedu/address/model/task/ContainsProjectsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":" * Tests that a {@code Task}\u0027s {@code Project} matches any of the project names given.","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"public class ContainsProjectsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"    private final List\u003cString\u003e projectNames;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"     * Constructs an ContainsProjectsPredicate.","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"     * @param projectNames the list of project names to search for","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    public ContainsProjectsPredicate(List\u003cString\u003e projectNames) {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"        this.projectNames \u003d projectNames","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"                .stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"                .map(x -\u003e x.trim().toLowerCase())","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"        return projectNames.isEmpty() || projectNames.contains(task.getProject().projectName.trim().toLowerCase());","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"                || (other instanceof ContainsProjectsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 projectNames.equals(((ContainsProjectsPredicate) other).projectNames)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"beetee17":34,"yilinzyl":2}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static java.time.temporal.TemporalAdjusters.firstDayOfYear;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static java.time.temporal.TemporalAdjusters.lastDayOfYear;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":" * Represents a deadline for a task.","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"public class Deadline implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public static final Deadline UNSPECIFIED \u003d new Deadline(LocalDate.ofEpochDay(0));","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    public static final String UNSPECIFIED_DEADLINE_IDENTIFIER \u003d \"UNSPECIFIED\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Deadline should only contain letters or numbers\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_PARSE_FAILURE \u003d \"Provided date could not be parsed\";","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    public static final DateTimeFormatter READABLE_FORMATTER_WITH_YEAR \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"            DateTimeFormatter.ofPattern(\"EEE, dd MMM yyyy\");","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    public static final DateTimeFormatter READABLE_FORMATTER_WITHOUT_YEAR \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"            DateTimeFormatter.ofPattern(\"EEE, dd MMM\");","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public static final Pattern PATTERN_UNSPECIFIED \u003d Pattern.compile(\"\\\\?\");","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public static final Pattern PATTERN_NATURAL_LANGUAGE \u003d Pattern.compile(\"\\\\p{Alpha}[\\\\p{Alpha} ]*\");","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    public static final Pattern PATTERN_ENGLISH_DATE \u003d","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"            Pattern.compile(\"([1-9]|1[0-9]|2[0-9]/3[0-1]{1,2}) (\\\\p{Alnum}+) (\\\\d{4})\");","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy\");","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"    private Deadline(LocalDate date) {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"     * Creates a Deadline with the given string.","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"     * @param date the string representing the deadline","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public Deadline(String date) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        checkArgument(isValidDeadline(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a Deadline with a given date object.","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"     * @param date the string to be converted into a deadline","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"    public static Deadline of(String date) {","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"        return new Deadline(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    public static Deadline of(LocalDate date) {","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        return new Deadline(date);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a given string is a valid deadline.","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        return PATTERN_ENGLISH_DATE.matcher(test).matches()","lastModifiedDate":"2022-11-05"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"                || PATTERN_NATURAL_LANGUAGE.matcher(test).matches()","lastModifiedDate":"2022-11-05"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"                || PATTERN_UNSPECIFIED.matcher(test).matches();","lastModifiedDate":"2022-11-05"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"     * Returns true if the deadline set for the task is before {@code date}.","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"    public boolean isBefore(Deadline deadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"        if (isUnspecified() || deadline.isUnspecified()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"            return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"beetee17"},"content":"        return date.isBefore(deadline.date);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"     * Returns true if the deadline set for the task is after {@code date}.","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"    public boolean isAfter(Deadline deadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"        if (isUnspecified() || deadline.isUnspecified()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"            return false;","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"beetee17"},"content":"        return date.isAfter(deadline.date);","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"beetee17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 date.equals(((Deadline) other).date));","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"beetee17"},"content":"    public boolean isUnspecified() {","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"beetee17"},"content":"        return this \u003d\u003d Deadline.UNSPECIFIED;","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"beetee17"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"beetee17"},"content":"        if (isUnspecified()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"beetee17"},"content":"            return UNSPECIFIED_DEADLINE_IDENTIFIER;","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"beetee17"},"content":"        return date.format(formatter);","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"beetee17"},"content":"     * Formats the Deadline into a more readable format.","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"beetee17"},"content":"    public String formatForUi() {","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"beetee17"},"content":"        LocalDate startOfYear \u003d LocalDate.now().with(firstDayOfYear());","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"beetee17"},"content":"        LocalDate endOfYear \u003d LocalDate.now().with(lastDayOfYear());","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"beetee17"},"content":"        if (isUnspecified()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"beetee17"},"content":"            return UNSPECIFIED_DEADLINE_IDENTIFIER;","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"beetee17"},"content":"        } else if (date.isBefore(endOfYear) \u0026\u0026 date.isAfter(startOfYear)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"beetee17"},"content":"            return date.format(READABLE_FORMATTER_WITHOUT_YEAR);","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"beetee17"},"content":"        return date.format(READABLE_FORMATTER_WITH_YEAR);","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"beetee17"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"beetee17"},"content":"        return date;","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"    public int compareTo(Deadline other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"        if (this.isUnspecified()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"            return 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"        } else if (other.isUnspecified()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"            return -1;","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"        } else {","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"            return getDate().compareTo(other.getDate());","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":44,"beetee17":95,"yilinzyl":1}},{"path":"src/main/java/seedu/address/model/task/DeadlineIsAfterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":" * Tests that a {@code Task}\u0027s deadline is after the specified date.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"public class DeadlineIsAfterPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"     * Constructs a DeadlineIsBeforePredicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"     * @param deadline the date to use for comparison","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"    public DeadlineIsAfterPredicate(Deadline deadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        return task.getDeadline().isAfter(deadline);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"                || (other instanceof DeadlineIsAfterPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 deadline.equals(((DeadlineIsAfterPredicate) other).deadline)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"beetee17":30}},{"path":"src/main/java/seedu/address/model/task/DeadlineIsBeforePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":" * Tests that a {@code Task}\u0027s deadline is before the specified date.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"public class DeadlineIsBeforePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"     * Constructs a DeadlineIsBeforePredicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"     * @param deadline the deadline to use for comparison","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"    public DeadlineIsBeforePredicate(Deadline deadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        return task.getDeadline().isBefore(deadline);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"                || (other instanceof DeadlineIsBeforePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 deadline.equals(((DeadlineIsBeforePredicate) other).deadline)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"beetee17":30}},{"path":"src/main/java/seedu/address/model/task/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":" * Represents a Project in the task panel.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidProjectName(String)}","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"public class Project {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"    public static final Project UNSPECIFIED \u003d new Project();","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    public static final String UNSPECIFIED_PROJECT_IDENTIFIER \u003d \"\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Project names should be alphanumeric\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"    /*","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+[a-zA-Z0-9 ]*$\";","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    public final String projectName;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"     * Constructs a {@code Project}.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"     * @param projectName A valid project name.","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"    public Project(String projectName) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"        requireNonNull(projectName);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"        checkArgument(isValidProjectName(projectName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"     * Constructs an empty {@code Project}.","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    private Project() {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        this.projectName \u003d \"\";","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"     * Returns true if a given string is a valid project name.","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    public static boolean isValidProjectName(String test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"     * Returns true if a project is unspecified.","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"    public boolean isUnspecified() {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"        return this \u003d\u003d Project.UNSPECIFIED;","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"                || (other instanceof Project // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 projectName.equalsIgnoreCase(((Project) other).projectName)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        return projectName.toLowerCase().hashCode();","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"    public String toString() {","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"        if (isUnspecified()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"            return UNSPECIFIED_PROJECT_IDENTIFIER;","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"        return projectName;","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KIANSEONG":4,"yilinzyl":76}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-07"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import java.util.List;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import java.util.Objects;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"public class Task {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    // identity fields","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    private final Title title;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    private final boolean isCompleted; // defaults to false if not specified","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    // data fields","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"    private final Deadline deadline; // optional","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"    private final Project project; // optional","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    private final Set\u003cContact\u003e assignedContacts;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a new {@code Task} given the title.","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"     * @param title title of task","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public Task(Title title) {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        this(title, Deadline.UNSPECIFIED, Project.UNSPECIFIED, new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a new {@code Task}.","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"     * @param title Title of task","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public Task(Title title, Deadline deadline, Project project, Set\u003cContact\u003e assignedContacts) {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        this(title, false, deadline, project, assignedContacts);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"     * Every field except the task\u0027s deadline must be present and not null.","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"    public Task(Title title, boolean isCompleted, Deadline deadline, Project project, Set\u003cContact\u003e assignedContacts) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        requireAllNonNull(title, isCompleted, project, assignedContacts);","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"        this.project \u003d project;","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        this.assignedContacts \u003d assignedContacts;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        return title;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if task is completed, false if not complete.","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"wxy1203"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public boolean getCompleted() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        return isCompleted;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"     * Returns the deadline set for the task.","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"        return deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"     * Returns the project the task belongs in.","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"    public Project getProject() {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        return project;","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"     * Returns set of contacts assigned to task.","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"    public Set\u003cContact\u003e getAssignedContacts() {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        return Collections.unmodifiableSet(assignedContacts);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"wxy1203"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"wxy1203"},"content":"     * Returns true if both task have the same title and size.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTask.getTitle().equals(getTitle());","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if both tasks have the same data fields.","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"        return otherTask.getTitle().equals(getTitle())","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTask.getCompleted() \u003d\u003d getCompleted()","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"                \u0026\u0026 otherTask.getProject().equals(getProject())","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTask.getAssignedContacts().equals(getAssignedContacts());","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"        return Objects.hash(title, isCompleted, deadline, project, assignedContacts);","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"        builder.append(getTitle())","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"                .append(getCompleted());","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cContact\u003e contacts \u003d getAssignedContacts();","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        if (!contacts.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"            builder.append(\"; Contacts: \");","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"            List\u003cContact\u003e contactList \u003d new ArrayList\u003c\u003e(contacts);","lastModifiedDate":"2022-11-07"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"            builder.append(contactList.get(0));","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"yilinzyl"},"content":"            for (int i \u003d 1; i \u003c contactList.size(); i++) {","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"yilinzyl"},"content":"                builder.append(\", \" + contactList.get(i).toString());","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"yilinzyl"},"content":"            }","lastModifiedDate":"2022-11-07"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"beetee17"},"content":"        if (!deadline.isUnspecified()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"beetee17"},"content":"            builder.append(\"; Deadline: \");","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"            builder.append(deadline);","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"yilinzyl"},"content":"        if (!project.isUnspecified()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"yilinzyl"},"content":"            builder.append(\"; Project: \");","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"yilinzyl"},"content":"            builder.append(project);","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":100,"wxy1203":5,"beetee17":16,"yilinzyl":41}},{"path":"src/main/java/seedu/address/model/task/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Represents the title of a task.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"public class Title {","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Title can take any value, and it should not be blank\";","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"     * The first character of a title must not be a whitespace","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"     * other \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    private final String value;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code Title}","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    public Title(String title) {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        value \u003d title;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        return value;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"                || (other instanceof Title //instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 value.equalsIgnoreCase(((Title) other).value)); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":54}},{"path":"src/main/java/seedu/address/model/task/TitleContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.Locale;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":" * Tests that a {@code Task}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"public class TitleContainsKeywordPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"    private final String keyword;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"    public TitleContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"        return task.getTitle().toString().toLowerCase().contains(keyword.toLowerCase(Locale.ROOT));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"                || (other instanceof TitleContainsKeywordPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 keyword.equals(((TitleContainsKeywordPredicate) other).keyword)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":1,"beetee17":28}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":" * A list of tasks to be completed.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"     * The task description {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"        return tasks.stream().map(Task::getTitle).distinct().count() \u003d\u003d tasks.size();","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"KIANSEONG":123}},{"path":"src/main/java/seedu/address/model/teammate/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Represents a Teammate\u0027s address in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":2,"-":55}},{"path":"src/main/java/seedu/address/model/teammate/ContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":" * Tests that a {@code Teammate}\u0027s tags contains a specified set of tags.","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"public class ContainsTagPredicate implements Predicate\u003cTeammate\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"    private final Set\u003cString\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"     * Constructs an ContainsTagPredicate.","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"     * @param tags the set of tags to search for","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"    public ContainsTagPredicate(Collection\u003cString\u003e tags) {","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public boolean test(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        return teammate.getTags().stream().map(x -\u003e x.tagName.trim().toLowerCase()).anyMatch(tags::contains);","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"                || (other instanceof ContainsTagPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"                \u0026\u0026 tags.equals(((ContainsTagPredicate) other).tags)); // state check","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"KIANSEONG":5,"yilinzyl":30}},{"path":"src/main/java/seedu/address/model/teammate/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Represents a Teammate\u0027s email in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":2,"-":69}},{"path":"src/main/java/seedu/address/model/teammate/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Represents a Teammate\u0027s name in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":2,"-":57}},{"path":"src/main/java/seedu/address/model/teammate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Tests that a {@code Teammate}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTeammate\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public boolean test(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"                .anyMatch(keyword -\u003e teammate.getName().fullName.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KIANSEONG":5,"-":24}},{"path":"src/main/java/seedu/address/model/teammate/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * Represents a Teammate\u0027s phone number in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":2,"-":51}},{"path":"src/main/java/seedu/address/model/teammate/Teammate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" * Represents a Teammate in the address book.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"public class Teammate {","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public Teammate(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if both teammates have the same name.","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"     * This defines a weaker notion of equality between two teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"    public boolean isSameTeammate(Teammate otherTeammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        if (otherTeammate \u003d\u003d this) {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        return otherTeammate !\u003d null","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTeammate.getName().equals(getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if both teammates have the same identity and data fields.","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"     * This defines a stronger notion of equality between two teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        if (!(other instanceof Teammate)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        Teammate otherTeammate \u003d (Teammate) other;","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        return otherTeammate.getName().equals(getName())","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTeammate.getPhone().equals(getPhone())","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTeammate.getEmail().equals(getEmail())","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTeammate.getAddress().equals(getAddress())","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 otherTeammate.getTags().equals(getTags());","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KIANSEONG":19,"-":104}},{"path":"src/main/java/seedu/address/model/teammate/UniqueTeammateList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.DuplicateTeammateException;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.TeammateNotFoundException;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":" * A list of teammates that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":" * A teammate is considered unique by comparing using {@code Teammate#isSameTeammate(Teammate)}. As such, adding and","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" * updating of teammates uses Teammate#isSameTeammate(Teammate) for equality to ensure that the teammate being added or","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":" * updated is unique in terms of identity in the UniqueTeammateList. However, the removal of a teammate uses","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":" * Teammate#equals(Object)  * to ensure that the teammate with exactly the same fields will be removed.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":" *","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":" * @see Teammate#isSameTeammate(Teammate)","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"public class UniqueTeammateList implements Iterable\u003cTeammate\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    private final ObservableList\u003cTeammate\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    private final ObservableList\u003cTeammate\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if the list contains an equivalent teammate as the given argument.","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    public boolean contains(Teammate toCheck) {","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     * Adds a teammate to the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate must not already exist in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public void add(Teammate toAdd) {","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            throw new DuplicateTeammateException();","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the teammate {@code target} in the list with {@code editedTeammate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate identity of {@code editedTeammate} must not be the same as another existing teammate in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate(Teammate target, Teammate editedTeammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(target, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"            throw new TeammateNotFoundException();","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        if (!target.isSameTeammate(editedTeammate) \u0026\u0026 contains(editedTeammate)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"            throw new DuplicateTeammateException();","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        internalList.set(index, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"     * Removes the equivalent teammate from the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"     * The teammate must exist in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"    public void remove(Teammate toRemove) {","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"            throw new TeammateNotFoundException();","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates(UniqueTeammateList replacement) {","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"     * Replaces the contents of this list with {@code teammates}.","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"     * {@code teammates} must not contain duplicate teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates(List\u003cTeammate\u003e teammates) {","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        requireAllNonNull(teammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        if (!teammatesAreUnique(teammates)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"            throw new DuplicateTeammateException();","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        internalList.setAll(teammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"    public ObservableList\u003cTeammate\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"    public Iterator\u003cTeammate\u003e iterator() {","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"                || (other instanceof UniqueTeammateList // instanceof handles nulls","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTeammateList) other).internalList));","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"     * Returns true if {@code teammates} contains only unique teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"    private boolean teammatesAreUnique(List\u003cTeammate\u003e teammates) {","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        return teammates.stream().map(Teammate::getName).distinct().count() \u003d\u003d teammates.size();","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":130}},{"path":"src/main/java/seedu/address/model/teammate/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate.exceptions;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":" * same description).","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"KIANSEONG":11}},{"path":"src/main/java/seedu/address/model/teammate/exceptions/DuplicateTeammateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate.exceptions;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":" * Signals that the operation will result in duplicate Teammates (Teammates are considered duplicates if they have the","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":" * same identity).","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"public class DuplicateTeammateException extends RuntimeException {","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"    public DuplicateTeammateException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"        super(\"Operation would result in duplicate teammates\");","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":11}},{"path":"src/main/java/seedu/address/model/teammate/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate.exceptions;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"public class TaskNotFoundException extends RuntimeException { }","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"KIANSEONG":6}},{"path":"src/main/java/seedu/address/model/teammate/exceptions/TeammateNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate.exceptions;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":" * Signals that the operation is unable to find the specified teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"public class TeammateNotFoundException extends RuntimeException { }","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":" * Contains utility methods for populating {@code AddressBook} and {@code TaskPanel} with sample data.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    public static Teammate[] getSampleTeammates() {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        return new Teammate[] {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"            new Teammate(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"            new Teammate(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"            new Teammate(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"            new Teammate(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"            new Teammate(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            new Teammate(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        for (Teammate sampleTeammate : getSampleTeammates()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            sampleAb.addTeammate(sampleTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        return new Task[] {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"            new Task(","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"                new Title(\"Add task functionality.\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"                false,","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"                Deadline.of(LocalDate.of(2023, 1 , 1)),","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"                Project.UNSPECIFIED,","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"                getContactSet(\"Alex Yeoh\")","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"            ),","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"            new Task(","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"                new Title(\"Add task storage\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"                false,","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"                Deadline.of(TaskParserUtil.convertStringToLocalDate(\"01 January 2023\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"                new Project(\"CS2103T\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"                getContactSet(\"Bernice Yu\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        };","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"    public static ReadOnlyTaskPanel getSampleTaskPanel() {","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel sampleTp \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"            sampleTp.addTask(sampleTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        return sampleTp;","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"     * Returns a contact set containing the list of strings given.","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    public static Set\u003cContact\u003e getContactSet(String... strings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"                .map(Contact::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"KIANSEONG":57,"-":44,"yilinzyl":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"class JsonAdaptedContact {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    private final String contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code JsonAdaptedContact} with the given {@code contactName}.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public JsonAdaptedContact(String contactName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"        this.contactName \u003d contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        contactName \u003d source.contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    @JsonValue","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    public String getContactName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        return contactName;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"     * Converts this Jackson-friendly adapted contact object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        if (!Contact.isValidContactName(contactName)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"            throw new IllegalValueException(Contact.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        return new Contact(contactName);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"KIANSEONG":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    private final String title;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    private final String isCompleted;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"    private final String deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"    private final String project;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    private final List\u003cJsonAdaptedContact\u003e assigned \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"    public JsonAdaptedTask(@JsonProperty(\"title\") String title,","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"                           @JsonProperty(\"isCompleted\") String isCompleted,","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"                           @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"                           @JsonProperty(\"project\") String project,","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"                           @JsonProperty(\"assigned\") List\u003cJsonAdaptedContact\u003e assigned) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        this.project \u003d project;","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        if (assigned !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            this.assigned.addAll(assigned);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        title \u003d source.getTitle().toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        isCompleted \u003d String.valueOf(source.getCompleted());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        project \u003d source.getProject().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        assigned.addAll(source.getAssignedContacts().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"            .map(JsonAdaptedContact::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"     * Converts this Jackson-friendly adapted teammate object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        final List\u003cContact\u003e assignedContacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        for (JsonAdaptedContact contact : assigned) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"            assignedContacts.add(contact.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        if (isCompleted \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Done\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        if (!isCompleted.equalsIgnoreCase(\"false\") \u0026\u0026 !isCompleted.equalsIgnoreCase(\"true\")) {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Done\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        final boolean modelIsCompleted \u003d Boolean.parseBoolean(isCompleted);","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"beetee17"},"content":"        final Deadline modelDeadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"        if (deadline.equals(Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"beetee17"},"content":"            modelDeadline \u003d Deadline.UNSPECIFIED;","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"beetee17"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"            modelDeadline \u003d Deadline.of(TaskParserUtil.convertStringToLocalDate(deadline));","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"        final Project modelProject;","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"        if (project.equals(Project.UNSPECIFIED_PROJECT_IDENTIFIER)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"            modelProject \u003d Project.UNSPECIFIED;","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"            modelProject \u003d new Project(project);","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        final Set\u003cContact\u003e modelContacts \u003d new HashSet\u003c\u003e(assignedContacts);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"        return new Task(modelTitle, modelIsCompleted, modelDeadline, modelProject, modelContacts);","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":85,"beetee17":13,"yilinzyl":14}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTeammate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":" * Jackson-friendly version of {@link Teammate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"class JsonAdaptedTeammate {","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Teammate\u0027s %s field is missing!\";","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code JsonAdaptedTeammate} with the given teammate details.","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    public JsonAdaptedTeammate(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"     * Converts a given {@code Teammate} into this class for Jackson use.","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    public JsonAdaptedTeammate(Teammate source) {","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"     * Converts this Jackson-friendly adapted teammate object into the model\u0027s {@code Teammate} object.","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"    public Teammate toModelType() throws IllegalValueException {","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        final List\u003cTag\u003e teammateTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"            teammateTags.add(tag.toModelType());","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(teammateTags);","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        return new Teammate(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KIANSEONG":19,"-":90}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KIANSEONG":1,"-":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DUPLICATE_TEAMMATE \u003d \"Teammates list contains duplicate teammate(s).\";","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    private final List\u003cJsonAdaptedTeammate\u003e teammates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"teammates\") List\u003cJsonAdaptedTeammate\u003e teammates) {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        this.teammates.addAll(teammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        teammates.addAll(source.getTeammateList().stream().map(JsonAdaptedTeammate::new).collect(Collectors.toList()));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        for (JsonAdaptedTeammate jsonAdaptedTeammate : teammates) {","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"            Teammate teammate \u003d jsonAdaptedTeammate.toModelType();","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"            if (addressBook.hasTeammate(teammate)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            addressBook.addTeammate(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KIANSEONG":12,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" * An Immutable TaskPanel that is serializable to JSON format.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"@JsonRootName(value \u003d \"taskpanel\")","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"class JsonSerializableTaskPanel {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"     * Constructs a {@code JsonSerializableTaskPanel} with the given tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public JsonSerializableTaskPanel(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"     * Converts a given {@code ReadOnlyTaskPanel} into this class for Jackson use.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskPanel}.","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    public JsonSerializableTaskPanel(ReadOnlyTaskPanel source) {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     * Converts this task panel into the model\u0027s {@code TaskPanel} object.","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    public TaskPanel toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel taskPanel \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"            if (taskPanel.hasTask(task)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            taskPanel.addTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":60}},{"path":"src/main/java/seedu/address/storage/JsonTaskPanelStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"public class JsonTaskPanelStorage implements TaskPanelStorage {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskPanelStorage.class);","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public JsonTaskPanelStorage(Path filePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public Path getTaskPanelFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        return filePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    public Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel() throws DataConversionException {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        return readTaskPanel(filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     * Similar to {@link #readTaskPanel()}.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    public Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        Optional\u003cJsonSerializableTaskPanel\u003e jsonTaskPanel \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"                filePath, JsonSerializableTaskPanel.class);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        if (jsonTaskPanel.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        try {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            return Optional.of(jsonTaskPanel.get().toModelType());","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    public void saveTaskPanel(ReadOnlyTaskPanel taskPanel) throws IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        saveTaskPanel(taskPanel, filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"     * Similar to {@link #saveTaskPanel(ReadOnlyTaskPanel)}.","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"    public void saveTaskPanel(ReadOnlyTaskPanel taskPanel, Path filePath) throws IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(taskPanel);","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskPanel(taskPanel), filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":80}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"public interface Storage extends AddressBookStorage, TaskPanelStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"KIANSEONG":5,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    private TaskPanelStorage taskPanelStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code TaskPanelStorage}","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, TaskPanelStorage taskPanelStorage,","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        this.taskPanelStorage \u003d taskPanelStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskPanel methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"    public Path getTaskPanelFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanelStorage.getTaskPanelFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    public Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        return readTaskPanel(taskPanelStorage.getTaskPanelFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"    public Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        logger.fine(\"Attempting to read task data from file: \" + filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanelStorage.readTaskPanel(filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"    public void saveTaskPanel(ReadOnlyTaskPanel taskPanel) throws IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"        saveTaskPanel(taskPanel, taskPanelStorage.getTaskPanelFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"    public void saveTaskPanel(ReadOnlyTaskPanel taskPanel, Path filePath) throws IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        logger.fine(\"Attempting to write to task data file: \" + filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"        taskPanelStorage.saveTaskPanel(taskPanel, filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":36,"-":76}},{"path":"src/main/java/seedu/address/storage/TaskPanelStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":" * Represents a storage for {@link seedu.address.model.TaskPanel}.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"public interface TaskPanelStorage {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    Path getTaskPanelFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"     * Returns TaskPanel data as a {@link ReadOnlyTaskPanel}.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"     * @see #getTaskPanelFilePath()","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * Saves the given {@link ReadOnlyTaskPanel} to the storage.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"     * @param taskPanel cannot be null.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    void saveTaskPanel(ReadOnlyTaskPanel taskPanel) throws IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"     * @see #saveTaskPanel(ReadOnlyTaskPanel)","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    void saveTaskPanel(ReadOnlyTaskPanel taskPanel, Path filePath) throws IOException;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":44}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    // command log navigation","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    private final List\u003cString\u003e commandLog;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    private int pointer;","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        commandLog \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        load();","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     * Load objects and data.","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    private void load() {","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, this::handleNavigationKeysPressed);","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        // prevents the tab button from navigating the application when there is text in the command box","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"            if (event.getCode() \u003d\u003d KeyCode.TAB) {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"                if (!isCommandTextFieldEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"                    event.consume();","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"                }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        });","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        String currentText \u003d commandTextField.getText();","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        // Guard: If command text field is empty, no command is entered","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        if (currentText.isEmpty()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"            commandLog.add(currentText);","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"            pointer \u003d commandLog.size();","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"            commandExecutor.execute(currentText);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"     * Allows the user to navigate between previously entered commands with the UP and DOWN arrow keys.","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"     * If no more previous command and UP key is pressed, nothing happens.","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"     * If current text matches the latest command and DOWN key is pressed, nothing happens.","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    private void handleNavigationKeysPressed(KeyEvent event) {","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        // Guard: Checks if either command log navigation key are pressed","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        if (event.getCode() !\u003d KeyCode.UP \u0026\u0026 event.getCode() !\u003d KeyCode.DOWN) {","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"            return;","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        event.consume();","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        // Guard: Checks if command text field satisfies condition.","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        if (!isNavigable(event)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"            return;","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"            commandTextField.setText(commandLog.get(--pointer));","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        } else if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"            if (pointer \u003d\u003d commandLog.size()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"                return;","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"            } else if (pointer \u003d\u003d commandLog.size() - 1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"                pointer++;","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"                commandTextField.setText(\"\");","lastModifiedDate":"2022-10-26"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"            } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"                commandTextField.setText(commandLog.get(++pointer));","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        commandTextField.positionCaret(commandTextField.getText().length());","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"     * Sets focus on the CommandTextField.","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"    public void focus() {","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"        commandTextField.selectEnd();","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"     * Gets the current text in the command text field.","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"    private String getCommandText() {","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        return commandTextField.getText();","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"     * Checks if command text field can be navigated using the UP and DOWN arrow keys.","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"    private boolean isNavigable(KeyEvent event) {","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"        // Guard: If there are no commands, nothing happens.","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"        if (commandLog.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        // Guard: If the text field shows the earliest command, UP arrow does nothing","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP \u0026\u0026 pointer \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"        return isCommandTextFieldEmpty()","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"            || (!isCommandTextFieldEmpty() \u0026\u0026 getCommandText().equals(commandLog.get(pointer)));","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"     * Check if command text field is empty","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    private boolean isCommandTextFieldEmpty() {","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"        return commandTextField.getText().isEmpty();","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"KIANSEONG":106,"-":82}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2223s1-cs2103t-t08-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        // User can press enter to close the help window if its focused.","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            if (event.getCode() \u003d\u003d KeyCode.ESCAPE \u0026\u0026 getRoot().isShowing()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"                getRoot().close();","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        });","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"        alertAndCloseHelpAuto();","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"     * Display an alert that the User Guide URL has been copied and","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"     * closes the help window automatically after the user copies the URL.","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"    private void alertAndCloseHelpAuto() {","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"        Alert copiedAlert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        copiedAlert.setHeaderText(\"URL copied\");","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"        copiedAlert.getDialogPane().lookupButton(ButtonType.OK).setVisible(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        copiedAlert.show();","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        final KeyFrame closeHelp \u003d new KeyFrame(Duration.seconds(1), e -\u003e getRoot().close());","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        final KeyFrame closeAlert \u003d new KeyFrame(Duration.seconds(0.75), e -\u003e copiedAlert.close());","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"        final Timeline timeline \u003d new Timeline(closeAlert, closeHelp);","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        Platform.runLater(timeline::play);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KIANSEONG":33,"-":99}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    private TeammateListPanel teammateListPanel;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    private StackPane teammateListPanelPlaceholder;","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"            // Checks if \u0027/\u0027 key was pressed and if the user is not focused on an editable GUI element","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"            if (event.getCode() \u003d\u003d KeyCode.SLASH","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"                    \u0026\u0026 !(event.getTarget() instanceof TextInputControl","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"                            \u0026\u0026 ((TextInputControl) event.getTarget()).isEditable())) {","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"                event.consume();","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"                commandBox.focus();","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        teammateListPanel \u003d new TeammateListPanel(logic.getFilteredTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"        teammateListPanelPlaceholder.getChildren().add(teammateListPanel.getRoot());","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"beetee17"},"content":"        Consumer\u003cCommand\u003e commandExecutor \u003d command -\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"beetee17"},"content":"            try {","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"                logic.execute(command);","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"beetee17"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"beetee17"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"beetee17"},"content":"                logger.log(Level.SEVERE, \"Error occurred when doing GUI action\", e);","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"beetee17"},"content":"        };","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"beetee17"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList(), commandExecutor);","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"beetee17"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateListPanel getTeammateListPanel() {","lastModifiedDate":"2022-11-06"},{"lineNumber":195,"author":{"gitId":"KIANSEONG"},"content":"        return teammateListPanel;","lastModifiedDate":"2022-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KIANSEONG":17,"beetee17":16,"-":191}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import javafx.scene.control.CheckBox;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.MarkTaskCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.UnmarkTaskCommand;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":" * A UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"    public final Task task;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"    private Label title;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"    private Label id;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"    private CheckBox isCompleted;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"    private Label deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"    private Label project;","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    private FlowPane assignedContacts;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"    public TaskCard(Task task, int displayedIndex, Consumer\u003c? super TaskCommand\u003e commandConsumer) {","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"        super(FXML);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"        title.setText(task.getTitle().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        if (task.getDeadline().isUnspecified()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"            deadline.setVisible(false);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"            deadline.setManaged(false);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"            String text \u003d task.getDeadline().formatForUi();","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"            deadline.setText(text);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"        if (task.getProject().isUnspecified()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"            project.setVisible(false);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"            project.setManaged(false);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"            String text \u003d task.getProject().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"            project.setText(text);","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"        isCompleted.setText(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        isCompleted.setSelected(task.getCompleted());","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"        isCompleted.selectedProperty().addListener((observableValue, oldValue, newValue) -\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"            if (oldValue) {","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"                commandConsumer.accept(new UnmarkTaskCommand(Index.fromOneBased(displayedIndex)));","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"            } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"beetee17"},"content":"                commandConsumer.accept(new MarkTaskCommand(Index.fromOneBased(displayedIndex)));","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"        });","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e contactNames \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"beetee17"},"content":"                task","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"beetee17"},"content":"                        .getAssignedContacts()","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"beetee17"},"content":"                        .stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"beetee17"},"content":"                        .map(Contact::getContactName)","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"                        .sorted()","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"beetee17"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"        int numContacts \u003d contactNames.size();","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"beetee17"},"content":"        for (int i \u003d 0; i \u003c numContacts; i++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"beetee17"},"content":"            if (i \u003c numContacts - 1) {","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"beetee17"},"content":"                assignedContacts.getChildren().add(new Label(contactNames.get(i) + \", \"));","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"beetee17"},"content":"            } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"beetee17"},"content":"                assignedContacts.getChildren().add(new Label(contactNames.get(i)));","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"beetee17"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"beetee17"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"beetee17"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"beetee17"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"beetee17"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"beetee17"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"beetee17"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"beetee17"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"beetee17"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"beetee17"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"beetee17"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"beetee17"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"beetee17"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"KIANSEONG":3,"beetee17":104,"yilinzyl":14}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList,","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"                         Consumer\u003c? super Command\u003e commandExecutor) {","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"        super(FXML);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell(commandExecutor));","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"        private final Consumer\u003c? super Command\u003e commandExecutor;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"        TaskListViewCell(Consumer\u003c? super Command\u003e commandExecutor) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"            this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"                setText(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1, commandExecutor).getRoot());","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"beetee17":57}},{"path":"src/main/java/seedu/address/ui/TeammateCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" * An UI component that displays information of a {@code Teammate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"public class TeammateCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    private static final String FXML \u003d \"TeammateListCard.fxml\";","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public final Teammate teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a {@code TeammateCard} with the given {@code Teammate} and index to display.","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateCard(Teammate teammate, int displayedIndex) {","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        this.teammate \u003d teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        name.setText(teammate.getName().fullName);","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        phone.setText(teammate.getPhone().value);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        address.setText(teammate.getAddress().value);","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        email.setText(teammate.getEmail().value);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        teammate.getTags().stream()","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        if (!(other instanceof TeammateCard)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        TeammateCard card \u003d (TeammateCard) other;","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"                \u0026\u0026 teammate.equals(card.teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KIANSEONG":16,"-":61}},{"path":"src/main/java/seedu/address/ui/TeammateListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":" * Panel containing the list of teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"public class TeammateListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    private static final String FXML \u003d \"TeammateListPanel.fxml\";","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TeammateListPanel.class);","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    private ListView\u003cTeammate\u003e teammateListView;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a {@code TeammateListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateListPanel(ObservableList\u003cTeammate\u003e teammateList) {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        teammateListView.setItems(teammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        teammateListView.setCellFactory(listView -\u003e new TeammateListViewCell());","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Teammate} using a {@code TeammateCard}.","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    static class TeammateListViewCell extends ListCell\u003cTeammate\u003e {","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        protected void updateItem(Teammate teammate, boolean empty) {","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"            super.updateItem(teammate, empty);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"            if (empty || teammate \u003d\u003d null) {","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"                setGraphic(new TeammateCard(teammate, getIndex() + 1).getRoot());","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KIANSEONG":17,"-":33}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\"","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"             promptText\u003d\"Enter command here... (Press / to focus)\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"KIANSEONG":2,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"@font-face {","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"    font-family: \u0027Montserrat\u0027;","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"    src: url(\u0027/fonts/Montserrat-Regular.otf\u0027);","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"@font-face {","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"    font-family: \u0027Open Sans\u0027;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"    src: url(\u0027/fonts/OpenSans/OpenSans-Regular.ttf\u0027);","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"@font-face {","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    font-family: \u0027Open Sans Semibold\u0027","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    src: url(\u0027/fonts/OpenSans/OpenSans-Semibold.ttf\u0027);","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"@font-face {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    font-family: \u0027Open Sans Light\u0027","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    src: url(\u0027/fonts/OpenSans/OpenSans-Light.ttf\u0027);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":".root {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans\", sans-serif;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    -fx-color-base: #383838;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    background-color: -fx-color-base; /* Used in the default.html file */","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Open Sans\", sans-serif;","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"KIANSEONG"},"content":"    -fx-font-family: \"Montserrat\";","lastModifiedDate":"2022-10-25"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"KIANSEONG"},"content":"#filterField, #teammateListPanel, #teammateWebpage {","lastModifiedDate":"2022-11-06"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"KIANSEONG":38,"-":338}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"* {","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KIANSEONG":1,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"KIANSEONG":5,"-":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"         title\u003d\"Arrow\" minWidth\u003d\"600\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"                   minHeight\u003d\"125\" prefHeight\u003d\"100\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\"/\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"          \u003cStackPane fx:id\u003d\"teammateListPanelPlaceholder\"/\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"KIANSEONG":5,"beetee17":3,"-":49}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.control.CheckBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"      \u003cHBox fx:id\u003d\"textBox\" fillHeight\u003d\"false\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-font-size: 20px;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        \u003cAnchorPane HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"          \u003cLabel fx:id\u003d\"title\" style\u003d\"-fx-font-size: 20px;\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"        \u003cAnchorPane HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"          \u003cCheckBox fx:id\u003d\"isCompleted\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"                    AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"      \u003cVBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"          \u003cImageView fitWidth\u003d\"25\" fitHeight\u003d\"25\"\u003e\u003cImage url\u003d\"@/images/deadline.png\" /\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"          \u003cLabel fx:id\u003d\"deadline\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"          \u003cImageView fitWidth\u003d\"25\" fitHeight\u003d\"25\"\u003e\u003cImage url\u003d\"@/images/project.png\" /\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"          \u003cLabel fx:id\u003d\"project\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"          \u003cImageView fitWidth\u003d\"25\" fitHeight\u003d\"25\"\u003e\u003cImage url\u003d\"@/images/contact.png\" /\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"          \u003cFlowPane fx:id\u003d\"assignedContacts\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"KIANSEONG":19,"beetee17":35,"yilinzyl":1}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"beetee17":1,"-":6}},{"path":"src/main/resources/view/TeammateListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"  \u003cListView fx:id\u003d\"teammateListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":1,"-":6}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        final Index fifthTeammateIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(fifthTeammateIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(fifthTeammateIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(fifthTeammateIndex.equals(fifthTeammateIndex));","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(fifthTeammateIndex.equals(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(fifthTeammateIndex.equals(5.0f));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(fifthTeammateIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KIANSEONG":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.storage.JsonTaskPanelStorage;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        JsonTaskPanelStorage taskPanelStorage \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"                new JsonTaskPanelStorage(temporaryFolder.resolve(\"taskPanel.json\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskPanelStorage, userPrefsStorage);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        JsonTaskPanelStorage taskPanelStorage \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"                new JsonTaskPanelIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTaskPanel.json\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskPanelStorage, userPrefsStorage);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        Teammate expectedTeammate \u003d new TeammateBuilder(AMY).withTags().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.addTeammate(expectedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    public void getFilteredTeammateList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTeammateList().remove(0));","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"beetee17"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"beetee17"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"     * A stub class to throw an {@code IOException} when the save address book method is called.","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"     * A stub class to throw an {@code IOException} when the save task panel method is called.","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"    private static class JsonTaskPanelIoExceptionThrowingStub extends JsonTaskPanelStorage {","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"KIANSEONG"},"content":"        private JsonTaskPanelIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"KIANSEONG"},"content":"            super(filePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"KIANSEONG"},"content":"        public void saveTaskPanel(ReadOnlyTaskPanel taskPanel, Path filePath) throws IOException {","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"KIANSEONG"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KIANSEONG":33,"beetee17":3,"-":151}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_newTeammate_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        Teammate validTeammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.addTeammate(validTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandSuccess(new AddCommand(validTeammate), model,","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validTeammate), expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_duplicateTeammate_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammateInList \u003d model.getAddressBook().getTeammateList().get(0);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(new AddCommand(teammateInList), model, AddCommand.MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KIANSEONG":14,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_nullTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_teammateAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        ModelStubAcceptingTeammateAdded modelStub \u003d new ModelStubAcceptingTeammateAdded();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        Teammate validTeammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        CommandResult commandResult \u003d new AddCommand(validTeammate).execute(modelStub);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTeammate), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(Collections.singletonList(validTeammate), modelStub.teammatesAdded);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_duplicateTeammate_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        Teammate validTeammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        AddCommand addCommand \u003d new AddCommand(validTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        ModelStub modelStub \u003d new ModelStubWithTeammate(validTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"                AddCommand.MESSAGE_DUPLICATE_TEAMMATE, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        Teammate alice \u003d new TeammateBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        Teammate bob \u003d new TeammateBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"        public void addTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"        public void deleteTeammate(Teammate target) {","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        public void setTeammate(Teammate target, Teammate editedTeammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"        public ObservableList\u003cTeammate\u003e getFilteredTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"beetee17"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"beetee17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        public void updateFilteredTeammateList(Predicate\u003cTeammate\u003e predicate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"        public void setFilteredTaskList(ObservableList\u003cTask\u003e newTasks) {","lastModifiedDate":"2022-10-28"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"beetee17"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"beetee17"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"beetee17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"        public ReadOnlyTaskPanel getTaskPanel() {","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"wxy1203"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"wxy1203"},"content":"        public void setTaskPanel(ReadOnlyTaskPanel taskPanel) {","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"wxy1203"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"amresh2000"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"amresh2000"},"content":"        public void deleteTask(Task deletedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"amresh2000"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"wxy1203"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"wxy1203"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"KIANSEONG"},"content":"     * A Model stub that contains a single teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"KIANSEONG"},"content":"    private class ModelStubWithTeammate extends ModelStub {","lastModifiedDate":"2022-11-06"},{"lineNumber":203,"author":{"gitId":"KIANSEONG"},"content":"        private final Teammate teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"KIANSEONG"},"content":"        ModelStubWithTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":206,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":207,"author":{"gitId":"KIANSEONG"},"content":"            this.teammate \u003d teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":212,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":213,"author":{"gitId":"KIANSEONG"},"content":"            return this.teammate.isSameTeammate(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"KIANSEONG"},"content":"     * A Model stub that always accept the teammate being added.","lastModifiedDate":"2022-11-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"KIANSEONG"},"content":"    private class ModelStubAcceptingTeammateAdded extends ModelStub {","lastModifiedDate":"2022-11-06"},{"lineNumber":221,"author":{"gitId":"KIANSEONG"},"content":"        final ArrayList\u003cTeammate\u003e teammatesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":225,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":226,"author":{"gitId":"KIANSEONG"},"content":"            return teammatesAdded.stream().anyMatch(teammate::isSameTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"KIANSEONG"},"content":"        public void addTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":231,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":232,"author":{"gitId":"KIANSEONG"},"content":"            teammatesAdded.add(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"KIANSEONG":67,"amresh2000":5,"wxy1203":7,"beetee17":9,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"KIANSEONG":4,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTeammateDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    public static final EditCommand.EditTeammateDescriptor DESC_AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    public static final EditCommand.EditTeammateDescriptor DESC_BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        DESC_AMY \u003d new EditTeammateDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        DESC_BOB \u003d new EditTeammateDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"     * - the address book, filtered teammate list and selected teammate in {@code actualModel} remain unchanged","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"     * Updates {@code model}\u0027s filtered list to show only the teammate at the given {@code targetIndex} in the","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"    public static void showTeammateAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTeammateList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammate \u003d model.getFilteredTeammateList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"        final String[] splitName \u003d teammate.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTeammateList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(1, model.getFilteredTeammateList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"beetee17"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"beetee17"},"content":"     * {@code model}\u0027s task panel.","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"beetee17"},"content":"    public static void hideAllTasks(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"beetee17"},"content":"        model.updateFilteredTaskList(Model.PREDICATE_HIDE_ALL_TASKS);","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"        assertEquals(0, model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"KIANSEONG":17,"beetee17":9,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTeammateAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-07"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validIndexUnfilteredListNoTaskChange_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        Teammate teammateToDelete \u003d model.getFilteredTeammateList().get(INDEX_SECOND_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_SECOND_TEAMMATE);","lastModifiedDate":"2022-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TEAMMATE_SUCCESS, teammateToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.deleteTeammate(teammateToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validIndexFilteredListNoTaskChange_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"        showTeammateAtIndex(model, INDEX_SECOND_TEAMMATE);","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammateToDelete \u003d model.getFilteredTeammateList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TEAMMATE_SUCCESS, teammateToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.deleteTeammate(teammateToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"        showNoTeammate(expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"    public void execute_taskAssignedContactCascadeDeleted_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"        Teammate teammateToDelete \u003d model.getFilteredTeammateList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder(model.getFilteredTaskList().get(0)).withContacts().build();","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TEAMMATE_SUCCESS, teammateToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.deleteTeammate(teammateToDelete);","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        showTeammateAtIndex(model, INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTeammateList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2022-11-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-11-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-11-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"    private void showNoTeammate(Model model) {","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        model.updateFilteredTeammateList(p -\u003e false);","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(model.getFilteredTeammateList().isEmpty());","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"KIANSEONG":39,"-":70,"yilinzyl":19}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-11-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTeammateAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TEAMMATE;","lastModifiedDate":"2022-11-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.EditCommand.EditTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTeammateDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    public void execute_allFieldsSpecifiedUnfilteredListNoTaskChange_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"        Teammate editedTeammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder(editedTeammate).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TEAMMATE, descriptor);","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"            new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTeammate(model.getFilteredTeammateList().get(1), editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"    public void execute_someFieldsSpecifiedUnfilteredListNoTaskChange_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"        Index indexSecondLastTeammate \u003d Index.fromOneBased(model.getFilteredTeammateList().size() - 1);","lastModifiedDate":"2022-11-07"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        Teammate secondLastTeammate \u003d model.getFilteredTeammateList().get(indexSecondLastTeammate.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"        TeammateBuilder teammateInList \u003d new TeammateBuilder(secondLastTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"        Teammate editedTeammate \u003d teammateInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"        EditCommand editCommand \u003d new EditCommand(indexSecondLastTeammate, descriptor);","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"            new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTeammate(secondLastTeammate, editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TEAMMATE, new EditCommand.EditTeammateDescriptor());","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedTeammate \u003d model.getFilteredTeammateList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"            new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"    public void execute_filteredListNoTaskChange_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"        showTeammateAtIndex(model, INDEX_THIRD_TEAMMATE);","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"        Teammate teammateInFilteredList \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"              model.getFilteredTeammateList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"        Teammate editedTeammate \u003d new TeammateBuilder(teammateInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TEAMMATE,","lastModifiedDate":"2022-11-07"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"                new EditTeammateDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-11-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"            new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTeammate(model.getFilteredTeammateList().get(0), editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"    public void execute_taskAssignedContactCascade_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"        Teammate editedTeammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-07"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder(model.getFilteredTaskList().get(0)).withContacts(\"Amy Bee\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder(editedTeammate).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TEAMMATE, descriptor);","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TEAMMATE_SUCCESS, editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTeammate(model.getFilteredTeammateList().get(0), editedTeammate);","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_duplicateTeammateUnfilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        Teammate firstTeammate \u003d model.getFilteredTeammateList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder(firstTeammate).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TEAMMATE, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_duplicateTeammateFilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        showTeammateAtIndex(model, INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"        // edit teammate in filtered list into a duplicate in address book","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammateInList \u003d model.getAddressBook().getTeammateList().get(INDEX_SECOND_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TEAMMATE,","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"                new EditTeammateDescriptorBuilder(teammateInList).build());","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_invalidTeammateIndexUnfilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_invalidTeammateIndexFilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"        showTeammateAtIndex(model, INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTeammateList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"                new EditTeammateDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TEAMMATE, DESC_AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand.EditTeammateDescriptor copyDescriptor \u003d new EditTeammateDescriptor(DESC_AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TEAMMATE, copyDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TEAMMATE, DESC_AMY)));","lastModifiedDate":"2022-11-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TEAMMATE, DESC_BOB)));","lastModifiedDate":"2022-11-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"KIANSEONG":42,"-":110,"yilinzyl":48}},{"path":"src/test/java/seedu/address/logic/commands/EditTeammateDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.EditCommand.EditTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTeammateDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"public class EditTeammateDescriptorTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand.EditTeammateDescriptor descriptorWithSameValues \u003d new EditCommand.EditTeammateDescriptor(DESC_AMY);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor editedAmy \u003d new EditTeammateDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        editedAmy \u003d new EditTeammateDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        editedAmy \u003d new EditTeammateDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        editedAmy \u003d new EditTeammateDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        editedAmy \u003d new EditTeammateDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"KIANSEONG":9,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TEAMMATES_LISTED_OVERVIEW;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.CARL;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.ELLE;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.FIONA;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.ContainsTagPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        ContainsTagPredicate emptyTagsPredicate \u003d new ContainsTagPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate, emptyTagsPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate, emptyTagsPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate, emptyTagsPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_zeroKeywords_noTeammateFound() {","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TEAMMATES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"        ContainsTagPredicate emptyTagsPredicate \u003d new ContainsTagPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"        FindCommand command \u003d new FindCommand(predicate, emptyTagsPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.updateFilteredTeammateList(predicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_multipleKeywords_multipleTeammatesFound() {","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TEAMMATES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        ContainsTagPredicate emptyTagsPredicate \u003d new ContainsTagPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"        FindCommand command \u003d new FindCommand(predicate, emptyTagsPredicate);","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.updateFilteredTeammateList(predicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KIANSEONG":19,"-":61,"yilinzyl":9}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTeammateAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        showTeammateAtIndex(model, INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KIANSEONG":7,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/TaskCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTACT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROJECT;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":" * Contains helper methods for testing task commands.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"public class TaskCommandTestUtil {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_TITLE_HOMEWORK \u003d \"Do homework\";","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_TITLE_WORKSHOP \u003d \"Attend workshop\";","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_DEADLINE_HOMEWORK \u003d \"1 December 2022\";","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_DEADLINE_WORKSHOP \u003d \"1 January 2023\";","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_PROJECT_HOMEWORK \u003d \"CS2103\";","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_PROJECT_WORKSHOP \u003d \"CS\";","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_CONTACT_HOMEWORK \u003d \"1\";","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    public static final String VALID_CONTACT_WORKSHOP \u003d \"2\";","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    public static final String TITLE_DESC_HOMEWORK \u003d \" \" + PREFIX_TITLE + VALID_TITLE_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public static final String TITLE_DESC_WORKSHOP \u003d \" \" + PREFIX_TITLE + VALID_TITLE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public static final String DEADLINE_DESC_HOMEWORK \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    public static final String DEADLINE_DESC_WORKSHOP \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    public static final String PROJECT_DESC_HOMEWORK \u003d \" \" + PREFIX_PROJECT + VALID_PROJECT_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public static final String PROJECT_DESC_WORKSHOP \u003d \" \" + PREFIX_PROJECT + VALID_PROJECT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public static final String CONTACT_DESC_HOMEWORK \u003d \" \" + PREFIX_CONTACT + VALID_CONTACT_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    public static final String CONTACT_DESC_WORKSHOP \u003d \" \" + PREFIX_CONTACT + VALID_CONTACT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_TITLE + \" \"; // empty string not allowed for title","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE + \"-11/12\"; // \u0027-\u0027 not allowed in deadlines","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public static final String INVALID_PROJECT_DESC \u003d \" \" + PREFIX_PROJECT + \"\u0026test\"; // \u0026\u0027 not allowed in projects","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    public static final String INVALID_CONTACT_DESC \u003d \" \" + PREFIX_CONTACT; // empty string not allowed for contact","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    static {","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        DESC_HOMEWORK \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_HOMEWORK)","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"                .withDeadline(VALID_DEADLINE_HOMEWORK).withProject(VALID_PROJECT_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        DESC_WORKSHOP \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_WORKSHOP)","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"                .withDeadline(VALID_DEADLINE_WORKSHOP).withProject(VALID_PROJECT_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":49}},{"path":"src/test/java/seedu/address/logic/commands/task/AddTaskCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":" * Contains integration tests (interaction with the Model) for {@code AddTaskCommand}.","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"public class AddTaskCommandIntegrationTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    private Model model;","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"            new AddTaskCommand(validTask),","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"            model,","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"            String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask.getTitle()), expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        Task taskInList \u003d model.getTaskPanel().getTaskList().get(0);","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            new AddTaskCommand(taskInList),","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"            model,","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"            String.format(AddTaskCommand.MESSAGE_DUPLICATE_TASK, taskInList.getTitle())","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        );","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"KIANSEONG":51}},{"path":"src/test/java/seedu/address/logic/commands/task/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand((Title) null));","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask.getTitle()),","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(Collections.singletonList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"            CommandException.class,","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"            String.format(AddTaskCommand.MESSAGE_DUPLICATE_TASK, validTask.getTitle()), ()","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"                    -\u003e addTaskCommand.execute(modelStub)","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        );","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        Task taskOne \u003d new TaskBuilder().withTitle(\"Task 1\").build();","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        Task taskTwo \u003d new TaskBuilder().withTitle(\"Task 2\").build();","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        AddTaskCommand addTaskOneCommand \u003d new AddTaskCommand(taskOne);","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        AddTaskCommand addTaskTwoCommand \u003d new AddTaskCommand(taskTwo);","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(addTaskOneCommand, addTaskOneCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        AddTaskCommand addTaskOneCommandCopy \u003d new AddTaskCommand(taskOne);","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(addTaskOneCommand, addTaskOneCommandCopy);","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, addTaskOneCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, addTaskOneCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(addTaskOneCommand, addTaskTwoCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"        public void addTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        public void deleteTeammate(Teammate target) {","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"        public void setTeammate(Teammate target, Teammate editedTeammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"        public ObservableList\u003cTeammate\u003e getFilteredTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"beetee17"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"beetee17"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"beetee17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"        public void updateFilteredTeammateList(Predicate\u003cTeammate\u003e predicate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"KIANSEONG"},"content":"        public void setFilteredTaskList(ObservableList\u003cTask\u003e newTasks) {","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"beetee17"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"beetee17"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"beetee17"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"beetee17"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"        public ReadOnlyTaskPanel getTaskPanel() {","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"wxy1203"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"wxy1203"},"content":"        public void setTaskPanel(ReadOnlyTaskPanel taskPanel) {","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"wxy1203"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"wxy1203"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"KIANSEONG"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"amresh2000"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"amresh2000"},"content":"        public void deleteTask(Task deletedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"amresh2000"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"amresh2000"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"amresh2000"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"amresh2000"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"amresh2000"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"KIANSEONG"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"KIANSEONG"},"content":"    private static class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"KIANSEONG"},"content":"        private final Task task;","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":210,"author":{"gitId":"KIANSEONG"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":211,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":212,"author":{"gitId":"KIANSEONG"},"content":"            this.task \u003d task;","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":217,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":218,"author":{"gitId":"KIANSEONG"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":219,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":220,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":221,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":222,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":223,"author":{"gitId":"KIANSEONG"},"content":"     * A Model stub that always accept the teammate being added.","lastModifiedDate":"2022-11-06"},{"lineNumber":224,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":225,"author":{"gitId":"KIANSEONG"},"content":"    private static class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"KIANSEONG"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":227,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":228,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":229,"author":{"gitId":"KIANSEONG"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":230,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":231,"author":{"gitId":"KIANSEONG"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2022-10-07"},{"lineNumber":232,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":233,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":234,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":235,"author":{"gitId":"KIANSEONG"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":236,"author":{"gitId":"KIANSEONG"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":237,"author":{"gitId":"KIANSEONG"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":238,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":239,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":240,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":241,"author":{"gitId":"KIANSEONG"},"content":"        public ReadOnlyTaskPanel getTaskPanel() {","lastModifiedDate":"2022-10-07"},{"lineNumber":242,"author":{"gitId":"KIANSEONG"},"content":"            return new TaskPanel();","lastModifiedDate":"2022-10-07"},{"lineNumber":243,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":244,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":245,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":246,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":222,"amresh2000":9,"wxy1203":5,"beetee17":10}},{"path":"src/test/java/seedu/address/logic/commands/task/AssignTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-07"},{"lineNumber":8,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-11-07"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-11-07"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-11-07"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-11-07"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"public class AssignTaskCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"    public void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        Index outOfBoundTaskIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(outOfBoundTaskIndex, new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"    public void execute_invalidSingleTeammateAddIndex_throwsCommandException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundTeammateIndex \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(outOfBoundTeammateIndex)), new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"                        outOfBoundTeammateIndex.getOneBased()) + \u0027\\n\u0027);","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_invalidTeammateDeleteIndex_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundTeammateIndex \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK, new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(outOfBoundTeammateIndex)), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"                        outOfBoundTeammateIndex.getOneBased()) + \u0027\\n\u0027);","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"    public void execute_invalidSingleTeammateAddName_throwsCommandException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK, new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(\"NotAName\")), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME,","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"                        \"NotAName\") + \"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_invalidTeammateDeleteName_throwsCommandException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK, new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"NotAName\")));","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME,","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"                        \"NotAName\") + \"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"    public void execute_invalidTeammateAddNameAndIndex_throwsCommandException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"        Index outOfBoundTeammateIndex \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(outOfBoundTeammateIndex)), new HashSet\u003c\u003e(Arrays.asList(\"NotAName\")),","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"yilinzyl"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-07"},{"lineNumber":97,"author":{"gitId":"yilinzyl"},"content":"                        outOfBoundTeammateIndex.getOneBased()) + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":98,"author":{"gitId":"yilinzyl"},"content":"                        + String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME, \"NotAName\") + \"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"yilinzyl"},"content":"    public void execute_invalidTeammateDeleteNameAndIndex_throwsCommandException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":103,"author":{"gitId":"yilinzyl"},"content":"        Index outOfBoundTeammateIndex \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-07"},{"lineNumber":104,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK, new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(outOfBoundTeammateIndex)),","lastModifiedDate":"2022-11-07"},{"lineNumber":106,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(Arrays.asList(\"NotAName\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":107,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"yilinzyl"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-07"},{"lineNumber":110,"author":{"gitId":"yilinzyl"},"content":"                        outOfBoundTeammateIndex.getOneBased()) + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":111,"author":{"gitId":"yilinzyl"},"content":"                        + String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME, \"NotAName\") + \"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":112,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":113,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":114,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":115,"author":{"gitId":"yilinzyl"},"content":"    public void execute_invalidTeammateDeleteAddNameAndIndex_throwsCommandException() {","lastModifiedDate":"2022-11-07"},{"lineNumber":116,"author":{"gitId":"yilinzyl"},"content":"        Index outOfBoundTeammateIndexOne \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-07"},{"lineNumber":117,"author":{"gitId":"yilinzyl"},"content":"        Index outOfBoundTeammateIndexTwo \u003d Index.fromOneBased(model.getFilteredTeammateList().size() + 1);","lastModifiedDate":"2022-11-07"},{"lineNumber":118,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":119,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(outOfBoundTeammateIndexOne)), new HashSet\u003c\u003e(Arrays.asList(\"NotAName\")),","lastModifiedDate":"2022-11-07"},{"lineNumber":120,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(outOfBoundTeammateIndexTwo)), new HashSet\u003c\u003e(Arrays.asList(\"NonName\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":121,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":122,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(assignTaskCommand, model,","lastModifiedDate":"2022-11-07"},{"lineNumber":123,"author":{"gitId":"yilinzyl"},"content":"                String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-07"},{"lineNumber":124,"author":{"gitId":"yilinzyl"},"content":"                        outOfBoundTeammateIndexOne.getOneBased()) + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":125,"author":{"gitId":"yilinzyl"},"content":"                        + String.format(Messages.MESSAGE_INVALID_TEAMMATE_INDEX_CUSTOM,","lastModifiedDate":"2022-11-07"},{"lineNumber":126,"author":{"gitId":"yilinzyl"},"content":"                        outOfBoundTeammateIndexTwo.getOneBased()) + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":127,"author":{"gitId":"yilinzyl"},"content":"                        + String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME, \"NotAName\") + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":128,"author":{"gitId":"yilinzyl"},"content":"                        + String.format(Messages.MESSAGE_INVALID_TEAMMATE_NAME, \"NonName\") + \"\\n\");","lastModifiedDate":"2022-11-07"},{"lineNumber":129,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":130,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":132,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateAddIndex_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":133,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":134,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":135,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":136,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":137,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":138,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":139,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":140,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts(\"Benson Meier\", \"Alice Pauline\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":141,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":142,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":143,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":144,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":145,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":146,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":147,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":148,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":149,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":150,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":151,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":152,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateAddName_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":153,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":154,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Benson Meier\")),","lastModifiedDate":"2022-11-07"},{"lineNumber":155,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":156,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":157,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":158,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":159,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":160,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts(\"Benson Meier\", \"Alice Pauline\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":161,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":162,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":163,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":164,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":165,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":166,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":167,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":168,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":169,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":170,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":171,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":172,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateDeleteIndex_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":173,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":174,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":175,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE)), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":176,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":177,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":178,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":179,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder(taskToEdit).withContacts().build();","lastModifiedDate":"2022-11-07"},{"lineNumber":180,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":181,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":182,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":183,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":184,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":185,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":186,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":187,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":188,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":189,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":190,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":191,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateDeleteName_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":192,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":193,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":194,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Alice Pauline\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":195,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":196,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":197,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":198,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":199,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts().build();","lastModifiedDate":"2022-11-07"},{"lineNumber":200,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":201,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":202,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":203,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":204,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":205,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":206,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":207,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":208,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":209,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":210,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":211,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateAddAndDeleteName_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":212,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":213,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Benson Meier\")),","lastModifiedDate":"2022-11-07"},{"lineNumber":214,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Alice Pauline\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":215,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":216,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":217,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":218,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":219,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts(\"Benson Meier\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":220,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":221,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":222,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":223,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":224,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":225,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":226,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":227,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":228,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":229,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":230,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":231,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateAddAndDeleteIndex_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":232,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":233,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":234,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE)), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":235,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":236,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":237,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":238,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":239,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts(\"Benson Meier\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":240,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":241,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":242,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":243,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":244,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":245,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":246,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":247,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":248,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":249,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":250,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":251,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateAddAndDeleteMix_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":252,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":253,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":254,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Alice Pauline\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":255,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":256,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":257,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":258,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":259,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts(\"Benson Meier\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":260,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":261,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":262,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":263,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":264,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":265,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":266,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":267,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":268,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":269,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":270,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":271,"author":{"gitId":"yilinzyl"},"content":"    public void execute_validTeammateAddAndDeleteMultiple_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":272,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":273,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_SECOND_TEAMMATE, INDEX_THIRD_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":274,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Alice Pauline\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":275,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":276,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":277,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":278,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d","lastModifiedDate":"2022-11-07"},{"lineNumber":279,"author":{"gitId":"yilinzyl"},"content":"                new TaskBuilder(taskToEdit).withContacts(\"Benson Meier\", \"Carl Kurz\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":280,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":281,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":282,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":283,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":284,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":285,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":286,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":287,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":288,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":289,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":290,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":291,"author":{"gitId":"yilinzyl"},"content":"    public void execute_teammateToAddAlreadyAdded_successWithInfo() {","lastModifiedDate":"2022-11-07"},{"lineNumber":292,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":293,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":294,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":295,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":296,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":297,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":298,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder(taskToEdit).withContacts(\"Alice Pauline\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":299,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":300,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_REPEATED_CONTACT, \"Alice Pauline\") + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":301,"author":{"gitId":"yilinzyl"},"content":"                + String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":302,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":303,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":304,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":305,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":306,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":307,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":308,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":309,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":310,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":311,"author":{"gitId":"yilinzyl"},"content":"    public void execute_teammateToDeleteNotAssigned_successWithInfo() {","lastModifiedDate":"2022-11-07"},{"lineNumber":312,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":313,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-07"},{"lineNumber":314,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-07"},{"lineNumber":315,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":316,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(INDEX_FIRST_TEAMMATE.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":317,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":318,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder(taskToEdit).withContacts(\"Alice Pauline\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":319,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":320,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(AssignTaskCommand.MESSAGE_CONTACT_DOES_NOT_EXIT, \"Benson Meier\") + \"\\n\"","lastModifiedDate":"2022-11-07"},{"lineNumber":321,"author":{"gitId":"yilinzyl"},"content":"                + String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":322,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":323,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2022-11-07"},{"lineNumber":324,"author":{"gitId":"yilinzyl"},"content":"                new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":325,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":326,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":327,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(assignTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":328,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":329,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":330,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":331,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_validTaskIndexAndAddTeammatesName_assignSuccessful() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":332,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":333,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"George Best\")),","lastModifiedDate":"2022-11-06"},{"lineNumber":334,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":335,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":336,"author":{"gitId":"yilinzyl"},"content":"        CommandResult commandResult \u003d assignTaskCommand.execute(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":337,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":338,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased()),","lastModifiedDate":"2022-10-18"},{"lineNumber":339,"author":{"gitId":"yilinzyl"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-18"},{"lineNumber":340,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":341,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":342,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":343,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_validTaskAndAddTeammatesIndexes_assignSuccessful() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":344,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":345,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":346,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":347,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":348,"author":{"gitId":"yilinzyl"},"content":"        CommandResult commandResult \u003d assignTaskCommand.execute(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":349,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":350,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased()),","lastModifiedDate":"2022-10-18"},{"lineNumber":351,"author":{"gitId":"yilinzyl"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-18"},{"lineNumber":352,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":353,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":354,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":355,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_validTaskAndDeleteTeammatesIndexes_assignSuccessful() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":356,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":357,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":358,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE)), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-06"},{"lineNumber":359,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":360,"author":{"gitId":"yilinzyl"},"content":"        CommandResult commandResult \u003d assignTaskCommand.execute(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":361,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":362,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased()),","lastModifiedDate":"2022-10-18"},{"lineNumber":363,"author":{"gitId":"yilinzyl"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-18"},{"lineNumber":364,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":365,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":366,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":367,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_validTaskIndexAndDeleteTeammatesName_assignSuccessful() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":368,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand assignTaskCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":369,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":370,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(List.of(\"Alice Pauline\")));","lastModifiedDate":"2022-11-06"},{"lineNumber":371,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":372,"author":{"gitId":"yilinzyl"},"content":"        CommandResult commandResult \u003d assignTaskCommand.execute(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":373,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":374,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(String.format(AssignTaskCommand.MESSAGE_SUCCESS, INDEX_FIRST_TASK.getOneBased()),","lastModifiedDate":"2022-10-18"},{"lineNumber":375,"author":{"gitId":"yilinzyl"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-18"},{"lineNumber":376,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":377,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":378,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":379,"author":{"gitId":"yilinzyl"},"content":"    public void equals() {","lastModifiedDate":"2022-10-18"},{"lineNumber":380,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":381,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand firstCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":382,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":383,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":384,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand secondCommand \u003d new AssignTaskCommand(INDEX_SECOND_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":385,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":386,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":387,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand thirdCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":388,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE, INDEX_THIRD_TEAMMATE)),","lastModifiedDate":"2022-11-06"},{"lineNumber":389,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":390,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand fourthCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":391,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-11-06"},{"lineNumber":392,"author":{"gitId":"yilinzyl"},"content":"                \"Alex\", \"Bernice\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":393,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-18"},{"lineNumber":394,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand fifthCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":395,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-11-06"},{"lineNumber":396,"author":{"gitId":"yilinzyl"},"content":"                \"Alex\", \"Bernice\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":397,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_THIRD_TEAMMATE)), new HashSet\u003c\u003e());","lastModifiedDate":"2022-11-06"},{"lineNumber":398,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand sixthCommand \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-18"},{"lineNumber":399,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-11-06"},{"lineNumber":400,"author":{"gitId":"yilinzyl"},"content":"                \"Alex\", \"Bernice\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":401,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_THIRD_TEAMMATE)), new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-11-06"},{"lineNumber":402,"author":{"gitId":"yilinzyl"},"content":"                \"Charlotte\", \"David\")));","lastModifiedDate":"2022-10-18"},{"lineNumber":403,"author":{"gitId":"yilinzyl"},"content":"        AssignTaskCommand sixthCommandCopy \u003d new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-11-07"},{"lineNumber":404,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)), new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-11-07"},{"lineNumber":405,"author":{"gitId":"yilinzyl"},"content":"                \"Alex\", \"Bernice\")),","lastModifiedDate":"2022-11-07"},{"lineNumber":406,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_THIRD_TEAMMATE)), new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2022-11-07"},{"lineNumber":407,"author":{"gitId":"yilinzyl"},"content":"                \"Charlotte\", \"David\")));","lastModifiedDate":"2022-11-07"},{"lineNumber":408,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":409,"author":{"gitId":"yilinzyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-18"},{"lineNumber":410,"author":{"gitId":"yilinzyl"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-18"},{"lineNumber":411,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":412,"author":{"gitId":"yilinzyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-18"},{"lineNumber":413,"author":{"gitId":"yilinzyl"},"content":"        assertTrue(sixthCommand.equals(sixthCommandCopy));","lastModifiedDate":"2022-11-07"},{"lineNumber":414,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":415,"author":{"gitId":"yilinzyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":416,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-18"},{"lineNumber":417,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":418,"author":{"gitId":"yilinzyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":419,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":420,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":421,"author":{"gitId":"yilinzyl"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":422,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-18"},{"lineNumber":423,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":424,"author":{"gitId":"yilinzyl"},"content":"        // different add contacts indexes -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":425,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(firstCommand.equals(thirdCommand));","lastModifiedDate":"2022-10-18"},{"lineNumber":426,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":427,"author":{"gitId":"yilinzyl"},"content":"        // different add contacts names -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":428,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(firstCommand.equals(fourthCommand));","lastModifiedDate":"2022-10-18"},{"lineNumber":429,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":430,"author":{"gitId":"yilinzyl"},"content":"        // different delete contacts indexes -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":431,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(fourthCommand.equals(fifthCommand));","lastModifiedDate":"2022-10-18"},{"lineNumber":432,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":433,"author":{"gitId":"yilinzyl"},"content":"        // different delete contacts names -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":434,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(fifthCommand.equals(sixthCommand));","lastModifiedDate":"2022-10-18"},{"lineNumber":435,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":436,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":437,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"KIANSEONG":27,"yilinzyl":410}},{"path":"src/test/java/seedu/address/logic/commands/task/ClearTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"public class ClearTaskCommandTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandSuccess(new ClearTaskCommand(), model, ClearTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        expectedModel.setTaskPanel(new TaskPanel());","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandSuccess(new ClearTaskCommand(), model, ClearTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"wxy1203"},"content":"    public void equals() {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"        ClearTaskCommand firstCommand \u003d new ClearTaskCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"        ClearTaskCommand secondCommand \u003d new ClearTaskCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"wxy1203"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstCommand, secondCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"wxy1203"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"wxy1203"},"content":"        ClearTaskCommand firstCommandCopy \u003d new ClearTaskCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstCommand, firstCommandCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"wxy1203"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, firstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"wxy1203"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, firstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KIANSEONG":31,"wxy1203":24}},{"path":"src/test/java/seedu/address/logic/commands/task/DeadlineTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"public class DeadlineTaskCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"    public void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        Index outOfBoundTaskIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand command \u003d new DeadlineTaskCommand(outOfBoundTaskIndex, Deadline.of(LocalDate.now()));","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    public void execute_validTask_commandSuccessful() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"        Index taskIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand command \u003d new DeadlineTaskCommand(taskIndex, Deadline.of(LocalDate.now()));","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        Task updatedTask \u003d model.getFilteredTaskList().get(taskIndex.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"        assertEquals(","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"                String.format(DeadlineTaskCommand.MESSAGE_SUCCESS, updatedTask.getDeadline(), updatedTask.getTitle()),","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"        LocalDate tomorrow \u003d today.plusDays(1);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand firstCommand \u003d new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.of(today));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand secondCommand \u003d new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.of(tomorrow));","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand thirdCommand \u003d new DeadlineTaskCommand(INDEX_SECOND_TASK, Deadline.of(today));","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"        DeadlineTaskCommand firstCommandCopy \u003d new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.of(today));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"        // different assigned contacts -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstCommand.equals(thirdCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":1,"beetee17":79}},{"path":"src/test/java/seedu/address/logic/commands/task/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteTaskCommand(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"    public void execute_validTaskIndexAccepted() {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(targetIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"            taskToDelete.getTitle(),","lastModifiedDate":"2022-11-05"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"            taskToDelete.getDeadline(),","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"            taskToDelete.getProject(),","lastModifiedDate":"2022-11-05"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"            taskToDelete.getAssignedContacts());","lastModifiedDate":"2022-11-05"},{"lineNumber":43,"author":{"gitId":"amresh2000"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"                new AddressBook(model.getAddressBook()), new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"    public void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"KIANSEONG":34,"amresh2000":44}},{"path":"src/test/java/seedu/address/logic/commands/task/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"amresh2000"},"content":"    void execute_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"amresh2000"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"amresh2000"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder()","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"                .withCompleted(false)","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"                .withContacts(\"Alice Pauline\")","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"                .withDeadline(\"?\")","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"                .build();","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"amresh2000"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"amresh2000"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"amresh2000"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"amresh2000"},"content":"                new AddressBook(model.getAddressBook()), new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"amresh2000"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    public void execute_invalidTeammateIndexUnfilteredList_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"amresh2000"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"amresh2000"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"amresh2000"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"    public void execute_taskNameDuplicated_failure() {","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-11-07"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder().withTitle(\"Assign contacts to task\").build();","lastModifiedDate":"2022-11-07"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":71,"author":{"gitId":"yilinzyl"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-07"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"    public void execute_taskNameUnchanged_success() {","lastModifiedDate":"2022-11-07"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-11-07"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"        Task taskToEdit \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-11-07"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        Task editedTask \u003d new TaskBuilder()","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"                .withTitle(taskToEdit.getTitle().toString())","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"                .withContacts(\"Alice Pauline\")","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"                .build();","lastModifiedDate":"2022-11-07"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"yilinzyl"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-07"},{"lineNumber":86,"author":{"gitId":"yilinzyl"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":87,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":88,"author":{"gitId":"yilinzyl"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-11-07"},{"lineNumber":89,"author":{"gitId":"yilinzyl"},"content":"                new AddressBook(model.getAddressBook()), new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-11-07"},{"lineNumber":90,"author":{"gitId":"yilinzyl"},"content":"        expectedModel.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-11-07"},{"lineNumber":91,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":92,"author":{"gitId":"yilinzyl"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-07"},{"lineNumber":93,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":95,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":96,"author":{"gitId":"amresh2000"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, DESC_HOMEWORK);","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"amresh2000"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_HOMEWORK);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"amresh2000"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"amresh2000"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"amresh2000"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"amresh2000"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"amresh2000"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"amresh2000"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"amresh2000"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_TEAMMATE, DESC_HOMEWORK)));","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"amresh2000"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_TEAMMATE, DESC_WORKSHOP)));","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"KIANSEONG":18,"amresh2000":67,"yilinzyl":34}},{"path":"src/test/java/seedu/address/logic/commands/task/ListTasksCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.commands.CommandTestUtil.hideAllTasks;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTeammateAtIndex;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.AssignedToContactsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.ContainsProjectsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.DeadlineIsAfterPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.DeadlineIsBeforePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.TitleContainsKeywordPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTasksCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"public class ListTasksCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"    private Model model;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        showTeammateAtIndex(model, INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"beetee17"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTeammateList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cIndex\u003e teammateIndexes \u003d new HashSet\u003c\u003e(List.of(outOfBoundIndex));","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"                        teammateIndexes","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_TEAMMATE_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"beetee17"},"content":"    public void execute_keyword_singleResult() {","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e filter \u003d Model.PREDICATE_INCOMPLETE_TASKS.and(new TitleContainsKeywordPredicate(\"ass\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(filter);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"beetee17"},"content":"                        \"ass\",","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"beetee17"},"content":"    public void execute_keyword_noResults() {","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e filter \u003d Model.PREDICATE_INCOMPLETE_TASKS.and(new TitleContainsKeywordPredicate(\"test\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(filter);","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"beetee17"},"content":"                        \"test\",","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"beetee17"},"content":"    public void execute_afterDeadline() {","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e filter \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"beetee17"},"content":"                new DeadlineIsAfterPredicate(Deadline.of(LocalDate.of(2022, 9, 20)));","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(filter);","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"beetee17"},"content":"                        List.of(ListTasksCommand.ALL_FLAG),","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"beetee17"},"content":"                        Optional.of(Deadline.of(LocalDate.of(2022, 9, 20))),","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"beetee17"},"content":"    public void execute_beforeDeadline() {","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e filter \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"beetee17"},"content":"                new DeadlineIsBeforePredicate(Deadline.of(LocalDate.of(2022, 9, 20)));","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(filter);","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"beetee17"},"content":"                        List.of(ListTasksCommand.ALL_FLAG),","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"beetee17"},"content":"                        Optional.of(Deadline.of(LocalDate.of(2022, 9, 20))),","lastModifiedDate":"2022-10-20"},{"lineNumber":204,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"beetee17"},"content":"    public void execute_contact_singleResults() throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cIndex\u003e teammateIndexes \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE));","lastModifiedDate":"2022-11-06"},{"lineNumber":220,"author":{"gitId":"KIANSEONG"},"content":"        AssignedToContactsPredicate filter \u003d new AssignedToContactsPredicate(expectedModel, teammateIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":221,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":222,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(filter);","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":227,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":228,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":230,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":231,"author":{"gitId":"KIANSEONG"},"content":"                        teammateIndexes","lastModifiedDate":"2022-11-06"},{"lineNumber":232,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-14"},{"lineNumber":237,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-14"},{"lineNumber":239,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":240,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":241,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":242,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":243,"author":{"gitId":"beetee17"},"content":"    public void execute_keywordAndContact_noResults() throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":244,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":245,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cIndex\u003e teammateIndexes \u003d new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE));","lastModifiedDate":"2022-11-06"},{"lineNumber":246,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":247,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e basePredicate \u003d Model.PREDICATE_INCOMPLETE_TASKS.and(new TitleContainsKeywordPredicate(\"ass\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"beetee17"},"content":"        AssignedToContactsPredicate assignedToContactsPredicate \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":249,"author":{"gitId":"KIANSEONG"},"content":"                new AssignedToContactsPredicate(expectedModel, teammateIndexes);","lastModifiedDate":"2022-11-06"},{"lineNumber":250,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(basePredicate.and(assignedToContactsPredicate));","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"beetee17"},"content":"                        \"ass\",","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"KIANSEONG"},"content":"                        teammateIndexes","lastModifiedDate":"2022-11-06"},{"lineNumber":261,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-20"},{"lineNumber":262,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":263,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":264,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-20"},{"lineNumber":265,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-14"},{"lineNumber":266,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":267,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-14"},{"lineNumber":268,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":269,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":270,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":271,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"beetee17"},"content":"    public void execute_keywordAndProject_noResults() throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":273,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":274,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e basePredicate \u003d Model.PREDICATE_INCOMPLETE_TASKS.and(new TitleContainsKeywordPredicate(\"ass\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":275,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":276,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e projectNames \u003d List.of(\"Test Project\");","lastModifiedDate":"2022-10-25"},{"lineNumber":277,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate projectsPredicate \u003d new ContainsProjectsPredicate(projectNames);","lastModifiedDate":"2022-10-25"},{"lineNumber":278,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":279,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(basePredicate.and(projectsPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":280,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":281,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":282,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-25"},{"lineNumber":283,"author":{"gitId":"beetee17"},"content":"                        \"ass\",","lastModifiedDate":"2022-10-25"},{"lineNumber":284,"author":{"gitId":"beetee17"},"content":"                        projectNames,","lastModifiedDate":"2022-10-25"},{"lineNumber":285,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":286,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-25"},{"lineNumber":287,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-25"},{"lineNumber":288,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-25"},{"lineNumber":289,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-25"},{"lineNumber":290,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":291,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-25"},{"lineNumber":292,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-25"},{"lineNumber":293,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-25"},{"lineNumber":294,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":295,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-25"},{"lineNumber":296,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-25"},{"lineNumber":297,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":298,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":299,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":300,"author":{"gitId":"beetee17"},"content":"    public void execute_multipleProjects_noResults() throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":301,"author":{"gitId":"beetee17"},"content":"        hideAllTasks(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":302,"author":{"gitId":"beetee17"},"content":"        Predicate\u003cTask\u003e basePredicate \u003d Model.PREDICATE_INCOMPLETE_TASKS;","lastModifiedDate":"2022-10-25"},{"lineNumber":303,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":304,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e projectNames \u003d List.of(\"Test Project\", \"Another Project\");","lastModifiedDate":"2022-10-25"},{"lineNumber":305,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate projectsPredicate \u003d new ContainsProjectsPredicate(projectNames);","lastModifiedDate":"2022-10-25"},{"lineNumber":306,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":307,"author":{"gitId":"beetee17"},"content":"        expectedModel.updateFilteredTaskList(basePredicate.and(projectsPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":308,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":309,"author":{"gitId":"beetee17"},"content":"        ListTasksCommand command \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":310,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-25"},{"lineNumber":311,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-25"},{"lineNumber":312,"author":{"gitId":"beetee17"},"content":"                        projectNames,","lastModifiedDate":"2022-10-25"},{"lineNumber":313,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":314,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-25"},{"lineNumber":315,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-25"},{"lineNumber":316,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-25"},{"lineNumber":317,"author":{"gitId":"beetee17"},"content":"                );","lastModifiedDate":"2022-10-25"},{"lineNumber":318,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":319,"author":{"gitId":"beetee17"},"content":"        assertCommandSuccess(","lastModifiedDate":"2022-10-25"},{"lineNumber":320,"author":{"gitId":"beetee17"},"content":"                command,","lastModifiedDate":"2022-10-25"},{"lineNumber":321,"author":{"gitId":"beetee17"},"content":"                model,","lastModifiedDate":"2022-10-25"},{"lineNumber":322,"author":{"gitId":"KIANSEONG"},"content":"                command.getSuccessMessage(),","lastModifiedDate":"2022-10-26"},{"lineNumber":323,"author":{"gitId":"beetee17"},"content":"                expectedModel","lastModifiedDate":"2022-10-25"},{"lineNumber":324,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-25"},{"lineNumber":325,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":326,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"KIANSEONG":26,"beetee17":300}},{"path":"src/test/java/seedu/address/logic/commands/task/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":" * Contains integration tests (interaction with the Model) and unit tests for MarkTaskCommand.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"wxy1203"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"yilinzyl"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"wxy1203"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        MarkTaskCommand firstCommand \u003d new MarkTaskCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        MarkTaskCommand secondCommand \u003d new MarkTaskCommand(INDEX_SECOND_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"wxy1203"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"amresh2000"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"wxy1203"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        MarkTaskCommand firstCommandCopy \u003d new MarkTaskCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"amresh2000"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"wxy1203"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"amresh2000"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"wxy1203"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"amresh2000"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"amresh2000"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"KIANSEONG":8,"amresh2000":6,"wxy1203":39,"yilinzyl":2}},{"path":"src/test/java/seedu/address/logic/commands/task/ProjectTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"amresh2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"amresh2000"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"public class ProjectTaskCommandTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"    public void execute_valid() {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        ProjectTaskCommand projectTaskCommand \u003d new ProjectTaskCommand();","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d ProjectTaskCommand.MESSAGE_SUCCESS + \"\\n1. CS2103T\";","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"amresh2000"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"amresh2000"},"content":"                new AddressBook(model.getAddressBook()), new TaskPanel(model.getTaskPanel()), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        CommandResult commandResult \u003d projectTaskCommand.execute(expectedModel);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"        assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"KIANSEONG":7,"amresh2000":24}},{"path":"src/test/java/seedu/address/logic/commands/task/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"wxy1203"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"wxy1203"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":" * Contains integration tests (interaction with the Model) and unit tests for MarkTaskCommand.","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskPanel(), new UserPrefs());","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"wxy1203"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"wxy1203"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"wxy1203"},"content":"        assertCommandFailure(unmarkTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"wxy1203"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        UnmarkTaskCommand firstCommand \u003d new UnmarkTaskCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        UnmarkTaskCommand secondCommand \u003d new UnmarkTaskCommand(INDEX_SECOND_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"wxy1203"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstCommand, firstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"wxy1203"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        UnmarkTaskCommand firstCommandCopy \u003d new UnmarkTaskCommand(INDEX_FIRST_TEAMMATE);","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstCommand, firstCommandCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"wxy1203"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, firstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"wxy1203"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, firstCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(firstCommand, secondCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"KIANSEONG":15,"wxy1203":39}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.AMY;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        Teammate expectedTeammate \u003d new TeammateBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        Teammate expectedTeammateMultipleTags \u003d new TeammateBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedTeammateMultipleTags));","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        Teammate expectedTeammate \u003d new TeammateBuilder(AMY).withTags().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"                new AddCommand(expectedTeammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KIANSEONG":20,"-":122}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.EditCommand.EditTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.ContainsTagPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTeammateDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TeammateUtil.getAddCommand(teammate));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(new AddCommand(teammate), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TEAMMATE.getOneBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_TEAMMATE), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder(teammate).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"                + INDEX_FIRST_TEAMMATE.getOneBased() + \" \" + TeammateUtil.getEditTeammateDescriptorDetails(descriptor));","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_TEAMMATE, descriptor), command);","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2022-11-07"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"                        new ContainsTagPredicate(new ArrayList\u003c\u003e())), command);","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"KIANSEONG":18,"-":82,"yilinzyl":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_TEAMMATE));","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"KIANSEONG":3,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.EditCommand.EditTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTeammateDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Teammate} being edited,","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand.EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand.EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_THIRD_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"        EditCommand.EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_THIRD_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"KIANSEONG"},"content":"        EditTeammateDescriptor descriptor \u003d new EditTeammateDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"KIANSEONG":28,"-":183}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"yilinzyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.ContainsTagPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"yilinzyl"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"yilinzyl"},"content":"                        new ContainsTagPredicate(new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"KIANSEONG":2,"-":32,"yilinzyl":3}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(INDEX_FIRST_TEAMMATE, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(INDEX_FIRST_TEAMMATE, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2022-11-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2022-11-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-11-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"KIANSEONG":12,"-":184}},{"path":"src/test/java/seedu/address/logic/parser/TaskPanelParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.ListTasksCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"public class TaskPanelParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private final TaskPanelParser parser \u003d new TaskPanelParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_addTask() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        Task task \u003d new Task(new Title(\"Test\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        AddTaskCommand command \u003d (AddTaskCommand) parser.parse(TaskUtil.getAddTaskCommand(task));","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(new AddTaskCommand(task), command);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_listTasks() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(parser.parse(ListTasksCommand.COMMAND_WORD_FULL) instanceof ListTasksCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public void parseC_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"            -\u003e parser.parse(\"\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parse(\"task unknownCommand\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":41,"beetee17":4}},{"path":"src/test/java/seedu/address/logic/parser/TaskParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"public class TaskParserUtilTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    private static final String INVALID_TITLE \u003d \" \";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    private static final String VALID_TITLE \u003d \"Task One\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskParserUtil.parseTitle(null));","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(ParseException.class, () -\u003e TaskParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedTitle, TaskParserUtil.parseTitle(VALID_TITLE));","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedTitle, TaskParserUtil.parseTitle(titleWithWhitespace));","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":41}},{"path":"src/test/java/seedu/address/logic/parser/task/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_TITLE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    private final AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"        Task expectedTask \u003d new TaskBuilder(WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        // title present","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, VALID_TITLE_WORKSHOP, new AddTaskCommand(expectedTask));","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        // missing title","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":34}},{"path":"src/test/java/seedu/address/logic/parser/task/AssignTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yilinzyl"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"yilinzyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"yilinzyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"yilinzyl"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.logic.commands.task.AssignTaskCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"yilinzyl"},"content":"public class AssignTaskCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"yilinzyl"},"content":"    private AssignTaskCommandParser parser \u003d new AssignTaskCommandParser();","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"yilinzyl"},"content":"    public void parse_validArgs_returnsAssignTaskCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"yilinzyl"},"content":"        assertParseSuccess(parser, \"1\", new AssignTaskCommand(INDEX_FIRST_TASK, new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"yilinzyl"},"content":"        assertParseSuccess(parser, \"1 +@1 +@2\", new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)),","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"yilinzyl"},"content":"        assertParseSuccess(parser, \"1 +@Alex +@Bernice\", new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(Arrays.asList(\"Bernice\", \"Alex\")), new HashSet\u003c\u003e(),","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"yilinzyl"},"content":"        assertParseSuccess(parser, \"1 -@1 -@2\", new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(),","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE)),","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"        assertParseSuccess(parser, \"1 -@Alex -@Bernice\", new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"                new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e(), new HashSet\u003c\u003e(Arrays.asList(\"Bernice\", \"Alex\"))));","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"        assertParseSuccess(parser, \"1 +@1 +@Bernice -@2 -@John\", new AssignTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE)),","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(\"Bernice\")),","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(INDEX_SECOND_TEAMMATE)),","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"                new HashSet\u003c\u003e(List.of(\"John\"))));","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"        // no task index specified","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"                AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"        // invalid task index","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"                AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"                AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"        // invalid command","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"yilinzyl"},"content":"        assertParseFailure(parser, \"1 c/0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"                AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        // invalid teammate add index","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"        assertParseFailure(parser, \"1 +@0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"                AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        // invalid teammate delete index","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"        assertParseFailure(parser, \"1 -@0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"                AssignTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"KIANSEONG":15,"yilinzyl":65}},{"path":"src/test/java/seedu/address/logic/parser/task/DeadlineTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.DeadlineTaskCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"public class DeadlineTaskCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    private final DeadlineTaskCommandParser parser \u003d new DeadlineTaskCommandParser();","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_validArgs_returnsDeadlineTaskCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        LocalDate date \u003d LocalDate.of(2023, 9, 19);","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"                \"1 by/ 19 September 2023\",","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"                new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.of(date))","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"                \"1 by/ today\",","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"                new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.of(today))","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"        LocalDate tomorrow \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"                \"1 by/ tomorrow\",","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"                new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.of(tomorrow))","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"                \"1 by/ ?\",","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"                new DeadlineTaskCommand(INDEX_FIRST_TASK, Deadline.UNSPECIFIED)","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"                \"1 by/ blahblah\",","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"                Deadline.MESSAGE_PARSE_FAILURE","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"        // no task index specified","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"                DeadlineTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"        // invalid task index","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"                DeadlineTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"                DeadlineTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":5,"beetee17":65}},{"path":"src/test/java/seedu/address/logic/parser/task/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.DeleteTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    private final DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_validArgs_returnsDeleteTaskCommand() {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":26}},{"path":"src/test/java/seedu/address/logic/parser/task/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.DEADLINE_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.DEADLINE_DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.INVALID_PROJECT_DESC;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.PROJECT_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.PROJECT_DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.TITLE_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_DEADLINE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_PROJECT_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_PROJECT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_TITLE_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.EditTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    private final EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        // no index specified","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, VALID_TITLE_HOMEWORK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        // no field specified","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        // no index and no field specified","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        // negative index","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"-5\" + TITLE_DESC_HOMEWORK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        // zero index","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"0\" + TITLE_DESC_HOMEWORK, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        // invalid title","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC, Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        // invalid deadline","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC, Deadline.MESSAGE_PARSE_FAILURE);","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        // invalid project","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROJECT_DESC, Project.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        // invalid deadline followed by valid project","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC + PROJECT_DESC_HOMEWORK,","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"                Deadline.MESSAGE_PARSE_FAILURE);","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        // valid project followed by invalid project. The test case for invalid project followed by valid project","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\" + DEADLINE_DESC_WORKSHOP + INVALID_DEADLINE_DESC,","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"                Deadline.MESSAGE_PARSE_FAILURE);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC + INVALID_PROJECT_DESC + VALID_DEADLINE_HOMEWORK,","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_WORKSHOP","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"            + PROJECT_DESC_HOMEWORK + TITLE_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_HOMEWORK)","lastModifiedDate":"2022-11-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"            .withDeadline(VALID_DEADLINE_WORKSHOP).withProject(VALID_PROJECT_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_WORKSHOP + PROJECT_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"            .withDeadline(VALID_DEADLINE_WORKSHOP).withProject(VALID_PROJECT_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"        // title","lastModifiedDate":"2022-11-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        // deadline","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        // project","lastModifiedDate":"2022-11-06"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"        userInput \u003d targetIndex.getOneBased() + PROJECT_DESC_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withProject(VALID_PROJECT_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_HOMEWORK + PROJECT_DESC_HOMEWORK","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"            + DEADLINE_DESC_HOMEWORK + PROJECT_DESC_HOMEWORK + DEADLINE_DESC_WORKSHOP + PROJECT_DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_WORKSHOP)","lastModifiedDate":"2022-11-06"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"            .withProject(VALID_PROJECT_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"        // no other valid values specified","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DEADLINE_DESC + DEADLINE_DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"        // other valid values specified","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"        userInput \u003d targetIndex.getOneBased() + PROJECT_DESC_WORKSHOP + INVALID_DEADLINE_DESC + DEADLINE_DESC_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_WORKSHOP)","lastModifiedDate":"2022-11-06"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"                .withProject(VALID_PROJECT_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-11-06"},{"lineNumber":166,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":167,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":167}},{"path":"src/test/java/seedu/address/logic/parser/task/ListTasksCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.commands.task.ListTasksCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"public class ListTasksCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private final ListTasksCommandParser parser \u003d new ListTasksCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    public void parse_validArgs_returnsListTasksCommand() {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"                \"  \",","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"                        )","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"                \" hi\",","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"                        \"hi\",","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"                String.format(\" %s1\", CliSyntax.PREFIX_CONTACT),","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"                        new HashSet\u003c\u003e(List.of(INDEX_FIRST_TEAMMATE))","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"                String.format(\" hi %s1 %s2\", CliSyntax.PREFIX_CONTACT, CliSyntax.PREFIX_CONTACT),","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"                        \"hi\",","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"                        new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE))","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"    public void parse_validArgsWithFlags() {","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"        String command1 \u003d String.format(\" hi %s1 %s2 -%s\",","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"                CliSyntax.PREFIX_CONTACT,","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"                CliSyntax.PREFIX_CONTACT,","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"beetee17"},"content":"                ListTasksCommand.COMPLETED_FLAG);","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"beetee17"},"content":"                command1,","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"beetee17"},"content":"                        \"hi\",","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"beetee17"},"content":"                        List.of(ListTasksCommand.COMPLETED_FLAG),","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"                        new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE))","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"beetee17"},"content":"        String command2 \u003d String.format(\" hi %s1 %s2 -%s\",","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"beetee17"},"content":"                CliSyntax.PREFIX_CONTACT,","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"beetee17"},"content":"                CliSyntax.PREFIX_CONTACT,","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"beetee17"},"content":"                ListTasksCommand.ALL_FLAG);","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"beetee17"},"content":"                command2,","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"beetee17"},"content":"                        \"hi\",","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"beetee17"},"content":"                        List.of(ListTasksCommand.ALL_FLAG),","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"                        new HashSet\u003c\u003e(Arrays.asList(INDEX_FIRST_TEAMMATE, INDEX_SECOND_TEAMMATE))","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"beetee17"},"content":"    public void parse_nlp_deadlines() {","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"beetee17"},"content":"                String.format(\" %s tomorrow\", CliSyntax.PREFIX_BEFORE),","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"beetee17"},"content":"                        Optional.of(Deadline.of(LocalDate.now().plusDays(1))),","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"beetee17"},"content":"        assertParseSuccess(","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"beetee17"},"content":"                parser,","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"beetee17"},"content":"                String.format(\" %s today\", CliSyntax.PREFIX_AFTER),","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"beetee17"},"content":"                new ListTasksCommand(","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"beetee17"},"content":"                        \"\",","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"beetee17"},"content":"                        List.of(),","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"beetee17"},"content":"                        Optional.empty(),","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"beetee17"},"content":"                        Optional.of(Deadline.of(LocalDate.now())),","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"beetee17"},"content":"                        new HashSet\u003c\u003e()","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":7,"beetee17":137}},{"path":"src/test/java/seedu/address/logic/parser/task/MarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wxy1203"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"wxy1203"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"wxy1203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"wxy1203"},"content":"import seedu.address.logic.commands.task.MarkTaskCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"wxy1203"},"content":"public class MarkTaskCommandParserTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    private final MarkTaskCommandParser parser \u003d new MarkTaskCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_validArgs_returnsMarkTaskCommand() {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, \"1\", new MarkTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"wxy1203"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"wxy1203"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"wxy1203"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"wxy1203"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"wxy1203"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"KIANSEONG":6,"wxy1203":20}},{"path":"src/test/java/seedu/address/logic/parser/task/UnmarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TEAMMATE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.UnmarkTaskCommand;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"public class UnmarkTaskCommandParserTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    private final UnmarkTaskCommandParser parser \u003d new UnmarkTaskCommandParser();","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_validArgs_returnsUnmarkTaskCommand() {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkTaskCommand(INDEX_FIRST_TEAMMATE));","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":26}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.ALICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.DuplicateTeammateException;","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTeammateList());","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    public void resetData_withDuplicateTeammates_throwsDuplicateTeammateException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        // Two Teammates with the same identity fields","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedAlice \u003d new TeammateBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e newTeammates \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newTeammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTeammateException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_nullTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTeammate(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_teammateNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(addressBook.hasTeammate(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_teammateInAddressBook_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        addressBook.addTeammate(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(addressBook.hasTeammate(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_teammateWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        addressBook.addTeammate(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedAlice \u003d new TeammateBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(addressBook.hasTeammate(editedAlice));","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    public void getTeammateList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTeammateList().remove(0));","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"     * A stub ReadOnlyAddressBook whose Teammates list can violate interface constraints.","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        private final ObservableList\u003cTeammate\u003e teammates \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-11-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        AddressBookStub(Collection\u003cTeammate\u003e teammates) {","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"            this.teammates.setAll(teammates);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        public ObservableList\u003cTeammate\u003e getTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"            return teammates;","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"KIANSEONG":31,"-":71}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TEAMMATES;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_TWO;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.ALICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.BENSON;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskPanelBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(new TaskPanel(), new TaskPanel(modelManager.getTaskPanel()));","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    // TODO: Copy next 2 tests for TaskPanel","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_nullTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTeammate(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_teammateNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(modelManager.hasTeammate(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTeammate_teammateInAddressBook_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        modelManager.addTeammate(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(modelManager.hasTeammate(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_taskNotInTaskPanel_returnsFalse() {","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(modelManager.hasTask(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_taskInTaskPanel_returnsTrue() {","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        modelManager.addTask(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(modelManager.hasTask(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"    public void getFilteredTeammateList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTeammateList().remove(0));","lastModifiedDate":"2022-11-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withTeammate(ALICE).withTeammate(BENSON).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel taskPanel \u003d new TaskPanelBuilder().withTask(TASK_ONE).withTask(TASK_TWO).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel differentTaskPanel \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        modelManager \u003d new ModelManager(addressBook, taskPanel, userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, taskPanel, userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, differentTaskPanel, userPrefs));","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"        modelManager.updateFilteredTeammateList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, taskPanel, userPrefs));","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"        modelManager.updateFilteredTeammateList(PREDICATE_SHOW_ALL_TEAMMATES);","lastModifiedDate":"2022-11-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, taskPanel, differentUserPrefs));","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"KIANSEONG":41,"-":116}},{"path":"src/test/java/seedu/address/model/TaskPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"public class TaskPanelTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    private final TaskPanel taskPanel \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(Collections.emptyList(), taskPanel.getTaskList());","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskPanel.resetData(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    public void resetData_withValidReadOnlyTaskPanel_replacesData() {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel newData \u003d getTypicalTaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel.resetData(newData);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(newData, taskPanel);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: Update","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        Task editedTaskOne \u003d new TaskBuilder(TASK_ONE).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(TASK_ONE, editedTaskOne);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanelStub newData \u003d new TaskPanelStub(newTasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskPanel.resetData(newData));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskPanel.hasTask(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_taskNotInTaskPanel_returnsFalse() {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(taskPanel.hasTask(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_taskInTaskPanel_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel.addTask(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(taskPanel.hasTask(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskPanel_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: Update task","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel.addTask(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        Task editedTaskOne \u003d new TaskBuilder(TASK_ONE).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(taskPanel.hasTask(editedTaskOne));","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskPanel.getTaskList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"     * A stub ReadOnlyTaskPanel whose tasks list can violate interface constraints.","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    private static class TaskPanelStub implements ReadOnlyTaskPanel {","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanelStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"            return tasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":100}},{"path":"src/test/java/seedu/address/model/task/AssignedToContactsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"public class AssignedToContactsPredicateTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"        List\u003cContact\u003e firstPredicateContact \u003d List.of(new Contact(\"first\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"        List\u003cContact\u003e secondPredicateContact \u003d List.of(new Contact(\"second\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"        AssignedToContactsPredicate firstPredicate \u003d new AssignedToContactsPredicate(firstPredicateContact);","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"        AssignedToContactsPredicate secondPredicate \u003d new AssignedToContactsPredicate(secondPredicateContact);","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"        AssignedToContactsPredicate firstPredicateCopy \u003d new AssignedToContactsPredicate(firstPredicateContact);","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"        List\u003cContact\u003e singleContact \u003d List.of(new Contact(\"Thiago Alcantara\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"        // Matching all","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"        AssignedToContactsPredicate predicate \u003d new AssignedToContactsPredicate(singleContact);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Test\").withContacts(\"Thiago Alcantara\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"        // Subset","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"        assertTrue(","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"                predicate.test(","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"                        new TaskBuilder().withTitle(\"Test\").withContacts(\"Thiago Alcantara\", \"Bobby Dazzler\").build()","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"                )","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"        List\u003cContact\u003e singleContact \u003d List.of(new Contact(\"Thiago Alcantara\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"        // Matching None","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"        AssignedToContactsPredicate predicate \u003d new AssignedToContactsPredicate(singleContact);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Test\").withContacts(\"Mo Salah\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":1,"beetee17":63}},{"path":"src/test/java/seedu/address/model/task/ContainsProjectsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"public class ContainsProjectsPredicateTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e firstPredicateContact \u003d List.of(\"first\");","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e secondPredicateContact \u003d List.of(\"second\");","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate firstPredicate \u003d new ContainsProjectsPredicate(firstPredicateContact);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate secondPredicate \u003d new ContainsProjectsPredicate(secondPredicateContact);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate firstPredicateCopy \u003d new ContainsProjectsPredicate(firstPredicateContact);","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"    public void test_containsProject_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e singleProject \u003d List.of(\"Test Project\");","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate predicate \u003d new ContainsProjectsPredicate(singleProject);","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        Task testTask \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"                new TaskBuilder().withTitle(\"Test\").withProject(\"Test Project\").build();","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"        assertTrue(predicate.test(testTask));","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e multipleProject \u003d List.of(\"Test Project\", \"Another Project\");","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate multiPredicate \u003d new ContainsProjectsPredicate(multipleProject);","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(multiPredicate.test(testTask));","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"    public void test_doesNotContainProject_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"        List\u003cString\u003e singleProject \u003d List.of(\"Test Project\");","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"        // Matching None","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"beetee17"},"content":"        ContainsProjectsPredicate predicate \u003d new ContainsProjectsPredicate(singleProject);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"beetee17"},"content":"        assertFalse(","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"beetee17"},"content":"                predicate.test(new TaskBuilder().withTitle(\"Test\").withProject(\"Another Project\").build())","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KIANSEONG":2,"beetee17":64}},{"path":"src/test/java/seedu/address/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_invalidDateString_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Deadline.of(\" \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Deadline.of(\"2022-10-10\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Deadline.of(\"10/10/2022\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"    public void formatForUi_withinCurrentYear_shouldNotDisplayYear() {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        LocalDate withinYear \u003d LocalDate.now();","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"        assertEquals(","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"                Deadline.of(withinYear).formatForUi(),","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"                withinYear.format(Deadline.READABLE_FORMATTER_WITHOUT_YEAR)","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"    public void formatForUi_beforeCurrentYear_shouldDisplayYear() {","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"        LocalDate beforeYear \u003d LocalDate.now().minusYears(1);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"        assertEquals(Deadline.of(beforeYear).formatForUi(), beforeYear.format(Deadline.READABLE_FORMATTER_WITH_YEAR));","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"    public void formatForUi_afterCurrentYear_shouldDisplayYear() {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"        LocalDate afterYear \u003d LocalDate.now().plusYears(1);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"        assertEquals(Deadline.of(afterYear).formatForUi(), afterYear.format(Deadline.READABLE_FORMATTER_WITH_YEAR));","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":5,"beetee17":32}},{"path":"src/test/java/seedu/address/model/task/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-07"},{"lineNumber":4,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-07"},{"lineNumber":5,"author":{"gitId":"yilinzyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"public class ProjectTest {","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Project(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_invalidProject_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"        String invalidProject \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Project(invalidProject));","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public void isValidProject() {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        // null title","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e Project.isValidProjectName(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        // invalid titles","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(Project.isValidProjectName(\"\")); // empty string","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(Project.isValidProjectName(\" \")); // spaces only","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(Project.isValidProjectName(\"*\")); // invalid character","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        // valid titles","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(Project.isValidProjectName(\"CS2103T\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(Project.isValidProjectName(\"A\")); // one character","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(Project.isValidProjectName(\"This is a very long project name\")); // long project name","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":39,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":40,"author":{"gitId":"yilinzyl"},"content":"    public void validToString() {","lastModifiedDate":"2022-11-07"},{"lineNumber":41,"author":{"gitId":"yilinzyl"},"content":"        assertTrue(new Project(\"project\").toString().equals(\"project\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":42,"author":{"gitId":"yilinzyl"},"content":"        assertTrue(Project.UNSPECIFIED.toString().equals(Project.UNSPECIFIED_PROJECT_IDENTIFIER));","lastModifiedDate":"2022-11-07"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":44,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":45,"author":{"gitId":"yilinzyl"},"content":"    @Test","lastModifiedDate":"2022-11-07"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"    public void equals() {","lastModifiedDate":"2022-11-07"},{"lineNumber":47,"author":{"gitId":"yilinzyl"},"content":"        Project p1 \u003d new Project(\"Project\");","lastModifiedDate":"2022-11-07"},{"lineNumber":48,"author":{"gitId":"yilinzyl"},"content":"        Project p2 \u003d new Project(\"project\");","lastModifiedDate":"2022-11-07"},{"lineNumber":49,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":50,"author":{"gitId":"yilinzyl"},"content":"        // same object -\u003e return true","lastModifiedDate":"2022-11-07"},{"lineNumber":51,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(p1, p1);","lastModifiedDate":"2022-11-07"},{"lineNumber":52,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(p1.hashCode(), p1.hashCode());","lastModifiedDate":"2022-11-07"},{"lineNumber":53,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":54,"author":{"gitId":"yilinzyl"},"content":"        // same title -\u003e return true","lastModifiedDate":"2022-11-07"},{"lineNumber":55,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(p1, p2);","lastModifiedDate":"2022-11-07"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"        assertEquals(p1.hashCode(), p2.hashCode());","lastModifiedDate":"2022-11-07"},{"lineNumber":57,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-11-07"},{"lineNumber":58,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KIANSEONG":35,"yilinzyl":24}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_CONTACT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_DEADLINE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_PROJECT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_TITLE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_TWO;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(TASK_ONE.isSameTask(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(TASK_ONE.isSameTask(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        // same title, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"        Task editedTaskOne \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"                new TaskBuilder(TASK_ONE)","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"                        .withContacts(\"Kloppo\")","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"                        .withDeadline(\"2 January 2023\")","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"                        .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(TASK_ONE.isSameTask(editedTaskOne));","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        editedTaskOne \u003d new TaskBuilder(TASK_ONE).withTitle(VALID_TITLE_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(TASK_ONE.isSameTask(editedTaskOne));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        // title differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        Task editedTaskTwo \u003d new TaskBuilder(TASK_TWO).withTitle(VALID_TITLE_WORKSHOP.toLowerCase()).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(TASK_TWO.isSameTask(editedTaskTwo));","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        // title has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        String titleWithTrailingSpaces \u003d VALID_TITLE_WORKSHOP + \" \";","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        editedTaskTwo \u003d new TaskBuilder(TASK_TWO).withTitle(titleWithTrailingSpaces).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(TASK_TWO.isSameTask(editedTaskTwo));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        Task taskOneCopy \u003d new TaskBuilder(TASK_ONE).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(TASK_ONE, taskOneCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(TASK_ONE, TASK_ONE);","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(TASK_ONE.hashCode(), TASK_ONE.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, TASK_ONE);","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(5, TASK_ONE);","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(TASK_ONE, TASK_TWO);","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        Task editedTaskOne \u003d new TaskBuilder(TASK_ONE).withTitle(VALID_TITLE_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(TASK_ONE, editedTaskOne);","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        // different status -\u003e return false","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        editedTaskOne \u003d new TaskBuilder(TASK_ONE).withCompleted(true).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(TASK_ONE, editedTaskOne);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        editedTaskOne \u003d new TaskBuilder(TASK_ONE).withDeadline(VALID_DEADLINE_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(TASK_ONE, editedTaskOne);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        editedTaskOne \u003d new TaskBuilder(TASK_ONE).withProject(VALID_PROJECT_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(TASK_ONE, editedTaskOne);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        // different assigned contacts -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        editedTaskOne \u003d new TaskBuilder(TASK_ONE).withContacts(VALID_CONTACT_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(TASK_ONE, editedTaskOne);","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":85,"beetee17":4}},{"path":"src/test/java/seedu/address/model/task/TitleContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beetee17"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"beetee17"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"beetee17"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"beetee17"},"content":"public class TitleContainsKeywordPredicateTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"beetee17"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"beetee17"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"beetee17"},"content":"        TitleContainsKeywordPredicate firstPredicate \u003d new TitleContainsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"beetee17"},"content":"        TitleContainsKeywordPredicate secondPredicate \u003d new TitleContainsKeywordPredicate(secondPredicateKeyword);","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"beetee17"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"beetee17"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"        TitleContainsKeywordPredicate firstPredicateCopy \u003d new TitleContainsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"beetee17"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"        // Matching keyword","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"        TitleContainsKeywordPredicate predicate \u003d new TitleContainsKeywordPredicate(\"Thiag\");","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Thiago Alcantara\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"        predicate \u003d new TitleContainsKeywordPredicate(\"tHiAg\");","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"beetee17"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Thiago Alcantara\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"beetee17"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"beetee17"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"beetee17"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        TitleContainsKeywordPredicate predicate \u003d new TitleContainsKeywordPredicate(\"Ali\");","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Bobby Dazzler\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"beetee17"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"KIANSEONG":1,"beetee17":55}},{"path":"src/test/java/seedu/address/model/task/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"public class TitleTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        Title t1 \u003d new Title(\"Test\");","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        Title t2 \u003d new Title(\"Test\");","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e return true","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(t1, t1);","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(t1.hashCode(), t1.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        // same title -\u003e return true","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(t1, t2);","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(t1.hashCode(), t2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    public void isValidTitle() {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        // null title","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        // invalid titles","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        // valid titles","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(Title.isValidTitle(\"Add tasks functionality\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(Title.isValidTitle(\"-\")); // one character","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(Title.isValidTitle(\"This is a very long task title that is still acceptable\")); // long address","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":51}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_TWO;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(uniqueTaskList.contains(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(uniqueTaskList.contains(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_taskWithSameTitle_returnsTrue() {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: Update test","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        Task editedTaskOne \u003d new TaskBuilder(TASK_ONE).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(uniqueTaskList.contains(editedTaskOne));","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(TASK_ONE, null));","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(TASK_ONE, TASK_TWO));","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.setTask(TASK_ONE, TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask_editedTaskHasDifferentDescription_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.setTask(TASK_ONE, TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"    public void setTask_editedTaskHasNonUniqueDescription_throwsDuplicateTaskException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_TWO);","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(TASK_ONE, TASK_TWO));","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(TASK_ONE));","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"KIANSEONG"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.remove(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks_taskList_replacesOwnListWithProvidedTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTaskList.add(TASK_TWO);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.add(TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTask\u003e newTaskList \u003d Collections.singletonList(TASK_TWO);","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTaskList.setTasks(newTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTaskList.add(TASK_TWO);","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"KIANSEONG"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(TASK_ONE, TASK_ONE);","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"                -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":159,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":160,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList utl1 \u003d new UniqueTaskList();","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTaskList utl2 \u003d new UniqueTaskList();","lastModifiedDate":"2022-11-06"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1, utl2);","lastModifiedDate":"2022-11-06"},{"lineNumber":166,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1.hashCode(), utl2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":167,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":168,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":169,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1, utl1);","lastModifiedDate":"2022-11-06"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1.hashCode(), utl1.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":172,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, utl1);","lastModifiedDate":"2022-11-06"},{"lineNumber":174,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":176,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(5, utl1);","lastModifiedDate":"2022-11-06"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":178,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":178}},{"path":"src/test/java/seedu/address/model/teammate/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    public void testEquals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        Address a1 \u003d new Address(\"Test\");","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        Address a2 \u003d new Address(\"Test\");","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(a1.equals(a2) \u0026\u0026 a2.equals(a1));","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(a1.hashCode(), a2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KIANSEONG":10,"-":35}},{"path":"src/test/java/seedu/address/model/teammate/ContainsTagPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"public class ContainsTagPredicateTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cString\u003e firstPredicateTagList \u003d Collections.singletonList(\"frontend\");","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cString\u003e secondPredicateTagList \u003d Arrays.asList(\"frontend\", \"backend\");","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        ContainsTagPredicate firstPredicate \u003d new ContainsTagPredicate(firstPredicateTagList);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"        ContainsTagPredicate secondPredicate \u003d new ContainsTagPredicate(secondPredicateTagList);","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        ContainsTagPredicate firstPredicateCopy \u003d new ContainsTagPredicate(firstPredicateTagList);","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        // different list -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    public void test_teammateHasTag_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        // One tag","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        ContainsTagPredicate predicate \u003d new ContainsTagPredicate(Collections.singletonList(\"frontend\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withTags(\"frontend\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        // Multiple tags","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        predicate \u003d new ContainsTagPredicate(Arrays.asList(\"frontend\", \"backend\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withTags(\"frontend\", \"backend\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        // Only one matching tag","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        predicate \u003d new ContainsTagPredicate(Arrays.asList(\"frontend\", \"backend\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withTags(\"backend\", \"fullstack\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"        // Mixed-case tags","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        predicate \u003d new ContainsTagPredicate(Arrays.asList(\"frontend\", \"backend\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withTags(\"fRonTEnd\", \"baCKEnd\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    public void test_teammateDoesNotHaveTag_returnsFalse() {","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        // Zero tags","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        ContainsTagPredicate predicate \u003d new ContainsTagPredicate(Collections.emptyList());","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(predicate.test(new TeammateBuilder().withTags(\"frontend\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"        // No matching tags","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        predicate \u003d new ContainsTagPredicate(List.of(\"fullstack\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(predicate.test(new TeammateBuilder().withTags(\"frontend\", \"backend\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"yilinzyl"},"content":"        // Incomplete tags","lastModifiedDate":"2022-11-07"},{"lineNumber":73,"author":{"gitId":"yilinzyl"},"content":"        predicate \u003d new ContainsTagPredicate(List.of(\"front\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"        assertFalse(predicate.test(new TeammateBuilder().withTags(\"frontend\", \"backend\").build()));","lastModifiedDate":"2022-11-07"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":73,"yilinzyl":4}},{"path":"src/test/java/seedu/address/model/teammate/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    public void testEquals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        Email e1 \u003d new Email(\"Test@abc.com\");","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        Email e2 \u003d new Email(\"Test@abc.com\");","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(e1.equals(e2) \u0026\u0026 e2.equals(e1));","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(e1.hashCode(), e2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KIANSEONG":10,"-":67}},{"path":"src/test/java/seedu/address/model/teammate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        // different list -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":61,"author":{"gitId":"yilinzyl"},"content":"        // Incomplete keyword","lastModifiedDate":"2022-11-07"},{"lineNumber":62,"author":{"gitId":"yilinzyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIc\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":63,"author":{"gitId":"yilinzyl"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-11-07"},{"lineNumber":64,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-11-07"},{"lineNumber":65,"author":{"gitId":"yilinzyl"},"content":"        // Incomplete keyword","lastModifiedDate":"2022-11-07"},{"lineNumber":66,"author":{"gitId":"yilinzyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"LIce\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":67,"author":{"gitId":"yilinzyl"},"content":"        assertTrue(predicate.test(new TeammateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(predicate.test(new TeammateBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(List.of(\"Carol\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(predicate.test(new TeammateBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        // Keywords match phone, email, address, tag, but does not match name","lastModifiedDate":"2022-11-07"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\",","lastModifiedDate":"2022-11-07"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"                \"frontend\"));","lastModifiedDate":"2022-11-07"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(predicate.test(new TeammateBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"yilinzyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"frontend\").build()));","lastModifiedDate":"2022-11-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"KIANSEONG":18,"-":56,"yilinzyl":12}},{"path":"src/test/java/seedu/address/model/teammate/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public void testEquals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        Name n1 \u003d new Name(\"Test\");","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        Name n2 \u003d new Name(\"Test\");","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(n1.equals(n2) \u0026\u0026 n2.equals(n1));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(n1.hashCode(), n2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KIANSEONG":10,"-":39}},{"path":"src/test/java/seedu/address/model/teammate/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public void testEquals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        Phone p1 \u003d new Phone(\"123456789\");","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        Phone p2 \u003d new Phone(\"123456789\");","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(p1.equals(p2) \u0026\u0026 p2.equals(p1));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(p1.hashCode(), p2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"KIANSEONG":10,"-":39}},{"path":"src/test/java/seedu/address/model/teammate/TeammateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.ALICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"public class TeammateTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"        Teammate teammate \u003d new TeammateBuilder().build();","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e teammate.getTags().remove(0));","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    public void isSameTeammate() {","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(ALICE.isSameTeammate(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(ALICE.isSameTeammate(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedAlice \u003d new TeammateBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(ALICE.isSameTeammate(editedAlice));","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"        editedAlice \u003d new TeammateBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(ALICE.isSameTeammate(editedAlice));","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedBob \u003d new TeammateBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(BOB.isSameTeammate(editedBob));","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        editedBob \u003d new TeammateBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(BOB.isSameTeammate(editedBob));","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        Teammate aliceCopy \u003d new TeammateBuilder(ALICE).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(ALICE.hashCode(), ALICE.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        // different teammate -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedAlice \u003d new TeammateBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        editedAlice \u003d new TeammateBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        editedAlice \u003d new TeammateBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        editedAlice \u003d new TeammateBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        editedAlice \u003d new TeammateBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KIANSEONG":38,"-":56}},{"path":"src/test/java/seedu/address/model/teammate/UniqueTeammateListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.model.teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.ALICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.BOB;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.DuplicateTeammateException;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.exceptions.TeammateNotFoundException;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TeammateBuilder;","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"public class UniqueTeammateListTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    private final UniqueTeammateList uniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_nullTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.contains(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_teammateNotInList_returnsFalse() {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(uniqueTeammateList.contains(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_teammateInList_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(uniqueTeammateList.contains(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    public void contains_teammateWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedAlice \u003d new TeammateBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        assertTrue(uniqueTeammateList.contains(editedAlice));","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    public void add_nullTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.add(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    public void add_duplicateTeammate_throwsDuplicateTeammateException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTeammateException.class, () -\u003e uniqueTeammateList.add(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_nullTargetTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.setTeammate(null, ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_nullEditedTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.setTeammate(ALICE, null));","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_targetTeammateNotInList_throwsTeammateNotFoundException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(TeammateNotFoundException.class, () -\u003e uniqueTeammateList.setTeammate(ALICE, ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_editedTeammateIsSameTeammate_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.setTeammate(ALICE, ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList expectedUniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTeammateList, uniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_editedTeammateHasSameIdentity_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        Teammate editedAlice \u003d new TeammateBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.setTeammate(ALICE, editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList expectedUniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTeammateList.add(editedAlice);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTeammateList, uniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_editedTeammateHasDifferentIdentity_success() {","lastModifiedDate":"2022-11-06"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.setTeammate(ALICE, BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList expectedUniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTeammateList.add(BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTeammateList, uniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammate_editedTeammateHasNonUniqueIdentity_throwsDuplicateTeammateException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTeammateException.class, () -\u003e uniqueTeammateList.setTeammate(ALICE, BOB));","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"KIANSEONG"},"content":"    public void remove_nullTeammate_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":115,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.remove(null));","lastModifiedDate":"2022-11-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"KIANSEONG"},"content":"    public void remove_teammateDoesNotExist_throwsTeammateNotFoundException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":120,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(TeammateNotFoundException.class, () -\u003e uniqueTeammateList.remove(ALICE));","lastModifiedDate":"2022-11-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"KIANSEONG"},"content":"    public void remove_existingTeammate_removesTeammate() {","lastModifiedDate":"2022-11-06"},{"lineNumber":125,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":126,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.remove(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":127,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList expectedUniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":128,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTeammateList, uniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates_nullUniqueTeammateList_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":133,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.setTeammates((UniqueTeammateList) null));","lastModifiedDate":"2022-11-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates_uniqueTeammateList_replacesOwnListWithProvidedUniqueTeammateList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":138,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":139,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList expectedUniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":140,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTeammateList.add(BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":141,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.setTeammates(expectedUniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":142,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTeammateList, uniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":147,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTeammateList.setTeammates((List\u003cTeammate\u003e) null));","lastModifiedDate":"2022-11-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-11-06"},{"lineNumber":152,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.add(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":153,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e teammateList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":154,"author":{"gitId":"KIANSEONG"},"content":"        uniqueTeammateList.setTeammates(teammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":155,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList expectedUniqueTeammateList \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":156,"author":{"gitId":"KIANSEONG"},"content":"        expectedUniqueTeammateList.add(BOB);","lastModifiedDate":"2022-11-06"},{"lineNumber":157,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(expectedUniqueTeammateList, uniqueTeammateList);","lastModifiedDate":"2022-11-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"KIANSEONG"},"content":"    public void setTeammates_listWithDuplicateTeammates_throwsDuplicateTeammateException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":162,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cTeammate\u003e listWithDuplicateTeammates \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":163,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DuplicateTeammateException.class, () -\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":164,"author":{"gitId":"KIANSEONG"},"content":"                uniqueTeammateList.setTeammates(listWithDuplicateTeammates));","lastModifiedDate":"2022-11-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"KIANSEONG"},"content":"            -\u003e uniqueTeammateList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":173,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-11-06"},{"lineNumber":174,"author":{"gitId":"KIANSEONG"},"content":"    public void equals() {","lastModifiedDate":"2022-11-06"},{"lineNumber":175,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList utl1 \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":176,"author":{"gitId":"KIANSEONG"},"content":"        UniqueTeammateList utl2 \u003d new UniqueTeammateList();","lastModifiedDate":"2022-11-06"},{"lineNumber":177,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":178,"author":{"gitId":"KIANSEONG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":179,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1, utl2);","lastModifiedDate":"2022-11-06"},{"lineNumber":180,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1.hashCode(), utl2.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":181,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":182,"author":{"gitId":"KIANSEONG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-06"},{"lineNumber":183,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1, utl1);","lastModifiedDate":"2022-11-06"},{"lineNumber":184,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(utl1.hashCode(), utl1.hashCode());","lastModifiedDate":"2022-11-06"},{"lineNumber":185,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":186,"author":{"gitId":"KIANSEONG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":187,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(null, utl1);","lastModifiedDate":"2022-11-06"},{"lineNumber":188,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":189,"author":{"gitId":"KIANSEONG"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-11-06"},{"lineNumber":190,"author":{"gitId":"KIANSEONG"},"content":"        assertNotEquals(5, utl1);","lastModifiedDate":"2022-11-06"},{"lineNumber":191,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"KIANSEONG":105,"-":87}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ONE;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private static final String INVALID_TITLE \u003d \" \";","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    private static final String INVALID_DONE \u003d \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    private static final String INVALID_CONTACT \u003d \"TEST3\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    private static final String VALID_TITLE \u003d TASK_ONE.getTitle().toString();","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    private static final String VALID_DONE \u003d \"false\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    private static final List\u003cJsonAdaptedContact\u003e VALID_CONTACTS \u003d TASK_ONE.getAssignedContacts().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"            .map(JsonAdaptedContact::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(TASK_ONE);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(TASK_ONE, task.toModelType());","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"beetee17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"beetee17"},"content":"                INVALID_TITLE,","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"beetee17"},"content":"                VALID_DONE,","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"beetee17"},"content":"                Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER,","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"yilinzyl"},"content":"                Project.UNSPECIFIED_PROJECT_IDENTIFIER,","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"beetee17"},"content":"                VALID_CONTACTS","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"beetee17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"beetee17"},"content":"                null,","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"beetee17"},"content":"                VALID_DONE,","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"beetee17"},"content":"                Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER,","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"yilinzyl"},"content":"                Project.UNSPECIFIED_PROJECT_IDENTIFIER,","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"beetee17"},"content":"                VALID_CONTACTS","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_invalidDone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"beetee17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"                VALID_TITLE,","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"                INVALID_DONE,","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"                Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER,","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"yilinzyl"},"content":"                Project.UNSPECIFIED_PROJECT_IDENTIFIER,","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"beetee17"},"content":"                VALID_CONTACTS","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: Update Message","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Done\");","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_nullDone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"beetee17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"beetee17"},"content":"                VALID_TITLE,","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"beetee17"},"content":"                null,","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"beetee17"},"content":"                Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER,","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"                Project.UNSPECIFIED_PROJECT_IDENTIFIER,","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"beetee17"},"content":"                VALID_CONTACTS","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        // TODO: Update Message","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Done\");","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_invalidContacts_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        List\u003cJsonAdaptedContact\u003e invalidContacts \u003d new ArrayList\u003c\u003e(VALID_CONTACTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        invalidContacts.add(new JsonAdaptedContact(INVALID_CONTACT));","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"beetee17"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"beetee17"},"content":"                VALID_TITLE,","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"beetee17"},"content":"                VALID_DONE,","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"beetee17"},"content":"                Deadline.UNSPECIFIED_DEADLINE_IDENTIFIER,","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"yilinzyl"},"content":"                Project.UNSPECIFIED_PROJECT_IDENTIFIER,","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"beetee17"},"content":"                invalidContacts","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"beetee17"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"    // TODO: Update test for all fields","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":70,"beetee17":31,"yilinzyl":6}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTeammateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.storage.JsonAdaptedTeammate.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.BENSON;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"public class JsonAdaptedTeammateTest {","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_validTeammateDetails_returnsTeammate() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d new JsonAdaptedTeammate(BENSON);","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(BENSON, teammate.toModelType());","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d new JsonAdaptedTeammate(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-11-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        JsonAdaptedTeammate teammate \u003d","lastModifiedDate":"2022-11-06"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"                new JsonAdaptedTeammate(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-11-06"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, teammate::toModelType);","lastModifiedDate":"2022-11-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KIANSEONG":36,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.ALICE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.HOON;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.IDA;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"    public void readAddressBook_invalidTeammateAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidTeammateAddressBook.json\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    public void readAddressBook_invalidAndValidTeammateAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidTeammateAddressBook.json\"));","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        original.addTeammate(HOON);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        original.removeTeammate(ALICE);","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        original.addTeammate(IDA);","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KIANSEONG":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TypicalTeammates;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path TYPICAL_TEAMMATES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTeammatesAddressBook.json\");","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path INVALID_TEAMMATE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTeammateAddressBook.json\");","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path DUPLICATE_TEAMMATE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTeammateAddressBook.json\");","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_typicalTeammatesFile_success() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TEAMMATES_FILE,","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        AddressBook typicalTeammatesAddressBook \u003d TypicalTeammates.getTypicalAddressBook();","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(addressBookFromFile, typicalTeammatesAddressBook);","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_invalidTeammateFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TEAMMATE_FILE,","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_duplicateTeammates_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TEAMMATE_FILE,","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TEAMMATE,","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KIANSEONG":13,"-":34}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"public class JsonSerializableTaskPanelTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskPanelTest\");","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksTaskPanel.json\");","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskPanel.json\");","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskPanel.json\");","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        JsonSerializableTaskPanel dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"            JsonSerializableTaskPanel.class).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel taskPanelFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel typicalTasksTaskPanel \u003d TypicalTasks.getTypicalTaskPanel();","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(taskPanelFromFile, typicalTasksTaskPanel);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_invalidTeammateFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        JsonSerializableTaskPanel dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"            JsonSerializableTaskPanel.class).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"        JsonSerializableTaskPanel dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"            JsonSerializableTaskPanel.class).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskPanel.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":47}},{"path":"src/test/java/seedu/address/storage/JsonTaskPanelStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_FIVE;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_FOUR;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.TASK_ONE;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"public class JsonTaskPanelStorageTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskPanelStorageTest\");","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    @TempDir","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    public void readTaskPanel_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskPanel(null));","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    private java.util.Optional\u003cReadOnlyTaskPanel\u003e readTaskPanel(String filePath) throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        return new JsonTaskPanelStorage(Paths.get(filePath)).readTaskPanel(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"            : null;","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        assertFalse(readTaskPanel(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskPanel(\"notJsonFormatTaskPanel.json\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"    public void readTaskPanel_invalidTeammateTaskPanel_throwDataConversionException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskPanel(\"invalidTaskTaskPanel.json\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"    public void readTaskPanel_invalidAndValidTeammateTaskPanel_throwDataConversionException() {","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskPanel(\"invalidAndValidTaskTaskPanel.json\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    public void readAndSaveTaskPanel_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskPanel.json\");","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel original \u003d getTypicalTaskPanel();","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        JsonTaskPanelStorage jsonTaskPanelStorage \u003d new JsonTaskPanelStorage(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        jsonTaskPanelStorage.saveTaskPanel(original, filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        ReadOnlyTaskPanel readBack \u003d jsonTaskPanelStorage.readTaskPanel(filePath).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(original, new TaskPanel(readBack));","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"        original.addTask(TASK_FIVE);","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"        original.removeTask(TASK_ONE);","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"        jsonTaskPanelStorage.saveTaskPanel(original, filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"        readBack \u003d jsonTaskPanelStorage.readTaskPanel(filePath).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(original, new TaskPanel(readBack));","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        original.addTask(TASK_FOUR);","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"        jsonTaskPanelStorage.saveTaskPanel(original); // file path not specified","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"        readBack \u003d jsonTaskPanelStorage.readTaskPanel().get(); // file path not specified","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(original, new TaskPanel(readBack));","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"    public void saveTaskPanel_nullTaskPanel_throwsNullPointerException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskPanel(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"     * Saves {@code taskPanel} at the specified {@code filePath}.","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"KIANSEONG"},"content":"    private void saveTaskPanel(ReadOnlyTaskPanel taskPanel, String filePath) {","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"KIANSEONG"},"content":"        try {","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"KIANSEONG"},"content":"            new JsonTaskPanelStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"KIANSEONG"},"content":"                .saveTaskPanel(taskPanel, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"KIANSEONG"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"KIANSEONG"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"KIANSEONG"},"content":"    public void saveTaskPanel_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"KIANSEONG"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskPanel(new TaskPanel(), null));","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":110}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.testutil.TypicalTeammates.getTypicalAddressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.ReadOnlyTaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"        JsonTaskPanelStorage taskPanelStorage \u003d new JsonTaskPanelStorage(getTempFilePath(\"tp\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, taskPanelStorage, userPrefsStorage);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    public void taskPanelReadSave() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"        /*","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"         * {@link JsonTaskPanelStorage} class.","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskPanelStorageTest} class.","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"         */","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel original \u003d getTypicalTaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        storageManager.saveTaskPanel(original);","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        ReadOnlyTaskPanel retrieved \u003d storageManager.readTaskPanel().get();","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"        assertEquals(original, new TaskPanel(retrieved));","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"    public void getTaskPanelFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"        assertNotNull(storageManager.getTaskPanelFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":24,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * A utility class to help with building AddressBook objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withTeammate(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     * Adds a new {@code Teammate} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public AddressBookBuilder withTeammate(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        addressBook.addTeammate(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":7,"-":23}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"amresh2000"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-11-02"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"amresh2000"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"amresh2000"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"amresh2000"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"amresh2000"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"amresh2000"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    private final EditTaskDescriptor descriptor;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"amresh2000"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"amresh2000"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"amresh2000"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setTitle(task.getTitle());","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setDeadline(task.getDeadline());","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setProject(task.getProject());","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"amresh2000"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Title} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"amresh2000"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"amresh2000"},"content":"    public EditTaskDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Deadline} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public EditTaskDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setDeadline(Deadline.of(TaskParserUtil.convertStringToLocalDate(deadline)));","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Project} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    public EditTaskDescriptorBuilder withProject(String project) {","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setProject(new Project(project));","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"amresh2000"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"amresh2000"},"content":"        return descriptor;","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"amresh2000"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"amresh2000"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"KIANSEONG":34,"amresh2000":24}},{"path":"src/test/java/seedu/address/testutil/EditTeammateDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-11-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.EditCommand.EditTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":" * A utility class to help with building EditTeammateDescriptor objects.","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"public class EditTeammateDescriptorBuilder {","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    private final EditTeammateDescriptor descriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder() {","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptor();","lastModifiedDate":"2022-11-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder(EditTeammateDescriptor descriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"        this.descriptor \u003d new EditTeammateDescriptor(descriptor);","lastModifiedDate":"2022-11-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an {@code EditTeammateDescriptor} with fields containing {@code teammate}\u0027s details","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        descriptor \u003d new EditTeammateDescriptor();","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setName(teammate.getName());","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setPhone(teammate.getPhone());","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setEmail(teammate.getEmail());","lastModifiedDate":"2022-11-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setAddress(teammate.getAddress());","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setTags(teammate.getTags());","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Name} of the {@code EditTeammateDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Phone} of the {@code EditTeammateDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Email} of the {@code EditTeammateDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-11-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Address} of the {@code EditTeammateDescriptor} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-11-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-11-06"},{"lineNumber":75,"author":{"gitId":"KIANSEONG"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTeammateDescriptor}","lastModifiedDate":"2022-11-06"},{"lineNumber":76,"author":{"gitId":"KIANSEONG"},"content":"     * that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-11-06"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"KIANSEONG"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-11-06"},{"lineNumber":81,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-11-06"},{"lineNumber":82,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":83,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"    public EditTeammateDescriptor build() {","lastModifiedDate":"2022-11-06"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"        return descriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-11-06"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"KIANSEONG":87}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.parser.TaskParserUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Contact;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"beetee17"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"yilinzyl"},"content":"import seedu.address.model.task.Project;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    public static final String DEFAULT_TITLE \u003d \"Add task functionality to Arrow\";","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"    public static final boolean DEFAULT_IS_COMPLETED \u003d false;","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    private Title title;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"yilinzyl"},"content":"    private Project project;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    private Set\u003cContact\u003e assignedContacts;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"KIANSEONG"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        isCompleted \u003d DEFAULT_IS_COMPLETED;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"beetee17"},"content":"        deadline \u003d Deadline.UNSPECIFIED;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"yilinzyl"},"content":"        project \u003d Project.UNSPECIFIED;","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        assignedContacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"        title \u003d taskToCopy.getTitle();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"        isCompleted \u003d taskToCopy.getCompleted();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"yilinzyl"},"content":"        project \u003d taskToCopy.getProject();","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        assignedContacts \u003d new HashSet\u003c\u003e(taskToCopy.getAssignedContacts());","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Title} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"    public TaskBuilder withTitle(String title) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code isCompleted} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"    public TaskBuilder withCompleted(boolean isCompleted) {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"beetee17"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"beetee17"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"beetee17"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"    public TaskBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"        this.deadline \u003d Deadline.of(TaskParserUtil.convertStringToLocalDate(deadline));","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"beetee17"},"content":"        return this;","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"beetee17"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"yilinzyl"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"yilinzyl"},"content":"     * Sets the {@code Project} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"yilinzyl"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"yilinzyl"},"content":"    public TaskBuilder withProject(String projectName) {","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"yilinzyl"},"content":"        if (!projectName.equals(\"\")) {","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"yilinzyl"},"content":"            this.project \u003d new Project(projectName);","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"yilinzyl"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"yilinzyl"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"yilinzyl"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"     * Parses the {@code contacts} into a {@code Set\u003cContact\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    public TaskBuilder withContacts(String... contacts) {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"KIANSEONG"},"content":"        this.assignedContacts \u003d SampleDataUtil.getContactSet(contacts);","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"beetee17"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"    public Task build() {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"yilinzyl"},"content":"        return new Task(title, isCompleted, deadline, project, assignedContacts);","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":71,"beetee17":10,"yilinzyl":15}},{"path":"src/test/java/seedu/address/testutil/TaskPanelBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * A utility class to help with building TaskPanel objects.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":" *     {@code TaskPanel tp \u003d new TaskPanelBuilder().withTask(TASK_ONE).build();}","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"public class TaskPanelBuilder {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"    private final TaskPanel taskPanel;","lastModifiedDate":"2022-11-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"    public TaskPanelBuilder() {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     * Adds a new {@code Task} to the {@code TaskPanel} that we are building.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"    public TaskPanelBuilder withTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"        taskPanel.addTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"        return this;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"    public TaskPanel build() {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"        return taskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":30}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.task.AddTaskCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":" * A utility class for Task.","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"public class TaskUtil {","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"beetee17"},"content":"     * Returns an add command string for adding the {@code Task}.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"    public static String getAddTaskCommand(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"        return AddTaskCommand.COMMAND_WORD_FULL + \" \" + getTaskDetails(task);","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the part of command string for the given {@code teammate}\u0027s details.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"        return task.getTitle().toString() + \" \";","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"KIANSEONG":23,"beetee17":1}},{"path":"src/test/java/seedu/address/testutil/TeammateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Address;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Email;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Name;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Phone;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":" * A utility class to help with building Teammate objects.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"public class TeammateBuilder {","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"     * Creates a {@code TeammateBuilder} with the default details.","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder() {","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"     * Initializes the TeammateBuilder with the data of {@code teammateToCopy}.","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder(Teammate teammateToCopy) {","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"        name \u003d teammateToCopy.getName();","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        phone \u003d teammateToCopy.getPhone();","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"        email \u003d teammateToCopy.getEmail();","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"        address \u003d teammateToCopy.getAddress();","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"        tags \u003d new HashSet\u003c\u003e(teammateToCopy.getTags());","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Name} of the {@code Teammate} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder withName(String name) {","lastModifiedDate":"2022-11-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Teammate} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder withTags(String ... tags) {","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Address} of the {@code Teammate} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder withAddress(String address) {","lastModifiedDate":"2022-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Phone} of the {@code Teammate} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder withPhone(String phone) {","lastModifiedDate":"2022-11-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"KIANSEONG"},"content":"     * Sets the {@code Email} of the {@code Teammate} that we are building.","lastModifiedDate":"2022-11-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"KIANSEONG"},"content":"    public TeammateBuilder withEmail(String email) {","lastModifiedDate":"2022-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"KIANSEONG"},"content":"    public Teammate build() {","lastModifiedDate":"2022-11-06"},{"lineNumber":93,"author":{"gitId":"KIANSEONG"},"content":"        return new Teammate(name, phone, email, address, tags);","lastModifiedDate":"2022-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"KIANSEONG":29,"-":67}},{"path":"src/test/java/seedu/address/testutil/TeammateUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.logic.commands.EditCommand.EditTeammateDescriptor;","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":" * A utility class for Teammate.","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"public class TeammateUtil {","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an add command string for adding the {@code teammate}.","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"    public static String getAddCommand(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"KIANSEONG"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTeammateDetails(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the part of command string for the given {@code teammate}\u0027s details.","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"KIANSEONG"},"content":"    public static String getTeammateDetails(Teammate teammate) {","lastModifiedDate":"2022-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"KIANSEONG"},"content":"        sb.append(PREFIX_NAME + teammate.getName().fullName + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"        sb.append(PREFIX_PHONE + teammate.getPhone().value + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"        sb.append(PREFIX_EMAIL + teammate.getEmail().value + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"        sb.append(PREFIX_ADDRESS + teammate.getAddress().value + \" \");","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"KIANSEONG"},"content":"        teammate.getTags().forEach(","lastModifiedDate":"2022-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the part of command string for the given {@code EditTeammateDescriptor}\u0027s details.","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    public static String getEditTeammateDescriptorDetails(EditTeammateDescriptor descriptor) {","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"KIANSEONG":16,"-":46}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the middle index of the teammate in the {@code model}\u0027s teammate list.","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"        return Index.fromOneBased(model.getFilteredTeammateList().size() / 2);","lastModifiedDate":"2022-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the last index of the teammate in the {@code model}\u0027s teammate list.","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"        return Index.fromOneBased(model.getFilteredTeammateList().size());","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"     * Returns the teammate in the {@code model}\u0027s teammate list at {@code index}.","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    public static Teammate getTeammate(Model model, Index index) {","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"        return model.getFilteredTeammateList().get(index.getZeroBased());","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KIANSEONG":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"    public static final Index INDEX_FIRST_TEAMMATE \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"    public static final Index INDEX_SECOND_TEAMMATE \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"    public static final Index INDEX_THIRD_TEAMMATE \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"yilinzyl"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"yilinzyl"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"yilinzyl"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"KIANSEONG":5,"-":9,"yilinzyl":3}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KIANSEONG"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_CONTACT_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_CONTACT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":5,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":6,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_DEADLINE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":7,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_PROJECT_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":8,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_PROJECT_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":9,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_TITLE_HOMEWORK;","lastModifiedDate":"2022-11-06"},{"lineNumber":10,"author":{"gitId":"KIANSEONG"},"content":"import static seedu.address.logic.commands.TaskCommandTestUtil.VALID_TITLE_WORKSHOP;","lastModifiedDate":"2022-11-06"},{"lineNumber":11,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":12,"author":{"gitId":"KIANSEONG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"KIANSEONG"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"KIANSEONG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.TaskPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"KIANSEONG"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"KIANSEONG"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"beetee17"},"content":"    public static final Task TASK_ONE \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"beetee17"},"content":"            new TaskBuilder()","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"beetee17"},"content":"                    .withTitle(\"Add tasks to list\")","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"KIANSEONG"},"content":"                    .withCompleted(false)","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"KIANSEONG"},"content":"                    .withDeadline(\"UNSPECIFIED\")","lastModifiedDate":"2022-11-05"},{"lineNumber":29,"author":{"gitId":"KIANSEONG"},"content":"                    .withContacts(\"Alice Pauline\")","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"beetee17"},"content":"                    .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"beetee17"},"content":"    public static final Task TASK_TWO \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"beetee17"},"content":"            new TaskBuilder()","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"beetee17"},"content":"                    .withTitle(\"Assign contacts to task\")","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"                    .withCompleted(false)","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"KIANSEONG"},"content":"                    .withDeadline(\"1 January 2023\")","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"                    .withProject(\"CS2103T\")","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"beetee17"},"content":"                    .withContacts(\"George Best\")","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"beetee17"},"content":"                    .build();","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"KIANSEONG"},"content":"    public static final Task TASK_THREE \u003d new TaskBuilder().withTitle(\"Set deadline for a task\").build();","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public static final Task TASK_FOUR \u003d new TaskBuilder().withTitle(\"Set tags for a task\").build();","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"KIANSEONG"},"content":"    public static final Task TASK_FIVE \u003d new TaskBuilder().withTitle(\"Last task\").build();","lastModifiedDate":"2022-11-06"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"KIANSEONG"},"content":"    public static final Task HOMEWORK \u003d new TaskBuilder()","lastModifiedDate":"2022-11-06"},{"lineNumber":44,"author":{"gitId":"KIANSEONG"},"content":"            .withTitle(VALID_TITLE_HOMEWORK)","lastModifiedDate":"2022-11-06"},{"lineNumber":45,"author":{"gitId":"KIANSEONG"},"content":"            .withDeadline(VALID_DEADLINE_HOMEWORK)","lastModifiedDate":"2022-11-06"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"            .withProject(VALID_PROJECT_HOMEWORK)","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"KIANSEONG"},"content":"            .withContacts(VALID_CONTACT_HOMEWORK).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"KIANSEONG"},"content":"    public static final Task WORKSHOP \u003d new TaskBuilder()","lastModifiedDate":"2022-11-06"},{"lineNumber":50,"author":{"gitId":"KIANSEONG"},"content":"            .withTitle(VALID_TITLE_WORKSHOP)","lastModifiedDate":"2022-11-06"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"            .withDeadline(VALID_DEADLINE_WORKSHOP)","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"            .withProject(VALID_PROJECT_WORKSHOP)","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"KIANSEONG"},"content":"            .withContacts(VALID_CONTACT_WORKSHOP).build();","lastModifiedDate":"2022-11-06"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"KIANSEONG"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"KIANSEONG"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an {@code TaskList} with all the typical tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"KIANSEONG"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    public static TaskPanel getTypicalTaskPanel() {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"KIANSEONG"},"content":"        TaskPanel tp \u003d new TaskPanel();","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"KIANSEONG"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"            tp.addTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"KIANSEONG"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"KIANSEONG"},"content":"        return tp;","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"KIANSEONG"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK_ONE, TASK_TWO, TASK_THREE));","lastModifiedDate":"2022-11-06"},{"lineNumber":70,"author":{"gitId":"KIANSEONG"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"KIANSEONG"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"KIANSEONG":62,"beetee17":9}},{"path":"src/test/java/seedu/address/testutil/TypicalTeammates.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"KIANSEONG"},"content":"import seedu.address.model.teammate.Teammate;","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"KIANSEONG"},"content":" * A utility class containing a list of {@code Teammate} objects to be used in tests.","lastModifiedDate":"2022-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"KIANSEONG"},"content":"public class TypicalTeammates {","lastModifiedDate":"2022-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate ALICE \u003d new TeammateBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate BENSON \u003d new TeammateBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate CARL \u003d new TeammateBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate DANIEL \u003d new TeammateBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate ELLE \u003d new TeammateBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-11-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate FIONA \u003d new TeammateBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate GEORGE \u003d new TeammateBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate HOON \u003d new TeammateBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate IDA \u003d new TeammateBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"KIANSEONG"},"content":"    // Manually added - Teammate\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-11-06"},{"lineNumber":52,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate AMY \u003d new TeammateBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"KIANSEONG"},"content":"    public static final Teammate BOB \u003d new TeammateBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"KIANSEONG"},"content":"    private TypicalTeammates() {} // prevents instantiation","lastModifiedDate":"2022-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"KIANSEONG"},"content":"     * Returns an {@code AddressBook} with all the typical teammates.","lastModifiedDate":"2022-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"KIANSEONG"},"content":"        for (Teammate teammate : getTypicalTeammates()) {","lastModifiedDate":"2022-11-06"},{"lineNumber":68,"author":{"gitId":"KIANSEONG"},"content":"            ab.addTeammate(teammate);","lastModifiedDate":"2022-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"KIANSEONG"},"content":"    public static List\u003cTeammate\u003e getTypicalTeammates() {","lastModifiedDate":"2022-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"KIANSEONG":20,"-":56}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"KIANSEONG"},"content":"\u003c?import seedu.address.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"seedu.address.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"KIANSEONG":1,"-":6}}]
