[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"# FypManager","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-F09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-F09-1/tp/actions)","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"* **JerylFypManager** is a desktop application catered to professors to manage and track the progress for students’ final year project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress.\u003cbr\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"  * as a tracking tool to track final year projects a professor is in charge of.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"  * as a helper tool to provide feedback on students\u0027 FYP progress.","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"* It is named `JerylFypManager` as the application serves as a FYP manager, while `Jeryl` represents the initials of the developers of the application.","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"* For the detailed documentation of this project, see the **[JerylFypManager Product Website](https://ay2223s1-cs2103-f09-1.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"-":4,"RussellDash332":12}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"mainClassName \u003d \u0027jeryl.fyp.Main\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"    archiveFileName \u003d \u0027FypManager.jar\u0027","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"run {","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YH-15":1,"-":72,"RussellDash332":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"### Leong Ming Jian Eugene","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"\u003cimg src\u003d\"images/eugenelmj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"[[github](https://github.com/eugenelmj)]","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"[[portfolio](team/eugenelmj.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"* Responsibilities: Meeting Minutes","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"### Nicholas Russell Saerang","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"\u003cimg src\u003d\"images/russelldash332.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"[[github](http://github.com/russelldash332)]","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"[[portfolio](team/russelldash332.md)]","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"* Role: Team Lead, Git Expert","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"* Responsibilities: Project Coordination","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"### Chua Yu Xuan Jordan","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"\u003cimg src\u003d\"images/jordanchua.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"[[github](http://github.com/jordanchua)]","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"[[portfolio](team/jordanchua.md)]","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"### Zhang Yuhao","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"\u003cimg src\u003d\"images/yh-15.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"[[github](http://github.com/YH-15)]","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"[[portfolio](team/yh-15.md)]","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"SweetPotato0213"},"content":"### Liu Han","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"SweetPotato0213"},"content":"\u003cimg src\u003d\"images/sweetpotato0213.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"SweetPotato0213"},"content":"[[github](http://github.com/SweetPotato0213)]","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"SweetPotato0213"},"content":"[[portfolio](team/sweetpotato0213.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"PokezardVGC"},"content":"### Poh Yu Jie","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"PokezardVGC"},"content":"\u003cimg src\u003d\"images/pokezardvgc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"PokezardVGC"},"content":"[[github](http://github.com/PokezardVGC)]","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"PokezardVGC"},"content":"[[portfolio](team/pokezardvgc.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"* Responsibilities: Documentation + Code Quality","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"SweetPotato0213":4,"eugenelmj":5,"JordanChua":4,"YH-15":4,"PokezardVGC":4,"-":40,"RussellDash332":9}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete -s i/A0123456X`.","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"PokezardVGC"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `CompletedStudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"PokezardVGC"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"PokezardVGC"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"PokezardVGC"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"PokezardVGC"},"content":"1. When `Logic` is called upon to execute a command, it uses the `FypManagerParser` class to parse the user command.","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"PokezardVGC"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddStudentCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"PokezardVGC"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete -s i/A0123456X\")` API call.","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"![Interactions Inside the Logic Component for the `delete -s i/A0123456X` Command](images/DeleteStudentSequenceDiagram.png)","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"PokezardVGC"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteStudentCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"PokezardVGC"},"content":"* When called upon to parse a user command, the `FypManagerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddStudentCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddStudentCommand`) which the `FypManagerParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"PokezardVGC"},"content":"* All `XYZCommandParser` classes (e.g., `AddStudentCommandParser`, `DeleteStudentCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"PokezardVGC"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-10-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"PokezardVGC"},"content":"* stores the FYP manager data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-10-22"},{"lineNumber":126,"author":{"gitId":"PokezardVGC"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"PokezardVGC"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `FypManager`, which `Student` references. This allows `FypManager` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"PokezardVGC"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103-F09-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-10-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"PokezardVGC"},"content":"* can save both FYP manager data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-22"},{"lineNumber":145,"author":{"gitId":"PokezardVGC"},"content":"* inherits from both `FypManagerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"PokezardVGC"},"content":"Classes used by multiple components are in the `jeryl.fyp.commons` package.","lastModifiedDate":"2022-10-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"RussellDash332"},"content":"### Adding a student to the FYP manager","lastModifiedDate":"2022-10-22"},{"lineNumber":159,"author":{"gitId":"RussellDash332"},"content":"This feature allows professors as users to keep track of students that are supervised under, as well as the project each student is working on.","lastModifiedDate":"2022-10-22"},{"lineNumber":160,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":161,"author":{"gitId":"RussellDash332"},"content":"#### Implementation details","lastModifiedDate":"2022-10-22"},{"lineNumber":162,"author":{"gitId":"RussellDash332"},"content":"The add student feature is facilitated by `AddStudentCommandParser` and `AddStudentCommand`. The operation is exposed in the `Model` interface as `Model#addStudent()`.","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"RussellDash332"},"content":"Given below is an example usage scenario and how the add student mechanism behaves at each step:","lastModifiedDate":"2022-10-22"},{"lineNumber":165,"author":{"gitId":"RussellDash332"},"content":"1. The user enters the add student command and provides the name of the student, the student ID, the project name, and the student\u0027s email.","lastModifiedDate":"2022-10-22"},{"lineNumber":166,"author":{"gitId":"RussellDash332"},"content":"2. `FypManagerParser` creates a new `AddStudentCommandParser` after preliminary processing of user input.","lastModifiedDate":"2022-10-22"},{"lineNumber":167,"author":{"gitId":"RussellDash332"},"content":"3. `AddStudentCommandParser` then processes the input again and creates an `AddStudentCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"RussellDash332"},"content":"4. `LogicManager` executes the `AddStudentCommand` using the `LogicManager#execute()` method.","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"RussellDash332"},"content":"5. `AddStudentCommand` checks if the student has existed before using `Model#hasStudent()`.","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"RussellDash332"},"content":"6. If the student is not inside the student list yet, `AddStudentCommand` calls `Model#addStudent()` and passes the student as the parameter.","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"RussellDash332"},"content":"7. Finally, `AddStudentCommand` creates a `CommandResult` and returns it to `LogicManager` to complete the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":173,"author":{"gitId":"RussellDash332"},"content":"The following sequence diagram shows how the add student command works:","lastModifiedDate":"2022-10-22"},{"lineNumber":174,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"RussellDash332"},"content":"\u003cimg src\u003d\"images/AddStudentSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":176,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":177,"author":{"gitId":"RussellDash332"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-22"},{"lineNumber":178,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":179,"author":{"gitId":"RussellDash332"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":180,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":181,"author":{"gitId":"RussellDash332"},"content":"The following activity diagram summarizes what happens when a user executes an add student command.","lastModifiedDate":"2022-10-22"},{"lineNumber":182,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":183,"author":{"gitId":"RussellDash332"},"content":"\u003cimg src\u003d\"images/AddStudentActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":184,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"RussellDash332"},"content":"#### Design considerations","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"RussellDash332"},"content":"An add student command is designed to add a single student along with its detail particulars such as one\u0027s student ID, student name, project name, and email. These details are the important details every professor needs from a student so that the professor can understand the work of the student and is able to contact the student when needed.","lastModifiedDate":"2022-10-22"},{"lineNumber":187,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":188,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"PokezardVGC"},"content":"### Deleting a student from the FYP manager","lastModifiedDate":"2022-10-22"},{"lineNumber":190,"author":{"gitId":"PokezardVGC"},"content":"This feature allows professors to delete students who have dropped their FYP","lastModifiedDate":"2022-10-22"},{"lineNumber":191,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"PokezardVGC"},"content":"#### Implementation details","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"PokezardVGC"},"content":"The borrow feature is facilitated by `DeleteStudentCommandParser` and `DeleteStudentCommand`. The operation is exposed in the `Model` interface as `Model#DeleteStudent()`.","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"PokezardVGC"},"content":"Given below is an example usage scenario and how the borrow mechanism behaves at each step:","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"1. The user enters delete student command and provides the student ID of student to be deleted.","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"PokezardVGC"},"content":"2. `FYPManagerParser` creates a new `DeleteStudentCommandParser` after preliminary processing of user input.","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"PokezardVGC"},"content":"3. `DeleteStudentCommandParser` creates a new `DeleteStudentCommand` based on the processed input.","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"PokezardVGC"},"content":"4. `LogicManager` executes the `DeleteStudentCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":202,"author":{"gitId":"PokezardVGC"},"content":"5. `DeleteStudentCommand` calls `Model#getFilteredStudentList()` to get the list of student with FYP, and then gets the student at the specified index using the unique studentId.","lastModifiedDate":"2022-10-22"},{"lineNumber":203,"author":{"gitId":"PokezardVGC"},"content":"6. `DeleteStudentCommand` calls `Model#DeleteStudent()` and passes the studentID, and return student deleted as parameters.","lastModifiedDate":"2022-10-22"},{"lineNumber":204,"author":{"gitId":"PokezardVGC"},"content":"7. Finally, `DeleteStudentCommand` creates a `CommandResult` and returns it to `LogicManager` to complete the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":205,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":206,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":207,"author":{"gitId":"PokezardVGC"},"content":"The following sequence diagram shows how delete student command works:","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"PokezardVGC"},"content":"\u003cimg src\u003d\"images/DeleteStudentSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":210,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"PokezardVGC"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteStudentCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-22"},{"lineNumber":212,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":213,"author":{"gitId":"PokezardVGC"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":214,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":215,"author":{"gitId":"PokezardVGC"},"content":"The following activity diagram summarizes what happens when a user executes a delete student command.","lastModifiedDate":"2022-10-22"},{"lineNumber":216,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":217,"author":{"gitId":"PokezardVGC"},"content":"\u003cimg src\u003d\"images/DeleteStudentActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":218,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":219,"author":{"gitId":"PokezardVGC"},"content":"#### Design considerations","lastModifiedDate":"2022-10-22"},{"lineNumber":220,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":221,"author":{"gitId":"PokezardVGC"},"content":"The delete student command is designed to be used in conjunction with find student command. For instance, the user would first use find student using project name to find the student taking FYP using `find machine`","lastModifiedDate":"2022-10-22"},{"lineNumber":222,"author":{"gitId":"RussellDash332"},"content":"to find students taking machine learning projects before doing `delete -s i/A0123456X` to remove student from FYP Manager.","lastModifiedDate":"2022-10-28"},{"lineNumber":223,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":224,"author":{"gitId":"PokezardVGC"},"content":"This integration between delete student command with find student command is important because FYPManager can store large number of students with FYP, making it not fesiable for users to scroll through the list.","lastModifiedDate":"2022-10-22"},{"lineNumber":225,"author":{"gitId":"RussellDash332"},"content":"By utilizing find student, users can find the student with only partial information and retrieve the student ID Using this student ID, users can delete the student from the FYPManager once he/she drops the FYP.","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"PokezardVGC"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedFypManager`. It extends `FypManager` with an undo/redo history, stored internally as an `fypManagerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-10-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"PokezardVGC"},"content":"* `VersionedFypManager#commit()` — Saves the current FYP manager state in its history.","lastModifiedDate":"2022-10-22"},{"lineNumber":234,"author":{"gitId":"PokezardVGC"},"content":"* `VersionedFypManager#undo()` — Restores the previous FYP manager state from its history.","lastModifiedDate":"2022-10-22"},{"lineNumber":235,"author":{"gitId":"PokezardVGC"},"content":"* `VersionedFypManager#redo()` — Restores a previously undone FYP manager state from its history.","lastModifiedDate":"2022-10-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"PokezardVGC"},"content":"These operations are exposed in the `Model` interface as `Model#commitFypManager()`, `Model#undoFypManager()` and `Model#redoFypManager()` respectively.","lastModifiedDate":"2022-10-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"PokezardVGC"},"content":"Step 1. The user launches the application for the first time. The `VersionedFypManager` will be initialized with the initial FYP manager state, and the `currentStatePointer` pointing to that single FYP manager state.","lastModifiedDate":"2022-10-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"PokezardVGC"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the FYP manager. The `delete` command calls `Model#commitFypManager()`, causing the modified state of the FYP manager after the `delete 5` command executes to be saved in the `fypManagerStateList`, and the `currentStatePointer` is shifted to the newly inserted FYP manager state.","lastModifiedDate":"2022-10-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"PokezardVGC"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitFypManager()`, causing another modified FYP manager state to be saved into the `fypManagerStateList`.","lastModifiedDate":"2022-10-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"PokezardVGC"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitFypManager()`, so the FYP manager state will not be saved into the `fypManagerStateList`.","lastModifiedDate":"2022-10-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"PokezardVGC"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoFypManager()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous FYP manager state, and restores the FYP manager to that state.","lastModifiedDate":"2022-10-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"PokezardVGC"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial FypManager state, then there are no previous FypManager states to restore. The `undo` command uses `Model#canUndoFypManager()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-10-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"PokezardVGC"},"content":"The `redo` command does the opposite — it calls `Model#redoFypManager()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the FYP manager to that state.","lastModifiedDate":"2022-10-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"PokezardVGC"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `fypManagerStateList.size() - 1`, pointing to the latest FYP manager state, then there are no undone FypManager states to restore. The `redo` command uses `Model#canRedoFypManager()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-10-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"YH-15"},"content":"Step 5. The user then decides to execute the command `Exit`. Commands that do not modify the FYP manager, such as `Exit`, will usually not call `Model#commitFypManager()`, `Model#undoFypManager()` or `Model#redoFypManager()`. Thus, the `fypManagerStateList` remains unchanged.","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"PokezardVGC"},"content":"Step 6. The user executes `clear`, which calls `Model#commitFypManager()`. Since the `currentStatePointer` is not pointing at the end of the `fypManagerStateList`, all FYP manager states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-10-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"PokezardVGC"},"content":"* **Alternative 1 (current choice):** Saves the entire FYP manager.","lastModifiedDate":"2022-10-22"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"PokezardVGC"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2022-10-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"JordanChua"},"content":"### \\[Proposed\\] `MarkCommand` Feature","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"JordanChua"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":309,"author":{"gitId":"JordanChua"},"content":"The proposed MarkCommand Feature marks the Project Status of an FYP project as one of 3 possible statuses","lastModifiedDate":"2022-10-21"},{"lineNumber":310,"author":{"gitId":"JordanChua"},"content":"{***YTS***, ***IP***, ***DONE***}. Currently these are the only 3 statuses supported, although more may be implemented","lastModifiedDate":"2022-10-21"},{"lineNumber":311,"author":{"gitId":"JordanChua"},"content":"later on if there are other meaningful statuses.","lastModifiedDate":"2022-10-21"},{"lineNumber":312,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":313,"author":{"gitId":"JordanChua"},"content":"The MarkCommand Feature sets a default status of `YTS` whenever a new FYP project is added to the FYP Manager, and the","lastModifiedDate":"2022-10-21"},{"lineNumber":314,"author":{"gitId":"JordanChua"},"content":"MarkCommand allows us to accordingly the project Status to either `IP` if the student is still","lastModifiedDate":"2022-10-21"},{"lineNumber":315,"author":{"gitId":"JordanChua"},"content":"working on the FYP project, or `DONE` once the FYP project has been completed.","lastModifiedDate":"2022-10-21"},{"lineNumber":316,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":317,"author":{"gitId":"JordanChua"},"content":"Given below is an example usage scenario and how MarkCommand is utilised:","lastModifiedDate":"2022-10-21"},{"lineNumber":318,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":319,"author":{"gitId":"JordanChua"},"content":"Step 1: The Professor launches the application for the first time. `FypManager` will be initialised with the","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"JordanChua"},"content":"current FypManager state.","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":322,"author":{"gitId":"JordanChua"},"content":"Step 2: The Professor tries adding a student to the FypManager by executing the command","lastModifiedDate":"2022-10-21"},{"lineNumber":323,"author":{"gitId":"RussellDash332"},"content":"`add i/A0123456G ...`. Note that here we have set the default project Status to be `YTS` since","lastModifiedDate":"2022-10-28"},{"lineNumber":324,"author":{"gitId":"JordanChua"},"content":"the project has just been added.","lastModifiedDate":"2022-10-21"},{"lineNumber":325,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":326,"author":{"gitId":"JordanChua"},"content":"![MarkCommandState1](images/MarkCommandState1.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":327,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":328,"author":{"gitId":"JordanChua"},"content":"Step 3: Suppose that the student Jane Doe has now started on the project. The Professor wishes to update the","lastModifiedDate":"2022-10-21"},{"lineNumber":329,"author":{"gitId":"JordanChua"},"content":"project status for Jane to be `IP` instead of `YTS`, hence the Professor will execute the command","lastModifiedDate":"2022-10-21"},{"lineNumber":330,"author":{"gitId":"RussellDash332"},"content":"`mark i/A0123456G s/IP` to update the status accordingly.","lastModifiedDate":"2022-10-28"},{"lineNumber":331,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":332,"author":{"gitId":"JordanChua"},"content":"![MarkCommandState2](images/MarkCommandState2.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":333,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":334,"author":{"gitId":"JordanChua"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the student ID is incorrect or the","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"JordanChua"},"content":"status is not one of the statuses {`YTS`, `IP`, `DONE`}, then the command will not be executed and an appropriate","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"JordanChua"},"content":"error message will be shown.","lastModifiedDate":"2022-10-21"},{"lineNumber":337,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"JordanChua"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":339,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":340,"author":{"gitId":"JordanChua"},"content":"The following sequence diagram shows how the MarkCommand operation works:","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"JordanChua"},"content":"![MarkCommandSequenceDiagram](images/MarkCommandSequenceDiagram.jpg)","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"JordanChua"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"JordanChua"},"content":"**Implementation Choice: Why MarkCommand is implemented this way**","lastModifiedDate":"2022-10-21"},{"lineNumber":347,"author":{"gitId":"JordanChua"},"content":"* We have only chosen to consider 3 general statuses {`YTS`, `IP`, `DONE`} since these are very general","lastModifiedDate":"2022-10-21"},{"lineNumber":348,"author":{"gitId":"eugenelmj"},"content":"labels that the Professor can use to identify the current status of an FYP project. This makes it very user-friendly","lastModifiedDate":"2022-10-22"},{"lineNumber":349,"author":{"gitId":"JordanChua"},"content":"  since there are a fixed number of statuses that can be used.","lastModifiedDate":"2022-10-21"},{"lineNumber":350,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":351,"author":{"gitId":"JordanChua"},"content":"* We have also used the studentId to uniquely identify the project of the student the Professor","lastModifiedDate":"2022-10-21"},{"lineNumber":352,"author":{"gitId":"JordanChua"},"content":"is trying to find. Here we have made an assumption that there the StudentId uniquely identifies the FYP project","lastModifiedDate":"2022-10-21"},{"lineNumber":353,"author":{"gitId":"JordanChua"},"content":"  (i.e. a student can only take exactly 1 FYP project under a certain Professor)","lastModifiedDate":"2022-10-21"},{"lineNumber":354,"author":{"gitId":"JordanChua"},"content":"  This makes the Mark Command relatively easy to use in practice.","lastModifiedDate":"2022-10-21"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"JordanChua"},"content":"**Other Alternatives:**","lastModifiedDate":"2022-10-21"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"JordanChua"},"content":"* **Alternative 1:** Extend the Edit command to include the MarkCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":359,"author":{"gitId":"JordanChua"},"content":"    * Pros: Easier to implement.","lastModifiedDate":"2022-10-22"},{"lineNumber":360,"author":{"gitId":"JordanChua"},"content":"    * Cons: No clear distinction between tags and project status","lastModifiedDate":"2022-10-21"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"SweetPotato0213"},"content":"###  `Help` Feature","lastModifiedDate":"2022-10-22"},{"lineNumber":363,"author":{"gitId":"SweetPotato0213"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":364,"author":{"gitId":"SweetPotato0213"},"content":"The proposed `Help` Feature provides the professor or students with useful information on how to optimally make use of this Jeryl app.","lastModifiedDate":"2022-10-22"},{"lineNumber":365,"author":{"gitId":"SweetPotato0213"},"content":"The `Help` feature mechanism is facilitated by `HelpCommand` and `HelpCommandParser`. `HelpCommand` extends from the abstract class `Command`","lastModifiedDate":"2022-10-22"},{"lineNumber":366,"author":{"gitId":"SweetPotato0213"},"content":"while `HelpCommandParser` extends from the interface `Parser`.","lastModifiedDate":"2022-10-22"},{"lineNumber":367,"author":{"gitId":"SweetPotato0213"},"content":"More specific features like `HelpAddCommand` and `HelpDeleteCommand` extend from `HelpCommand` to serve for certain specific help requests.","lastModifiedDate":"2022-10-22"},{"lineNumber":368,"author":{"gitId":"SweetPotato0213"},"content":"To summarize, it implements the following operation:","lastModifiedDate":"2022-10-22"},{"lineNumber":369,"author":{"gitId":"SweetPotato0213"},"content":"* `HelpCommand#execute()` — oversees the execution process for `HelpCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":370,"author":{"gitId":"SweetPotato0213"},"content":"* `HelpAddCommand#execute()` — oversees the execution process for `HelpAddCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":371,"author":{"gitId":"SweetPotato0213"},"content":"* `HelpDeleteCommand#execute()` — oversees the execution process for `HelpDeleteCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":372,"author":{"gitId":"SweetPotato0213"},"content":"* `HelpFindCommand#execute()` — oversees the execution process for `HelpFindCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":373,"author":{"gitId":"SweetPotato0213"},"content":"* `HelpListCommand#execute()` — oversees the execution process for `HelpListCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":374,"author":{"gitId":"SweetPotato0213"},"content":"* `HelpMarkCommand#execute()` — oversees the execution process for `HelpMarkCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":375,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":376,"author":{"gitId":"SweetPotato0213"},"content":"Given below is an example usage scenario of `HelpCommand`:","lastModifiedDate":"2022-10-22"},{"lineNumber":377,"author":{"gitId":"SweetPotato0213"},"content":"1. The user enters the `help` command or also provides the specific command of interest.","lastModifiedDate":"2022-10-22"},{"lineNumber":378,"author":{"gitId":"SweetPotato0213"},"content":"2. `FypManagerParser` creates a new `HelpCommandParser` after preliminary check of user input.","lastModifiedDate":"2022-10-22"},{"lineNumber":379,"author":{"gitId":"SweetPotato0213"},"content":"3. `HelpCommandParser` creates a new `HelpCommand` based on the processed input.","lastModifiedDate":"2022-10-22"},{"lineNumber":380,"author":{"gitId":"SweetPotato0213"},"content":"4. `LogicManager` executes the `HelpCommand` using the `LogicManager#execute()` method.","lastModifiedDate":"2022-10-22"},{"lineNumber":381,"author":{"gitId":"SweetPotato0213"},"content":"5. `HelpCommand` shows help message, and then creates a `CommandResult` and returns it to `LogicManager` to complete the command.","lastModifiedDate":"2022-10-22"},{"lineNumber":382,"author":{"gitId":"SweetPotato0213"},"content":"6. If it is just `HelpCommand`, `HelpWindow` would pop up with a link to JERYL user guide on it.","lastModifiedDate":"2022-10-22"},{"lineNumber":383,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":384,"author":{"gitId":"SweetPotato0213"},"content":"The following sequence diagram shows how the help command works:","lastModifiedDate":"2022-10-22"},{"lineNumber":385,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":386,"author":{"gitId":"SweetPotato0213"},"content":"\u003cimg src\u003d\"images/helpMessage.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":387,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":388,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":389,"author":{"gitId":"YH-15"},"content":"###  `Exit` Feature","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"YH-15"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":391,"author":{"gitId":"YH-15"},"content":"The proposed `Exit` Feature allows the professor to list all FYP students in the FYP Manager.","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"YH-15"},"content":"The `Exit` feature mechanism is facilitated by `ExitCommand`. It extends from the abstract class `Command`.","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"YH-15"},"content":"To summarize, it implements the following operation:","lastModifiedDate":"2022-10-22"},{"lineNumber":394,"author":{"gitId":"YH-15"},"content":"* `ListCommand#execute()` — oversees the execution process for `ExitCommand`.","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":396,"author":{"gitId":"YH-15"},"content":"Given below is an example usage scenario of `ExitCommand`:","lastModifiedDate":"2022-10-27"},{"lineNumber":397,"author":{"gitId":"YH-15"},"content":"1. The user enters the `Exit` command","lastModifiedDate":"2022-10-27"},{"lineNumber":398,"author":{"gitId":"YH-15"},"content":"2. `FypManagerParser` creates a new `ExitCommand` after preliminary check of user input.","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"YH-15"},"content":"3. `LogicManager` executes the `ExitCommand` using the `LogicManager#execute()` method.","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"YH-15"},"content":"4. `ExitCommand` updates a `ObservableList\u003cStudent\u003e`, and then creates a `CommandResult` and returns it to `LogicManager` to complete the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":401,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":402,"author":{"gitId":"YH-15"},"content":"The following sequence diagram shows how the list command works:","lastModifiedDate":"2022-10-27"},{"lineNumber":403,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":404,"author":{"gitId":"YH-15"},"content":"\u003cimg src\u003d\"images/ListCommandSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":405,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":406,"author":{"gitId":"YH-15"},"content":"The following activity diagram summarizes what happens when a user executes a list command:","lastModifiedDate":"2022-10-27"},{"lineNumber":407,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":408,"author":{"gitId":"YH-15"},"content":"\u003cimg src\u003d\"images/ListCommandActivityDiagram.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":409,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":410,"author":{"gitId":"eugenelmj"},"content":"### \\[Proposed\\] `FindCommand` Feature","lastModifiedDate":"2022-10-22"},{"lineNumber":411,"author":{"gitId":"eugenelmj"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-22"},{"lineNumber":412,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":413,"author":{"gitId":"eugenelmj"},"content":"The proposed FindCommand Feature allows the user to find for specific keywords in certain fields. The current","lastModifiedDate":"2022-10-25"},{"lineNumber":414,"author":{"gitId":"eugenelmj"},"content":"implementation supports finding keywords in four fields:","lastModifiedDate":"2022-10-25"},{"lineNumber":415,"author":{"gitId":"eugenelmj"},"content":"1) `StudentId`","lastModifiedDate":"2022-10-25"},{"lineNumber":416,"author":{"gitId":"eugenelmj"},"content":"2) `StudentName`","lastModifiedDate":"2022-10-25"},{"lineNumber":417,"author":{"gitId":"eugenelmj"},"content":"3)  `Tags` (accorded to a student)","lastModifiedDate":"2022-10-25"},{"lineNumber":418,"author":{"gitId":"eugenelmj"},"content":"4) `ProjectName`.","lastModifiedDate":"2022-10-25"},{"lineNumber":419,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":420,"author":{"gitId":"eugenelmj"},"content":"This is a new enhancement in v1.3, as older iterations only supported finding projects by their titles,","lastModifiedDate":"2022-10-25"},{"lineNumber":421,"author":{"gitId":"eugenelmj"},"content":"while the newest iteration supports finding projects by any of the above four fields. We hope that this allows the user","lastModifiedDate":"2022-10-25"},{"lineNumber":422,"author":{"gitId":"RussellDash332"},"content":"to be able to filter the projects more efficiently. (for instance, by project names:","lastModifiedDate":"2022-10-28"},{"lineNumber":423,"author":{"gitId":"eugenelmj"},"content":"***NeuralNetwork***, ***Blockchain***, etc.)","lastModifiedDate":"2022-10-25"},{"lineNumber":424,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":425,"author":{"gitId":"eugenelmj"},"content":"The FindCommand feature takes in a specified field (one of the four aforementioned fields), and a keyword specified","lastModifiedDate":"2022-10-25"},{"lineNumber":426,"author":{"gitId":"eugenelmj"},"content":"by the user. FypManager then returns a list of projects whose field contains the keyword inputted.","lastModifiedDate":"2022-10-25"},{"lineNumber":427,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":428,"author":{"gitId":"eugenelmj"},"content":"Note that the keyword is case-insensitive, can contain arbitrary spacing, and is field-specific.","lastModifiedDate":"2022-10-25"},{"lineNumber":429,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":430,"author":{"gitId":"eugenelmj"},"content":"Given below is an example usage scenario and how FindCommand is utilised:","lastModifiedDate":"2022-10-22"},{"lineNumber":431,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":432,"author":{"gitId":"eugenelmj"},"content":"Step 1. The user launches the application for the first time. The \u0027FypManager\u0027 will be initialised with its","lastModifiedDate":"2022-10-22"},{"lineNumber":433,"author":{"gitId":"eugenelmj"},"content":"\u0027FypManager\u0027 state.","lastModifiedDate":"2022-10-22"},{"lineNumber":434,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":435,"author":{"gitId":"RussellDash332"},"content":"Step 2: The user finds a project by keying in `find -p tree` to find all projects whose name contains the keyword","lastModifiedDate":"2022-10-27"},{"lineNumber":436,"author":{"gitId":"eugenelmj"},"content":"`tree`. FypManager returns a list of projects whose names contain the `tree` keyword.","lastModifiedDate":"2022-10-25"},{"lineNumber":437,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":438,"author":{"gitId":"eugenelmj"},"content":"![FindCommandState1](images/FindCommandState1.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":439,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":440,"author":{"gitId":"eugenelmj"},"content":"Step 3: Suppose that the user wants to find another project with keyword `blockchain`. The user keys in ","lastModifiedDate":"2022-10-22"},{"lineNumber":441,"author":{"gitId":"RussellDash332"},"content":"`find -p blockchain` to find all projects which contain the keyword `blockchain`. FypManager returns an empty list,","lastModifiedDate":"2022-10-27"},{"lineNumber":442,"author":{"gitId":"eugenelmj"},"content":"as there is no project whose project name contains `blockchain`.","lastModifiedDate":"2022-10-22"},{"lineNumber":443,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":444,"author":{"gitId":"eugenelmj"},"content":"![FindCommandState2](images/FindCommandState2.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":445,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":446,"author":{"gitId":"JordanChua"},"content":"The following sequence diagram shows how the FindCommand operation works:","lastModifiedDate":"2022-10-26"},{"lineNumber":447,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":448,"author":{"gitId":"eugenelmj"},"content":"![FindCommandSequenceDiagram](images/FindCommandSequenceDiagram.png)","lastModifiedDate":"2022-10-22"},{"lineNumber":449,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":450,"author":{"gitId":"eugenelmj"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":451,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":452,"author":{"gitId":"eugenelmj"},"content":"**Implementation Choice: Why FindCommand is implemented this way**","lastModifiedDate":"2022-10-22"},{"lineNumber":453,"author":{"gitId":"eugenelmj"},"content":"* We have implemented FindCommand to find a student\u0027s project by four different fields. This is practical, since","lastModifiedDate":"2022-10-25"},{"lineNumber":454,"author":{"gitId":"eugenelmj"},"content":"  different users would want to find the relevant projects by different fields, making this a more versatile tool to use","lastModifiedDate":"2022-10-25"},{"lineNumber":455,"author":{"gitId":"eugenelmj"},"content":"  as a FypManager tool.","lastModifiedDate":"2022-10-25"},{"lineNumber":456,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":457,"author":{"gitId":"eugenelmj"},"content":"* We have allowed the user to be able to search using different keywords (so long as they are separated by ***/*** ),","lastModifiedDate":"2022-10-25"},{"lineNumber":458,"author":{"gitId":"eugenelmj"},"content":"  which lets the user be more stringent in his/her search criteria.","lastModifiedDate":"2022-10-25"},{"lineNumber":459,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":460,"author":{"gitId":"eugenelmj"},"content":"* Furthermore, we have made the input more flexible by making it case-insensitive, helping users who are not particularly","lastModifiedDate":"2022-10-25"},{"lineNumber":461,"author":{"gitId":"eugenelmj"},"content":"  careful with their input of capital-cases or lower-cases. This also mimics real-life query engines, which usually","lastModifiedDate":"2022-10-25"},{"lineNumber":462,"author":{"gitId":"eugenelmj"},"content":"  allow users to type their search keywords without fretting about whether there are upper-cases in the keyword.","lastModifiedDate":"2022-10-25"},{"lineNumber":463,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":464,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":465,"author":{"gitId":"eugenelmj"},"content":"**Other Alternatives:**","lastModifiedDate":"2022-10-22"},{"lineNumber":466,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":467,"author":{"gitId":"eugenelmj"},"content":"***v1.3 update: the following has been achieved as of this update. :)***","lastModifiedDate":"2022-10-25"},{"lineNumber":468,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":469,"author":{"gitId":"eugenelmj"},"content":"* **Alternative 1:** Extend the FindCommand by allowing the user to search by fields other than project name","lastModifiedDate":"2022-10-22"},{"lineNumber":470,"author":{"gitId":"eugenelmj"},"content":"    * Pros: Allows the users to search using more fields instead of ProjectName alone.","lastModifiedDate":"2022-10-22"},{"lineNumber":471,"author":{"gitId":"eugenelmj"},"content":"    * Cons: Harder to implement. And requires inclusion of a suffix.","lastModifiedDate":"2022-10-22"},{"lineNumber":472,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":473,"author":{"gitId":"eugenelmj"},"content":"* **Alternative 2:** Allow the user to search for their keywords across all fields without specifying a field","lastModifiedDate":"2022-10-25"},{"lineNumber":474,"author":{"gitId":"eugenelmj"},"content":"    * Pros: More comprehensive search for projects with the required keyword.","lastModifiedDate":"2022-10-25"},{"lineNumber":475,"author":{"gitId":"eugenelmj"},"content":"    * Cons: Much harder to implement, as it requires a field-less search.","lastModifiedDate":"2022-10-25"},{"lineNumber":476,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":477,"author":{"gitId":"JordanChua"},"content":"### `Sort` Feature","lastModifiedDate":"2022-10-27"},{"lineNumber":478,"author":{"gitId":"JordanChua"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-26"},{"lineNumber":479,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":480,"author":{"gitId":"RussellDash332"},"content":"This feature allows professors to sort the FYP projects by their project name, or by","lastModifiedDate":"2022-10-28"},{"lineNumber":481,"author":{"gitId":"JordanChua"},"content":"the project status in the order {YTS,IP,DONE}. ","lastModifiedDate":"2022-10-26"},{"lineNumber":482,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":483,"author":{"gitId":"JordanChua"},"content":"#### Implementation details","lastModifiedDate":"2022-10-26"},{"lineNumber":484,"author":{"gitId":"RussellDash332"},"content":"The `Sort` feature is facilitated by 2 main Commands: `SortProjectNameCommand` and `SortProjectStatusCommand`.","lastModifiedDate":"2022-10-28"},{"lineNumber":485,"author":{"gitId":"JordanChua"},"content":"Both of these commands extend from the abstract `Command`class. Note that we have fixed the sorting order","lastModifiedDate":"2022-10-26"},{"lineNumber":486,"author":{"gitId":"JordanChua"},"content":"of `SortProjectStatusCommand` to be sorted in the order {YTS,IP,DONE} since projects that have YTS are more urgent,","lastModifiedDate":"2022-10-26"},{"lineNumber":487,"author":{"gitId":"JordanChua"},"content":"hence we have placed them at the front of our FYP manager, followed by those that are IP, and finally ","lastModifiedDate":"2022-10-26"},{"lineNumber":488,"author":{"gitId":"JordanChua"},"content":"those that are DONE which are of the least urgency.","lastModifiedDate":"2022-10-26"},{"lineNumber":489,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":490,"author":{"gitId":"RussellDash332"},"content":"We give an example usage scenario of `SortProjectNameCommand` and `SortProjectStatusCommand`","lastModifiedDate":"2022-10-28"},{"lineNumber":491,"author":{"gitId":"RussellDash332"},"content":"* `SortProjectNameCommand`","lastModifiedDate":"2022-10-28"},{"lineNumber":492,"author":{"gitId":"RussellDash332"},"content":"    1. The user enters `sort -p` if he wishes to execute the `SortProjectNameCommand`","lastModifiedDate":"2022-10-28"},{"lineNumber":493,"author":{"gitId":"RussellDash332"},"content":"    2. FypManagerParser creates a new `SortProjectNameCommand` after preliminary check of user input.","lastModifiedDate":"2022-10-28"},{"lineNumber":494,"author":{"gitId":"RussellDash332"},"content":"    3. `LogicManager` executes the `SortProjectNameCommand` using the `LogicManager#execute()` method.","lastModifiedDate":"2022-10-28"},{"lineNumber":495,"author":{"gitId":"RussellDash332"},"content":"    4. `SortProjectNameCommand` creates a `CommandResult` and returns it to `LogicManager`, which will be","lastModifiedDate":"2022-10-28"},{"lineNumber":496,"author":{"gitId":"RussellDash332"},"content":"       identified as a `SortProjectNameCommand` so that our `MainWindow` will show the sorted List.","lastModifiedDate":"2022-10-28"},{"lineNumber":497,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":498,"author":{"gitId":"RussellDash332"},"content":"![SortProjectNameCommandSequenceDiagram](images/SortProjectNameCommandSequenceDiagram.jpg)","lastModifiedDate":"2022-10-28"},{"lineNumber":499,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":500,"author":{"gitId":"JordanChua"},"content":"* `SortProjectStatusCommand`","lastModifiedDate":"2022-10-26"},{"lineNumber":501,"author":{"gitId":"JordanChua"},"content":"    1. The user enters `sort -s` if he wishes to execute the `SortProjectStatusCommand`","lastModifiedDate":"2022-10-26"},{"lineNumber":502,"author":{"gitId":"RussellDash332"},"content":"    2. FypManagerParser creates a new `SortProjectNameCommand` after preliminary check of user input.","lastModifiedDate":"2022-10-28"},{"lineNumber":503,"author":{"gitId":"JordanChua"},"content":"    3. `LogicManager` executes the `SortProjectStatusCommand` using the `LogicManager#execute()` method.","lastModifiedDate":"2022-10-26"},{"lineNumber":504,"author":{"gitId":"JordanChua"},"content":"    4. `SortProjectStatusCommand` creates a `CommandResult` and returns it to `LogicManager`, which will be ","lastModifiedDate":"2022-10-27"},{"lineNumber":505,"author":{"gitId":"JordanChua"},"content":"        identified as a `SortProjectStatusCommand` so that our `MainWindow` will show the sorted List.","lastModifiedDate":"2022-10-27"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":507,"author":{"gitId":"JordanChua"},"content":"![SortProjectStatusCommandSequenceDiagram](images/SortProjectStatusCommandSequenceDiagram.jpg)","lastModifiedDate":"2022-10-26"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":509,"author":{"gitId":"JordanChua"},"content":"#### Future Implementations","lastModifiedDate":"2022-10-26"},{"lineNumber":510,"author":{"gitId":"JordanChua"},"content":"* Sorting of deadlines to be included in future iterations as well","lastModifiedDate":"2022-10-26"},{"lineNumber":511,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":512,"author":{"gitId":"YH-15"},"content":"###  `Exit` Feature","lastModifiedDate":"2022-10-27"},{"lineNumber":513,"author":{"gitId":"YH-15"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":514,"author":{"gitId":"YH-15"},"content":"The proposed `Exit` Feature allows the professor to exit the FYP Manager.","lastModifiedDate":"2022-10-27"},{"lineNumber":515,"author":{"gitId":"YH-15"},"content":"The `Exit` feature mechanism is facilitated by `ExitCommand`. It extends from the abstract class `Command`.","lastModifiedDate":"2022-10-27"},{"lineNumber":516,"author":{"gitId":"YH-15"},"content":"To summarize, it implements the following operation:","lastModifiedDate":"2022-10-27"},{"lineNumber":517,"author":{"gitId":"YH-15"},"content":"* `ExitCommand#execute()` — oversees the execution process for `ExitCommand`.","lastModifiedDate":"2022-10-27"},{"lineNumber":518,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":519,"author":{"gitId":"YH-15"},"content":"Given below is an example usage scenario of `ExitCommand`:","lastModifiedDate":"2022-10-27"},{"lineNumber":520,"author":{"gitId":"YH-15"},"content":"1. The user enters the `Exit` command.","lastModifiedDate":"2022-10-27"},{"lineNumber":521,"author":{"gitId":"YH-15"},"content":"2. `UiManager` calls `MainWindow#fillInnerParts()`.","lastModifiedDate":"2022-10-27"},{"lineNumber":522,"author":{"gitId":"YH-15"},"content":"3. `MainWindow#fillInnerParts()` executes a `executeCommand()` and creates a `CommandResult`.","lastModifiedDate":"2022-10-27"},{"lineNumber":523,"author":{"gitId":"YH-15"},"content":"4. `LogicManager` executes the `ExitCommand` using the `LogicManager#execute()` method.","lastModifiedDate":"2022-10-27"},{"lineNumber":524,"author":{"gitId":"YH-15"},"content":"4.1. `fypManagerParser` will parse the command using `parseCommand` and generate ","lastModifiedDate":"2022-10-27"},{"lineNumber":525,"author":{"gitId":"YH-15"},"content":"4.2. `ExitCommand` then creates a `CommandResult` and returns it to `MainWindow` to complete the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":526,"author":{"gitId":"YH-15"},"content":"4.3. `StorageManager` will save the record using method `StorageManager#saveFypManager()`.","lastModifiedDate":"2022-10-27"},{"lineNumber":527,"author":{"gitId":"YH-15"},"content":"5. `handleExit()` is then executed to hide the main window.","lastModifiedDate":"2022-10-27"},{"lineNumber":528,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":529,"author":{"gitId":"YH-15"},"content":"The following sequence diagram shows how the list command works:","lastModifiedDate":"2022-10-27"},{"lineNumber":530,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":531,"author":{"gitId":"YH-15"},"content":"\u003cimg src\u003d\"images/ExitSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":533,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":538,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":539,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"JordanChua"},"content":"* NUS SoC Professors taking on and managing FYP students doing projects using SoC","lastModifiedDate":"2022-10-04"},{"lineNumber":552,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":555,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"eugenelmj"},"content":"**Value proposition**: To provide a platform for easier access to SoC professors to their students’ FYP status, rather than via plain e-mail correspondences.","lastModifiedDate":"2022-10-06"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"eugenelmj"},"content":"| Priority | As a/an …​                                     | I can …​                                                                                                  | So that I can…​                                                                             |","lastModifiedDate":"2022-10-06"},{"lineNumber":564,"author":{"gitId":"RussellDash332"},"content":"|----------|------------------------------------------------|-----------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-14"},{"lineNumber":565,"author":{"gitId":"eugenelmj"},"content":"| `* * *`  | responsible SoC professor                      | clear/mark done a project                                                                                 | provide timely updates for my students to track their FYP progress                          |","lastModifiedDate":"2022-10-03"},{"lineNumber":566,"author":{"gitId":"eugenelmj"},"content":"| `* * *`  | first time user                                | view a list of commands that I can try as well as the details of each command                             | quickly start to manage my students’ FYPs using this system/app                             |","lastModifiedDate":"2022-10-03"},{"lineNumber":567,"author":{"gitId":"eugenelmj"},"content":"| `* * *`  | no-time-to-waste SoC professor                 | search the projects using specific keywords                                                               | access the progress of projects of interest with just a few clicks                          |","lastModifiedDate":"2022-10-06"},{"lineNumber":568,"author":{"gitId":"SweetPotato0213"},"content":"| `* * *`  | organised SoC professor                        | remove students if they dropped a FYP that was under me                                                   | keep the consolidated list of FYPs neat and organised                                       |","lastModifiedDate":"2022-10-05"},{"lineNumber":569,"author":{"gitId":"eugenelmj"},"content":"| `* * *`  | organised SoC professor                        | remove students if they completed a FYP that was under me, and move them to a “completed” FYP list        | keep the consolidated list of FYPs neat and organised [coming soon]                         |","lastModifiedDate":"2022-10-06"},{"lineNumber":570,"author":{"gitId":"JordanChua"},"content":"| `* * *`  | SoC professor                                  | add students if they are taking their FYP under me                                                        | keep track of those FYP projects under me easily                                            |","lastModifiedDate":"2022-10-04"},{"lineNumber":571,"author":{"gitId":"eugenelmj"},"content":"| `* * *`  | student with many email accounts               | update my e-mail address when I change on the app                                                         | be easily contacted by my professors when they need to find me [coming soon]                |","lastModifiedDate":"2022-10-03"},{"lineNumber":572,"author":{"gitId":"eugenelmj"},"content":"| `* * *`  | SoC professor                                  | view the list of all students taking their FYP under me                                                   | get to know more information about my own students                                          |","lastModifiedDate":"2022-10-03"},{"lineNumber":573,"author":{"gitId":"eugenelmj"},"content":"| `* *`    | responsible FYP student                        | check my upcoming deadlines with an option to see yet-to-submit deliverables                              | avoid missing any submission deadlines by accident [coming soon]                            |","lastModifiedDate":"2022-10-06"},{"lineNumber":574,"author":{"gitId":"PokezardVGC"},"content":"| `* *`    | SoC professor                                  | view the progress updates that my students upload                                                         | deliberate about what the next course of action should be [coming soon]                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":575,"author":{"gitId":"eugenelmj"},"content":"| `* *`    | eager student                                  | receive feedback promptly, i.e. read comments and suggestions from my professor ASAP                      | set a clear direction for my FYP in advance [coming soon]                                   |","lastModifiedDate":"2022-10-06"},{"lineNumber":576,"author":{"gitId":"eugenelmj"},"content":"| `* *`    | responsible FYP student                        | update my FYP progress through the app                                                                    | inform my professor on my progress [coming soon]                                            |","lastModifiedDate":"2022-10-06"},{"lineNumber":577,"author":{"gitId":"eugenelmj"},"content":"| `* *`    | critical student                               | provide feedbacks on my FYP guidance and evaluations by my professor                                      | help the FYP management team to further improve [coming soon]                               |","lastModifiedDate":"2022-10-06"},{"lineNumber":578,"author":{"gitId":"eugenelmj"},"content":"| `* *`    | helpful SoC professor                          | put tags (e.g. “Ahead of time”, “Up to task”, “Behind schedule”) on my student\u0027s FYP                      | clearly indicate my student\u0027s progress relative to the timeline [coming soon]               |","lastModifiedDate":"2022-10-06"},{"lineNumber":579,"author":{"gitId":"PokezardVGC"},"content":"| `* *`    | non-confrontational (i.e. shy) student         | push certain tags (e.g. “Assistance required!”, “Unable to complete :(”) to the application               | gather my professor’s attention without direct confrontation [coming soon]                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":580,"author":{"gitId":"RussellDash332"},"content":"| `* *`    | friendly SoC professor   　　　                   | share my availability with my students                                                                    | be booked on consultation slots by my students [coming soon]                                |","lastModifiedDate":"2022-10-14"},{"lineNumber":581,"author":{"gitId":"RussellDash332"},"content":"| `* *`    | troubled student   　　　                         | request for help from my professors by clicking on a button and indicating it’s urgency                   | alert the professor that I might need some assistance and how urgent it is [coming soon]    |","lastModifiedDate":"2022-10-14"},{"lineNumber":582,"author":{"gitId":"JordanChua"},"content":"| `*`      | fun-seeking professor/FYP student              | send “stickers” (similar to Telegram stickers) or emoji                                                   | have a fun experience while using the app [coming soon]                                     |","lastModifiedDate":"2022-10-04"},{"lineNumber":583,"author":{"gitId":"eugenelmj"},"content":"| `*`      | responsible FYP student                        | update my availability slots on the app                                                                   | let my professor know when I will be available to meet [coming soon]                        |","lastModifiedDate":"2022-10-06"},{"lineNumber":584,"author":{"gitId":"SweetPotato0213"},"content":"| `*`      | well-versed SoC professor                      | sort my student’s FYP based on what specialisation they are taking                                        | organise the FYPs better [coming soon]                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":585,"author":{"gitId":"eugenelmj"},"content":"| `*`      | meticulous SoC professor   　　　                 | see student\u0027s FYP sorted by research area first, followed by alphabetical order                           | gain quick and easy access to the details required [coming soon]                            |","lastModifiedDate":"2022-10-06"},{"lineNumber":586,"author":{"gitId":"RussellDash332"},"content":"| `*`      | proactive FYP student   　　　                    | view available consultation slots with my professor on the app                                            | easily plan my consultation sessions with my professor [coming soon]                        |","lastModifiedDate":"2022-10-14"},{"lineNumber":587,"author":{"gitId":"RussellDash332"},"content":"| `*`      | forgetful FYP student   　　　                    | be updated in real time on any comments tagged with varying urgency levels                                | fix any urgent mistakes for clarification as my Professor goes through my FYP [coming soon] |","lastModifiedDate":"2022-10-14"},{"lineNumber":588,"author":{"gitId":"RussellDash332"},"content":"| `*`      | organised SoC professor   　　　                  | set a deadline for one or more projects                                                                   | advise my students on what to be prioritized [coming soon]                                  |","lastModifiedDate":"2022-10-14"},{"lineNumber":589,"author":{"gitId":"RussellDash332"},"content":"| `*`      | proactive student   　　　                        | turn off (or on) the notification email from professors at any time                                       | avoid emails if I have already done the submissions [coming soon]                           |","lastModifiedDate":"2022-10-14"},{"lineNumber":590,"author":{"gitId":"RussellDash332"},"content":"| `*`      | busy SoC professor   　　　                       | see my students’ project titles and summaries at one glance                                               | save time from clicking into different links to access them [coming soon]                   |","lastModifiedDate":"2022-10-14"},{"lineNumber":591,"author":{"gitId":"RussellDash332"},"content":"| `*`      | insecure FYP student   　　　                     | ring or notify my professor(s) for help via the platform                                                  | get the immediate help that I require [coming soon]                                         |","lastModifiedDate":"2022-10-14"},{"lineNumber":592,"author":{"gitId":"RussellDash332"},"content":"| `*`      | clear-minded SoC professor   　　　               | filter the student’s FYP projects based on what specialisation they are doing (e.g. network research, AI) | gain quick access to the relevant FYP projects by categories [coming soon]                  |","lastModifiedDate":"2022-10-14"},{"lineNumber":593,"author":{"gitId":"RussellDash332"},"content":"| `*`      | organized SoC professor   　　　                  | have a separate tab to store all the files that I send to or receive from my students                     | refer to the related files easily [coming soon]                                             |","lastModifiedDate":"2022-10-14"},{"lineNumber":594,"author":{"gitId":"RussellDash332"},"content":"| `*`      | punctual SoC professor   　　　                   | be alarmed of the upcoming meetings when it’s almost the time                                             | join them on time. (e.g. 5 minutes before) [coming soon]                                    |","lastModifiedDate":"2022-10-14"},{"lineNumber":595,"author":{"gitId":"RussellDash332"},"content":"| `*`      | SoC professor who values maintainability   　　　 | integrate some existing SoC-made softwares within                                                         | have more familiarity with the platform [coming soon]                                       |","lastModifiedDate":"2022-10-14"},{"lineNumber":596,"author":{"gitId":"RussellDash332"},"content":"| `*`      | constructive SoC professor   　　　               | comment and suggest on my students’ current work                                                          | give my feedback in a fast and easy way [coming soon]                                       |","lastModifiedDate":"2022-10-14"},{"lineNumber":597,"author":{"gitId":"RussellDash332"},"content":"| `*`      | eager student   　　　                            | see the pending task with the next earliest deadline set by my professor                                  | know what I need to do next for my FYP [coming soon]                                        |","lastModifiedDate":"2022-10-14"},{"lineNumber":598,"author":{"gitId":"RussellDash332"},"content":"| `*`      | automation-loving SoC professor   　　　          | send auto emails to students with upcoming deadlines                                                      | remind them to work on the tasks by the deadline [coming soon]                              |","lastModifiedDate":"2022-10-14"},{"lineNumber":599,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":601,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-30"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":603,"author":{"gitId":"PokezardVGC"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-30"},{"lineNumber":604,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2022-09-30"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":606,"author":{"gitId":"PokezardVGC"},"content":"(For all use cases below, the **System** is the `JerylFypManager` and the **Actor** is the `Professor`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":607,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":608,"author":{"gitId":"PokezardVGC"},"content":"**1. Use case: UC01 - Adding FYP**","lastModifiedDate":"2022-09-30"},{"lineNumber":609,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":610,"author":{"gitId":"PokezardVGC"},"content":"**Preconditions: Professor knows the details of FYP to be added**","lastModifiedDate":"2022-09-30"},{"lineNumber":611,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":612,"author":{"gitId":"PokezardVGC"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"PokezardVGC"},"content":"1.  Professor requests to add a student FYP into the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":615,"author":{"gitId":"PokezardVGC"},"content":"2.  JerylFypManager adds the FYP details.","lastModifiedDate":"2022-09-30"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"PokezardVGC"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":618,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":619,"author":{"gitId":"PokezardVGC"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":620,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":621,"author":{"gitId":"PokezardVGC"},"content":"* 1a. The request given is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":622,"author":{"gitId":"PokezardVGC"},"content":"  * 1a1. JerylFypManager shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":623,"author":{"gitId":"PokezardVGC"},"content":"  * 1a2. Professor enters a new request.","lastModifiedDate":"2022-09-30"},{"lineNumber":624,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":625,"author":{"gitId":"PokezardVGC"},"content":"  Steps 1a1-1a2 are repeated until the request entered is correct.","lastModifiedDate":"2022-09-30"},{"lineNumber":626,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":627,"author":{"gitId":"PokezardVGC"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":628,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":629,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":630,"author":{"gitId":"PokezardVGC"},"content":"**2. Use case: UC02 - Searching Keyword**","lastModifiedDate":"2022-09-30"},{"lineNumber":631,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":632,"author":{"gitId":"PokezardVGC"},"content":"**Preconditions: Professor can recall part of the project name**","lastModifiedDate":"2022-09-30"},{"lineNumber":633,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":634,"author":{"gitId":"PokezardVGC"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":635,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":636,"author":{"gitId":"PokezardVGC"},"content":"1.  Professor wants to track the status of certain project(s).","lastModifiedDate":"2022-09-30"},{"lineNumber":637,"author":{"gitId":"PokezardVGC"},"content":"2.  Professor searches the project(s) using a specified keyword.","lastModifiedDate":"2022-09-30"},{"lineNumber":638,"author":{"gitId":"PokezardVGC"},"content":"3.  JerylFypManager displays the search results with a brief summary for each project.","lastModifiedDate":"2022-09-30"},{"lineNumber":639,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":640,"author":{"gitId":"PokezardVGC"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":641,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":642,"author":{"gitId":"PokezardVGC"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":643,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":644,"author":{"gitId":"PokezardVGC"},"content":"* 2a. The keyword given does not match any project name.","lastModifiedDate":"2022-09-30"},{"lineNumber":645,"author":{"gitId":"PokezardVGC"},"content":"    * 2a1. JerylFypManager shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":646,"author":{"gitId":"PokezardVGC"},"content":"    * 2a2. Professor tries again with another keyword.","lastModifiedDate":"2022-09-30"},{"lineNumber":647,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":648,"author":{"gitId":"PokezardVGC"},"content":"  Steps 2a1-2a2 are repeated until some projects are matched.","lastModifiedDate":"2022-09-30"},{"lineNumber":649,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":650,"author":{"gitId":"PokezardVGC"},"content":"  Use case resumes from step 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":651,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":652,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":653,"author":{"gitId":"PokezardVGC"},"content":"**3. Use case: UC03 - Marking Project Status**","lastModifiedDate":"2022-09-30"},{"lineNumber":654,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":655,"author":{"gitId":"PokezardVGC"},"content":"**Guarantees:**","lastModifiedDate":"2022-09-30"},{"lineNumber":656,"author":{"gitId":"eugenelmj"},"content":"* Project Status goes from “Yet to Start” (YTS) to “In Progress”  (IP); alternatively, from “In Progress” (IP) to “Done” (DONE).","lastModifiedDate":"2022-10-06"},{"lineNumber":657,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":658,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":659,"author":{"gitId":"PokezardVGC"},"content":"**Preconditions: Existence of said FYP in database**","lastModifiedDate":"2022-09-30"},{"lineNumber":660,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":661,"author":{"gitId":"PokezardVGC"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":662,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":663,"author":{"gitId":"PokezardVGC"},"content":"1.  Professor wants to modify the status of his student’s project, and he/she specifies the desired status change.","lastModifiedDate":"2022-09-30"},{"lineNumber":664,"author":{"gitId":"PokezardVGC"},"content":"2.  JerylFypManager toggles the status of the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":665,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":666,"author":{"gitId":"PokezardVGC"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":667,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":668,"author":{"gitId":"PokezardVGC"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":669,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":670,"author":{"gitId":"eugenelmj"},"content":"* 1a. Professor’s input of Student’s ID / Status Tag is incorrect (e.g. misspell), or Professor is accessing FYP that does not exist.","lastModifiedDate":"2022-10-03"},{"lineNumber":671,"author":{"gitId":"PokezardVGC"},"content":"    * 1a1. JerylFypManager shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":672,"author":{"gitId":"PokezardVGC"},"content":"    * 1a2. Professor keys in his input again.","lastModifiedDate":"2022-09-30"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"PokezardVGC"},"content":"    Steps 1a1-1a2 are repeated until the request entered is correct.","lastModifiedDate":"2022-09-30"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"PokezardVGC"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":677,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":678,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":679,"author":{"gitId":"PokezardVGC"},"content":"**4. Use case: UC04 - Removing FYP**","lastModifiedDate":"2022-09-30"},{"lineNumber":680,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":681,"author":{"gitId":"eugenelmj"},"content":"**Preconditions: Professor can recall the name/ID of the FYP**","lastModifiedDate":"2022-10-03"},{"lineNumber":682,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":683,"author":{"gitId":"PokezardVGC"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":684,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":685,"author":{"gitId":"eugenelmj"},"content":"1.  Professor requests to remove a student FYP from the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":686,"author":{"gitId":"PokezardVGC"},"content":"2.  JerylFypManager removes the FYP details.","lastModifiedDate":"2022-09-30"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":688,"author":{"gitId":"PokezardVGC"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":689,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":690,"author":{"gitId":"PokezardVGC"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":691,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":692,"author":{"gitId":"PokezardVGC"},"content":"* 1a. The request given is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":693,"author":{"gitId":"PokezardVGC"},"content":"    * 1a1. JerylFypManager shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":694,"author":{"gitId":"PokezardVGC"},"content":"    * 1a2. Professor enters a new request.","lastModifiedDate":"2022-09-30"},{"lineNumber":695,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":696,"author":{"gitId":"PokezardVGC"},"content":"  Steps 1a1-1a2 are repeated until the request entered is correct.","lastModifiedDate":"2022-09-30"},{"lineNumber":697,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":698,"author":{"gitId":"PokezardVGC"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2022-09-30"},{"lineNumber":699,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":700,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":701,"author":{"gitId":"PokezardVGC"},"content":"**5. Use case: UC05 - Help List**","lastModifiedDate":"2022-09-30"},{"lineNumber":702,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":703,"author":{"gitId":"PokezardVGC"},"content":"**Preconditions: Nil**","lastModifiedDate":"2022-09-30"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":705,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":707,"author":{"gitId":"PokezardVGC"},"content":"1.  Professor requests from JerylFypManager to list all possible commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":708,"author":{"gitId":"eugenelmj"},"content":"2.  JerylFypManager shows the list of possible commands and the format to be entered in.","lastModifiedDate":"2022-10-03"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":712,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":714,"author":{"gitId":"PokezardVGC"},"content":"* Nil","lastModifiedDate":"2022-09-30"},{"lineNumber":715,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":716,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":717,"author":{"gitId":"PokezardVGC"},"content":"**6. Use case: UC06 - List FYPs**","lastModifiedDate":"2022-09-30"},{"lineNumber":718,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":719,"author":{"gitId":"PokezardVGC"},"content":"**Preconditions: There exist FYP(s) in JerylFypManager**","lastModifiedDate":"2022-09-30"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"PokezardVGC"},"content":"1.  Professor requests for JerylFypManager to show the list of FYPs.","lastModifiedDate":"2022-09-30"},{"lineNumber":724,"author":{"gitId":"PokezardVGC"},"content":"2.  JerylFypManager shows a list of FYPs to the professor.","lastModifiedDate":"2022-09-30"},{"lineNumber":725,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":726,"author":{"gitId":"PokezardVGC"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"PokezardVGC"},"content":"* 2a. There are currently no FYPs that the professor is overseeing.","lastModifiedDate":"2022-09-30"},{"lineNumber":732,"author":{"gitId":"PokezardVGC"},"content":"    * 2a1. JerylFypManager tells the professor that he is currently not overseeing any FYPs.","lastModifiedDate":"2022-09-30"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"PokezardVGC"},"content":"**7. Use case: UC07 - Exit JerylFypManager**","lastModifiedDate":"2022-09-30"},{"lineNumber":738,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":739,"author":{"gitId":"PokezardVGC"},"content":"**Preconditions: Nil**","lastModifiedDate":"2022-09-30"},{"lineNumber":740,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":741,"author":{"gitId":"PokezardVGC"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":742,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":743,"author":{"gitId":"PokezardVGC"},"content":"1.  Professor requests to exit JerylFypManager.","lastModifiedDate":"2022-09-30"},{"lineNumber":744,"author":{"gitId":"PokezardVGC"},"content":"2.  JerylFypManager shows exit message.","lastModifiedDate":"2022-09-30"},{"lineNumber":745,"author":{"gitId":"PokezardVGC"},"content":"3.  JerylFypManager application is closed.","lastModifiedDate":"2022-09-30"},{"lineNumber":746,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":747,"author":{"gitId":"PokezardVGC"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":748,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":749,"author":{"gitId":"PokezardVGC"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":750,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":751,"author":{"gitId":"PokezardVGC"},"content":"* Nil","lastModifiedDate":"2022-09-30"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"PokezardVGC"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-30"},{"lineNumber":757,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"RussellDash332"},"content":"2.  User with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-10"},{"lineNumber":761,"author":{"gitId":"PokezardVGC"},"content":"3.  The system should respond in at most 1 second.","lastModifiedDate":"2022-09-30"},{"lineNumber":762,"author":{"gitId":"PokezardVGC"},"content":"4.  A user with no coding background should be able to use JerylFypManager.","lastModifiedDate":"2022-09-30"},{"lineNumber":763,"author":{"gitId":"PokezardVGC"},"content":"5.  Notification sent to users upon updates to FYPs.","lastModifiedDate":"2022-09-30"},{"lineNumber":764,"author":{"gitId":"PokezardVGC"},"content":"6.  Personal details of students should only be accessible by supervising professor.","lastModifiedDate":"2022-09-30"},{"lineNumber":765,"author":{"gitId":"PokezardVGC"},"content":"7.  System should be able to support the whole SoC cohort (around 1500 users) at the same time.","lastModifiedDate":"2022-09-30"},{"lineNumber":766,"author":{"gitId":"PokezardVGC"},"content":"8.  JerylFypManager is accessible 24/7.","lastModifiedDate":"2022-09-30"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"PokezardVGC"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-30"},{"lineNumber":771,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"eugenelmj"},"content":"* **FYP**: Final Year Project, taken by SoC students in their final year of study","lastModifiedDate":"2022-10-03"},{"lineNumber":774,"author":{"gitId":"eugenelmj"},"content":"* **SoC**: School of Computing, in National University of Singapore","lastModifiedDate":"2022-10-03"},{"lineNumber":775,"author":{"gitId":"eugenelmj"},"content":"* **JerylFypManager**: A platform used by SoC Professors for supervising student\u0027s FYP","lastModifiedDate":"2022-10-03"},{"lineNumber":776,"author":{"gitId":"eugenelmj"},"content":"* **Professor**: An academic staff of SoC who is supervising a student\u0027s FYP","lastModifiedDate":"2022-10-03"},{"lineNumber":777,"author":{"gitId":"eugenelmj"},"content":"* **Student**: A SoC student who is taking FYP in their final year of study","lastModifiedDate":"2022-10-03"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"PokezardVGC"},"content":"### Deleting a student","lastModifiedDate":"2022-10-22"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"PokezardVGC"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2022-10-22"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"YH-15"},"content":"   1. Prerequisites: List all students using the `Exit` command. Multiple students in the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"PokezardVGC"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-22"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SweetPotato0213":29,"eugenelmj":88,"JordanChua":74,"PokezardVGC":204,"YH-15":45,"-":318,"RussellDash332":72}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [FypManager’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"PokezardVGC":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"**JerylFypManager** is a desktop application catered to professors and final year project (FYP) students to manage and","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"track the progress of students’ FYP projects, as well as serving as a platform for professors to provide feedback on","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"their students’ progress. The application’s simple design provides a nifty platform to navigate through and present the","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"FYP projects in a concise manner.","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"1. Ensure you have Java `11` or above installed on your Computer.","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"2. Download the latest `JerylFypManager.jar` from [here](https://github.com/AY2223S1-CS2103-F09-1/tp/releases).","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"3. Copy the file to the desired folder you want to use as the _home folder_ for your FypManager.","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"4. Double-click the file to start the app. The GUI, as shown in the image below, should appear in a few seconds. ","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"PokezardVGC"},"content":"   Note how the app","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"   contains some sample data.\u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"   ![Ui](images/Ui.png) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"PokezardVGC"},"content":"5. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"   Some example commands that you can try:","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"    * **`list`** - lists all FYP projects the professor is supervising.","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"    * **`add -s i/A0123456G n/John Doe p/Automation of Selenium e/johndoe@gmail.com`** - adds the FYP project of the","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"      student named John Doe with student ID A0123456G, email `johndoe@gmail.com`, ","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"      and project titled _Automation of Selenium_.","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"    * **`delete -s i/A0123456G`** - deletes the FYP project of the student with student ID A0123456G.","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"    * **`mark i/A0123456G s/IP`** - marks the FYP project of the student with student ID A0123456G as _In Progress_.","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"PokezardVGC"},"content":"    * **`find machine`** - searches any FYP project names that has “machine” in its name, for example it will include","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"PokezardVGC"},"content":"      the FYP project named “Machine Learning”.","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"PokezardVGC"},"content":"    * **`help add -s`** - shows a message on how to use the `add -s` command.","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"    * **`help`** - shows the list of all commands available.","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":49,"author":{"gitId":"PokezardVGC"},"content":"    * **`exit`** - exits the application.","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"  e.g. in `add -s n/FYP_NAME`, `FYP_NAME` is a parameter which can be used as `add -s n/Neural Network`.","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"PokezardVGC"},"content":"*  Having multiple prefix parameter as inputs would result in latest (most right input) to be read. \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"PokezardVGC"},"content":"  e.g. `add -s i/A0123456J i/A6543210J n/Russell Dash` will be read as `add -s i/A6543210J n/Russell Dash`.","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"PokezardVGC"},"content":"  e.g. `n/FYP_NAME [t/TAG]` can be used as `n/Neural Network t/SOC` or as `n/Data Caching`.","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/SOC`, `t/SOC t/ML` etc.","lastModifiedDate":"2022-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"  e.g. if the command specifies `n/FYP_NAME t/TAG`, `t/TAG n/FYP_NAME` is also acceptable.","lastModifiedDate":"2022-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"  e.g. if the command specifies `list 456`, it will be interpreted as `list`.","lastModifiedDate":"2022-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"PokezardVGC"},"content":"* `STUDENT_ID` should be in the following format: **\"A\" + (7 digits) + (1 uppercase letter)**. \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"PokezardVGC"},"content":"  e.g. `A0123456G`.","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"PokezardVGC"},"content":"* `FYP_NAME` and `DEADLINE_NAME` should only include alphanumeric characters and spaces but","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"PokezardVGC"},"content":"**cannot start with a space**.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"PokezardVGC"},"content":"  e.g. `Support vector machine: some improvements` is invalid","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"PokezardVGC"},"content":"* `DEADLINE_DATETIME` can be in the format of **\"DD-MM-YYYY HH:mm\"** or **\"YYYY-MM-DD HH:mm\"**.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"PokezardVGC"},"content":"  e.g. `05-11-2022 08:00`, `2022-11-05 08:00`.","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"PokezardVGC"},"content":"* For deadline tasks, a priority rank specifies the importance of said task. \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"PokezardVGC"},"content":"  e.g. `delete -d i/A0123456X r/2` would delete the 2nd highest priority deadline for the student with student ","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"PokezardVGC"},"content":"  ID of A0123456X.","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"### Adding students FYP: `add`","lastModifiedDate":"2022-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"There are 2 types of `add` commands.","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"PokezardVGC"},"content":"1. `add -s`: Adds a new FYP of a student to the FYP manager. The same student ID should not exist in the FYP manager","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"PokezardVGC"},"content":"   previously.","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"   Format: `add [-s] i/STUDENT_ID n/STUDENT_NAME p/FYP_NAME e/EMAIL [t/TAG]…​`","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"PokezardVGC"},"content":"2. `add -d`: Adds a new deadline to a student specified by the student ID. The deadline name should not exist in this","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"PokezardVGC"},"content":"   student previously.","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"   Format: `add -d i/STUDENT_ID n/DEADLINE_NAME d/DEADLINE_DATETIME`","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"A student can have any number of tags! (including 0)","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":114,"author":{"gitId":"RussellDash332"},"content":"* `add -s i/A0123456G n/Jane Doe p/Neural Network e/e0123456@u.nus.edu t/NN t/Difficult`","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"RussellDash332"},"content":"* `add -s i/A0987654X n/Alex Yeoh p/Data Caching e/e09876567@u.nus.edu`","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"RussellDash332"},"content":"* `add i/A0987654X n/Alex Yeoh p/Data Caching e/e09876567@u.nus.edu`","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"RussellDash332"},"content":"* `add -d i/A0123456G n/Random Task d/23-10-2022 23:59`","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"RussellDash332"},"content":"### Removing students FYP: `delete`","lastModifiedDate":"2022-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"RussellDash332"},"content":"There are 2 types of `delete` commands.","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"RussellDash332"},"content":"1. `delete -s`: Removes a FYP from the FYP manager. The specified student ID must exist in the FYP manager previously.","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"RussellDash332"},"content":"   Format: `delete [-s] i/STUDENT_ID`","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"PokezardVGC"},"content":"2. `delete -d`: Removes a deadline assigned to a student specified by ID \u0026 a priority rank. The specified deadline must","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"PokezardVGC"},"content":"   exist in the student\u0027s deadline list previously.","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"   Format: `delete -d i/STUDENT_ID r/DEADLINE_RANK`","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"* `delete -s i/A0987654X`","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"RussellDash332"},"content":"* `delete i/A0987654X`","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"RussellDash332"},"content":"* `delete -d i/A0123456G r/1`","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"RussellDash332"},"content":"### Marking project status: `mark`","lastModifiedDate":"2022-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"Marks a FYP as \"Done\"/\"In Progress\"/\"Yet to Start\", etc.","lastModifiedDate":"2022-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"RussellDash332"},"content":"Format: `mark i/STUDENT_ID s/STATUS`","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":144,"author":{"gitId":"RussellDash332"},"content":"* Current supported statuses are as follows:","lastModifiedDate":"2022-09-21"},{"lineNumber":145,"author":{"gitId":"RussellDash332"},"content":"    * **\"DONE\"** - Done","lastModifiedDate":"2022-09-21"},{"lineNumber":146,"author":{"gitId":"RussellDash332"},"content":"    * **\"IP\"** - In Progress","lastModifiedDate":"2022-09-21"},{"lineNumber":147,"author":{"gitId":"RussellDash332"},"content":"    * **\"YTS\"** - Yet To Start","lastModifiedDate":"2022-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"PokezardVGC"},"content":"* Parsing of status is  *case-sensitive*: \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":150,"author":{"gitId":"PokezardVGC"},"content":"    * **DONE** instead of *Done*, *done*, etc.","lastModifiedDate":"2022-11-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":154,"author":{"gitId":"RussellDash332"},"content":"* `mark i/A0123456G s/DONE`","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"RussellDash332"},"content":"* `mark i/A0234567H s/YTS`","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"eugenelmj"},"content":"### Searching keyword: `find`","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"eugenelmj"},"content":"Finds projects whose field (as specified by user) contains any of the given keyword(s).","lastModifiedDate":"2022-11-03"},{"lineNumber":160,"author":{"gitId":"eugenelmj"},"content":"The four fields that the user can search by are:","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"RussellDash332"},"content":"1. `ProjectName`","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"PokezardVGC"},"content":"2. `StudentId`","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"PokezardVGC"},"content":"3. `StudentName`","lastModifiedDate":"2022-11-01"},{"lineNumber":165,"author":{"gitId":"PokezardVGC"},"content":"4. `Tags` (accorded to a student)","lastModifiedDate":"2022-11-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"RussellDash332"},"content":"Format for each variant of `find`:","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":169,"author":{"gitId":"RussellDash332"},"content":"1. `ProjectName`: `find [-p] KEYWORD/[KEYWORD2/KEYWORD3/…]`","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"PokezardVGC"},"content":"2. `StudentId`: `find -i KEYWORD/[KEYWORD2/KEYWORD3/…]`","lastModifiedDate":"2022-11-01"},{"lineNumber":171,"author":{"gitId":"PokezardVGC"},"content":"3. `StudentName`: `find -n KEYWORD/[KEYWORD2/KEYWORD3/…]`","lastModifiedDate":"2022-11-01"},{"lineNumber":172,"author":{"gitId":"PokezardVGC"},"content":"4. `Tags`: `find -t KEYWORD/[KEYWORD2/KEYWORD3/…]`","lastModifiedDate":"2022-11-01"},{"lineNumber":173,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"PokezardVGC"},"content":"* the `/` in the above examples shows multiple input parameters. \u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":175,"author":{"gitId":"eugenelmj"},"content":"  e.g. `find -i A0123456X/A0123456G` will search for all students with either student ID of *A0123456X* or *A0123456G*.","lastModifiedDate":"2022-11-03"},{"lineNumber":176,"author":{"gitId":"eugenelmj"},"content":"* Only the four specified fields above could be searched, and only one field can be searched at any one time.","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"RussellDash332"},"content":"* The keyword is case-insensitive, e.g. `Neural NetWORK` will match `neural network`.","lastModifiedDate":"2022-10-28"},{"lineNumber":178,"author":{"gitId":"RussellDash332"},"content":"* The keyword could contain spaces, e.g. `practical guide of machine learning` is allowed.","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"RussellDash332"},"content":"* Partial keywords will also be matched, e.g. `Ne` will match `neural network` and `Genetic Algorithm`.","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"RussellDash332"},"content":"* Leading and trailing spaces are ignored, e.g. ` neural network  ` will match `neural network`.","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"eugenelmj"},"content":"* Projects matching at least one keyword will be returned (i.e. `OR` search),","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"RussellDash332"},"content":"  e.g. `find -t neural network/tree` will match project tags containing `neural network` or `decision tree`.","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"RussellDash332"},"content":"* `find -t Neural Network` searches for all projects with at least one tag containing `Neural Network`.","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"RussellDash332"},"content":"* `find -p Neural/Network / Data` searches for all projects with `Neural` or `Network` or `Data` in their titles.","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"eugenelmj"},"content":"Remark: ","lastModifiedDate":"2022-11-03"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":191,"author":{"gitId":"eugenelmj"},"content":"* A neat alternative to `list`: `find -i a` or `find -i /a` will function the same way as `list` and returns a list ","lastModifiedDate":"2022-11-03"},{"lineNumber":192,"author":{"gitId":"eugenelmj"},"content":"  of all students, as student ID always begins with letter \u0027a\u0027.","lastModifiedDate":"2022-11-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":194,"author":{"gitId":"PokezardVGC"},"content":"### Edit student details: `edit`","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"eugenelmj"},"content":"Edits student details according to the input.","lastModifiedDate":"2022-11-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"Format: `edit STUDENT_ID [n/STUDENT_NAME] [p/FYP_NAME] [e/EMAIL] [t/TAG]…​`","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":200,"author":{"gitId":"RussellDash332"},"content":"* At least one of the optional fields must be present.","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"PokezardVGC"},"content":"Examples:","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"PokezardVGC"},"content":"* `edit A0123456G p/Food Genetics` sets the project name of the student with student ID `A0123456G` into","lastModifiedDate":"2022-11-01"},{"lineNumber":205,"author":{"gitId":"PokezardVGC"},"content":"  `Food Genetics`.","lastModifiedDate":"2022-11-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":207,"author":{"gitId":"PokezardVGC"},"content":"* `edit A0234567H n/John Hoe p/Food Genetics` sets the name of the student with student ID `A0123456G` into","lastModifiedDate":"2022-11-01"},{"lineNumber":208,"author":{"gitId":"PokezardVGC"},"content":"  `John Hoe` and at the same time sets the project name into `Food Genetics`.","lastModifiedDate":"2022-11-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"RussellDash332"},"content":"### Viewing help: `help`","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"RussellDash332"},"content":"Shows a list of valid commands or a help page on a particular command.","lastModifiedDate":"2022-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"RussellDash332"},"content":"Format: `help [COMMAND]`","lastModifiedDate":"2022-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":218,"author":{"gitId":"RussellDash332"},"content":"* `help add -s` - This shows a detailed help message on the `add -s` command.","lastModifiedDate":"2022-10-28"},{"lineNumber":219,"author":{"gitId":"RussellDash332"},"content":"* `help` - This shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"RussellDash332"},"content":"### List of FYPs: `list`","lastModifiedDate":"2022-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"RussellDash332"},"content":"Shows a list of final year projects with the student IDs.","lastModifiedDate":"2022-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"RussellDash332"},"content":"Format: `list`","lastModifiedDate":"2022-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"RussellDash332"},"content":"### Sorting the FYP list: `sort`","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"RussellDash332"},"content":"Shows the sorted list of final year projects based on a specific field.","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":231,"author":{"gitId":"RussellDash332"},"content":"The two fields that the user can sort by are:","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":233,"author":{"gitId":"RussellDash332"},"content":"1. `ProjectName`","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"PokezardVGC"},"content":"2. `ProjectStatus`","lastModifiedDate":"2022-11-01"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":236,"author":{"gitId":"PokezardVGC"},"content":"Format for each variant of `sort`:","lastModifiedDate":"2022-11-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"RussellDash332"},"content":"1. `ProjectName`: `sort [-p]`","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"PokezardVGC"},"content":"2. `ProjectStatus`: `sort -s`","lastModifiedDate":"2022-11-01"},{"lineNumber":240,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":241,"author":{"gitId":"RussellDash332"},"content":"### Clearing the FYP list: `clear`","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"RussellDash332"},"content":"Clears the FYP list.","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"RussellDash332"},"content":"Format: `clear`","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"RussellDash332"},"content":"### Exiting the application: `exit`","lastModifiedDate":"2022-09-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"PokezardVGC"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2022-11-01"},{"lineNumber":259,"author":{"gitId":"PokezardVGC"},"content":"the data of your previous FypManager home folder.","lastModifiedDate":"2022-11-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"RussellDash332"},"content":"| Action                     | Format, Examples                                                                                                                                    |","lastModifiedDate":"2022-09-21"},{"lineNumber":266,"author":{"gitId":"PokezardVGC"},"content":"|----------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-11-01"},{"lineNumber":267,"author":{"gitId":"RussellDash332"},"content":"| **Add Student**            | `add [-s] i/STUDENT_ID n/STUDENT_NAME p/FYP_NAME e/EMAIL [t/TAG]…​` \u003cbr\u003e e.g., `add -s i/A0987654X n/John Doe p/Data Caching e/e09876567@u.nus.edu` |","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"RussellDash332"},"content":"| **Add Deadline**           | `add -d i/STUDENT_ID n/DEADLINE_NAME d/DEADLINE_DATETIME` \u003cbr\u003e e.g., `add -d i/A0123456G n/Random Task d/23-10-2022 23:59`                          |","lastModifiedDate":"2022-10-28"},{"lineNumber":269,"author":{"gitId":"RussellDash332"},"content":"| **Delete Student**         | `delete [-s] id` \u003cbr\u003e e.g., `delete -s i/A0987654X`, `delete i/A0987654X`                                                                           |","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"RussellDash332"},"content":"| **Delete Deadline**        | `delete -d i/STUDENT_ID r/DEADLINE_RANK` \u003cbr\u003e e.g., `delete -d i/A0123456G r/1`                                                                     |","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"RussellDash332"},"content":"| **Mark**                   | `mark i/STUDENT_ID s/STATUS`\u003cbr\u003e e.g.,`mark i/A0123456G s/IP`                                                                                       |","lastModifiedDate":"2022-10-28"},{"lineNumber":272,"author":{"gitId":"RussellDash332"},"content":"| **Find by Project Name**   | `find [-p] KEYWORD/[KEYWORD2/KEYWORD3/…]`\u003cbr\u003e e.g., `find -p data / software`, `find data / software`                                               |","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"RussellDash332"},"content":"| **Find by Student ID**     | `find -i KEYWORD/[KEYWORD2/KEYWORD3/…]`\u003cbr\u003e e.g., `find -i 515W/123X/A09281`                                                                        |","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"RussellDash332"},"content":"| **Find by Student Name**   | `find -n KEYWORD/[KEYWORD2/KEYWORD3/…]`\u003cbr\u003e e.g., `find -n John`                                                                                    |","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"RussellDash332"},"content":"| **Find by Tags**           | `find -t KEYWORD/[KEYWORD2/KEYWORD3/…]`\u003cbr\u003e e.g., `find -t Handsome/Look`                                                                           |","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"RussellDash332"},"content":"| **Edit**                   | `edit STUDENT_ID [n/STUDENT_NAME] [p/FYP_NAME] [e/EMAIL]`\u003cbr\u003e e.g., `edit A0234567H n/John Hoe`                                                     |","lastModifiedDate":"2022-10-28"},{"lineNumber":277,"author":{"gitId":"RussellDash332"},"content":"| **Help**                   | `help [COMMAND]`\u003cbr\u003e e.g., `help add -s`, `help`                                                                                                    |","lastModifiedDate":"2022-10-28"},{"lineNumber":278,"author":{"gitId":"RussellDash332"},"content":"| **List**                   | `list`                                                                                                                                              |","lastModifiedDate":"2022-09-21"},{"lineNumber":279,"author":{"gitId":"RussellDash332"},"content":"| **Sort by Project Name**   | `sort [-p]`                                                                                                                                         |","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"RussellDash332"},"content":"| **Sort by Project Status** | `sort -s`                                                                                                                                           |","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"RussellDash332"},"content":"| **Clear**                  | `clear`                                                                                                                                             |","lastModifiedDate":"2022-10-28"},{"lineNumber":282,"author":{"gitId":"RussellDash332"},"content":"| **Exit**                   | `exit`                                                                                                                                              |","lastModifiedDate":"2022-09-21"},{"lineNumber":283,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"eugenelmj":11,"PokezardVGC":70,"-":117,"RussellDash332":85}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"RussellDash332"},"content":"    content: \"JerylFypManager\";","lastModifiedDate":"2022-09-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"RussellDash332":1}},{"path":"docs/diagrams/AddStudentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"start","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":":User executes add student command;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"if () then ([valid format])","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"    :Parser parses student details;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"    :Logic executes command;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"    if () then ([not a duplicate student])","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"        :Model executes addStudent();","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"    else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"        :UI shows error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"       endif","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    :UI shows error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"endif","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"stop","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"RussellDash332":20}},{"path":"docs/diagrams/AddStudentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"participant \":FypManagerParser\" as FypManagerParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"participant \":AddStudentCommandParser\" as AddStudentCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"participant \"a:AddStudentCommand\" as AddStudentCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"[-\u003e LogicManager : execute(\"add -s i/A0123456X n/John Doe\\nproj/Machine e/john@gmail.com\")","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"LogicManager -\u003e FypManagerParser : parseCommand(\"add -s i/A0123456X n/John Doe\\nproj/Machine e/john@gmail.com\")","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"activate FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"create AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"FypManagerParser -\u003e AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"activate AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommandParser --\u003e FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"deactivate AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"FypManagerParser -\u003e AddStudentCommandParser : parse(\"i/A0123456X n/John Doe\\np/Machine e/john@gmail.com\")","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"activate AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"create AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommandParser -\u003e AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"activate AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommand --\u003e AddStudentCommandParser : a","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"deactivate AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommandParser --\u003e FypManagerParser : a","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"deactivate AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommandParser -[hidden]-\u003e FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"destroy AddStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"FypManagerParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"deactivate FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"LogicManager -\u003e AddStudentCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"activate AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommand -\u003e Model : hasStudent(toAdd)","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"alt is a duplicate student","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"Model --\u003e AddStudentCommand : CommandException","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"else else","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"Model --\u003e AddStudentCommand : hasStudent","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommand -\u003e Model : addStudent(toAdd)","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"Model --\u003e AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"CommandResult --\u003e AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"end","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"AddStudentCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"deactivate AddStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"RussellDash332":81}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"user -[USER_COLOR]\u003e ui : \"delete -s i/A0123456X\"","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete -s i/A0123456X\")","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"PokezardVGC"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(p)","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveFypManager(fypManager)","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":2,"-":34,"RussellDash332":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"FypManager *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"FypManager *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"PokezardVGC"},"content":"UniqueStudentList -right-\u003e Student","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"PokezardVGC"},"content":"Student -up-\u003e \"*\" Tag","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"PokezardVGC"},"content":"Class UniqueStudentList","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"Class Student","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PokezardVGC"},"content":"Class DeadlineList","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"Class Email","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PokezardVGC"},"content":"Class ProjectName","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"Class ProjectStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PokezardVGC"},"content":"Class StudentId","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"Class StudentName","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PokezardVGC"},"content":"Class Tag","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"Student *--\u003e\"1\" StudentName","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PokezardVGC"},"content":"Student *--\u003e\"1\" StudentId","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PokezardVGC"},"content":"Student *--\u003e\"1\" Email","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"Student *--\u003e\"1\" ProjectName","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"Student *--\u003e\"1\" ProjectStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"Student *--\u003e\"*\" DeadlineList","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":22,"-":11}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"if () then ([command commits FypManager])","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    :Save FypManager to","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    fypManagerStateList;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":12}},{"path":"docs/diagrams/DeleteStudentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PokezardVGC"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PokezardVGC"},"content":"start","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PokezardVGC"},"content":":User executes delete student command;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"if () then ([valid format])","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    :Parser parses studentId;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    :Logic executes command;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    if () then ([Student exist in FYP Manager])","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PokezardVGC"},"content":"        :Model executes deleteStudent();","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PokezardVGC"},"content":"    else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PokezardVGC"},"content":"        :UI shows error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PokezardVGC"},"content":"       endif","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"PokezardVGC"},"content":"else ([else])","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"PokezardVGC"},"content":"    :UI shows error message;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"endif","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PokezardVGC"},"content":"stop","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PokezardVGC":20}},{"path":"docs/diagrams/DeleteStudentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PokezardVGC"},"content":"@startuml","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"PokezardVGC"},"content":"!include style.puml","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"participant \":FypManagerParser\" as FypManagerParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"participant \":DeleteStudentCommandParser\" as DeleteStudentCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"participant \"d:DeleteStudentCommand\" as DeleteStudentCommand LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"PokezardVGC"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"PokezardVGC"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"PokezardVGC"},"content":"end box","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"[-\u003e LogicManager : execute(\"delete -s i/A0123456X\")","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"PokezardVGC"},"content":"activate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"LogicManager -\u003e FypManagerParser : parseCommand(\"delete -s i/A0123456X\")","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"activate FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"create DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser -\u003e DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"activate DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommandParser --\u003e FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"deactivate DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"FypManagerParser -\u003e DeleteStudentCommandParser : parse(\"i/A0123456X\")","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"activate DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"create DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommandParser -\u003e DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"activate DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommand --\u003e DeleteStudentCommandParser : d","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"deactivate DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommandParser --\u003e FypManagerParser : d","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"deactivate DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommandParser -[hidden]-\u003e FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PokezardVGC"},"content":"destroy DeleteStudentCommandParser","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"deactivate FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"LogicManager -\u003e DeleteStudentCommand : execute()","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PokezardVGC"},"content":"activate DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommand -\u003e Model : deleteStudent(A0123456X)","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PokezardVGC"},"content":"activate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PokezardVGC"},"content":"Model --\u003e DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PokezardVGC"},"content":"deactivate Model","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"PokezardVGC"},"content":"create CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommand -\u003e CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"PokezardVGC"},"content":"activate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"PokezardVGC"},"content":"CommandResult --\u003e DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"PokezardVGC"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"PokezardVGC"},"content":"DeleteStudentCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"PokezardVGC"},"content":"deactivate DeleteStudentCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"PokezardVGC"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"PokezardVGC"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"PokezardVGC"},"content":"@enduml","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"PokezardVGC":66,"RussellDash332":3}},{"path":"docs/diagrams/ExitSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"@startuml","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"!include style.puml","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"participant \":UiManager\" as UiManager UI_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"participant \":CommandBox\" as CommandBox UI_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"end box","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"participant \":FypManagerParser\" as FypManagerParser LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"participant \":ExitCommand\" as ExitCommand LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"end box","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"participant \":StorageManager\" as StorageManager MODEL_COLOR","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"end box","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"[-\u003e UiManager : start()","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"activate UiManager","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"create MainWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"UiManager -\u003e MainWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"activate MainWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"MainWindow --\u003e  MainWindow : fillInnerParts()","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"MainWindow -\u003e LogicManager : execute(\"exit\")","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"activate LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"LogicManager -\u003e FypManagerParser : parseCommand(\"exit\")","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"activate FypManagerParser","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"create ExitCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"FypManagerParser -\u003e ExitCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"activate ExitCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"ExitCommand --\u003e FypManagerParser","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"FypManagerParser --\u003e LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"deactivate FypManagerParser","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"LogicManager -\u003e ExitCommand : execute()","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"create CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"ExitCommand -\u003e CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"activate CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"CommandResult --\u003e ExitCommand : result","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"ExitCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"deactivate ExitCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"LogicManager -\u003e StorageManager","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"activate StorageManager","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"StorageManager -\u003e StorageManager : saveFypManager()","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"StorageManager --\u003e LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"deactivate StorageManager","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"MainWindow -\u003e CommandBox","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"activate CommandBox","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"MainWindow -\u003e LogicManager : setGuiSettings()","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"LogicManager --\u003e  MainWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"MainWindow -\u003e MainWindow : helpWindow.hide()","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"MainWindow -\u003e MainWindow : primaryStage.hide()","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"MainWindow --\u003e  UiManager","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"deactivate CommandBox","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"deactivate MainWindow","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"[\u003c--UiManager","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"deactivate UiManager","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"@enduml","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"YH-15":76}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"Class FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"LogicManager -right-\u003e\"1\" FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"note right of XYZCommand: XYZCommand \u003d AddStudentCommand, \\nFindCommand, etc","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":4,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyFypManager\" as ReadOnlyFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"Class FypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"FypManager .up.|\u003e ReadOnlyFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"Model .left.\u003e ReadOnlyFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"PokezardVGC"},"content":"ModelManager -left-\u003e \"1\" FypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"Package Student {","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PokezardVGC"},"content":"    Class UniqueStudentList","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"PokezardVGC"},"content":"    Class Student","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"    Class DeadlineList","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"    Class Email","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"    Class ProjectName","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"PokezardVGC"},"content":"    Class ProjectStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"    Class StudentId","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"    Class StudentName","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"    Class Tag","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"    FypManager *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"    UniqueStudentList -right-\u003e\"~* all\" Student","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"    Student *--\u003e StudentName","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"    Student *---\u003e StudentId","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"PokezardVGC"},"content":"    Student *--\u003e Email","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"PokezardVGC"},"content":"    Student *----\u003e ProjectName","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"PokezardVGC"},"content":"    Student *--\u003e ProjectStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"PokezardVGC"},"content":"    Student *---\u003e \"*\" DeadlineList","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"    Student *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"    StudentName -[hidden]right-\u003e StudentId","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"PokezardVGC"},"content":"    StudentId -[hidden]right-\u003e ProjectName","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"PokezardVGC"},"content":"    ProjectName -[hidden]right-\u003e ProjectStatus","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"    DeadlineList -[hidden]right-\u003e Tag","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"PokezardVGC"},"content":"    ModelManager ---\u003e\"~* filtered\" Student","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"PokezardVGC"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"PokezardVGC"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":33,"-":23}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"PokezardVGC"},"content":"Class FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"HiddenOutside ..\u003e FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"PokezardVGC":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"PokezardVGC"},"content":"package \"FypManager Storage\" #F4F6F6{","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nFypManagerStorage\" as FypManagerStorage","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"PokezardVGC"},"content":"Class JsonFypManagerStorage","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"Class JsonSerializableFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"PokezardVGC"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"StorageManager -up-\u003e \"1\" FypManagerStorage","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"Storage -right-|\u003e FypManagerStorage","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"JsonFypManagerStorage .up.|\u003e FypManagerStorage","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"JsonFypManagerStorage ..\u003e JsonSerializableFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"JsonSerializableFypManager --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":11,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"PokezardVGC"},"content":"Class StudentListPanel","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"PokezardVGC"},"content":"Class StudentCard","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"Class WelcomeBox","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"MainWindow *-down-\u003e \"1\" WelcomeBox","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"PokezardVGC"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"PokezardVGC"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":8,"-":52,"RussellDash332":2}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    class State1 as \"__ab0:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    class State2 as \"__ab1:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    class State3 as \"__ab2:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    class State1 as \"__ab0:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    class State2 as \"__ab1:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    class State3 as \"__ab2:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    class State1 as \"__ab0:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    class State2 as \"__ab1:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    class State3 as \"__ab2:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    class State1 as \"__ab0:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    class State2 as \"__ab1:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    class State3 as \"__ab2:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    class State1 as \"__ab0:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    class State2 as \"__ab1:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    class State3 as \"__ab2:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"    class State1 as \"__ab0:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    class State2 as \"__ab1:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"    class State3 as \"__ab3:FypManager__\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"participant \":FypManagerParser\" as FypManagerParser LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"PokezardVGC"},"content":"participant \":VersionedFypManager\" as VersionedFypManager MODEL_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"PokezardVGC"},"content":"LogicManager -\u003e FypManagerParser : parseCommand(undo)","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"activate FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser -\u003e UndoCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"UndoCommand --\u003e FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"FypManagerParser --\u003e LogicManager : u","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"PokezardVGC"},"content":"deactivate FypManagerParser","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"PokezardVGC"},"content":"UndoCommand -\u003e Model : undoFypManager()","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"Model -\u003e VersionedFypManager : undo()","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"activate VersionedFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"VersionedFypManager -\u003e VersionedFypManager :resetData(ReadOnlyFypManager)","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"VersionedFypManager --\u003e Model :","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"deactivate VersionedFypManager","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"PokezardVGC":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"Participant \":FypManagerParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"PokezardVGC"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"PokezardVGC":2,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"title: FypManager","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-F09-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-F09-1/tp/actions)","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F09-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S1-CS2103-F09-1/tp)","lastModifiedDate":"2022-09-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"**JerylFypManager is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"* If you are interested in using JerylFypManagerFypManager, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"* If you are interested about developing JerylFypManagerFypManager, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":15,"RussellDash332":4}},{"path":"docs/team/eugenelmj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"title: Leong Ming Jian Eugene\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"### Project: JerylFypManager","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"JerylFypManager is a desktop application catered to professors to manage and track the progress for students’ final year project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"* **Tools**:","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"eugenelmj":27}},{"path":"docs/team/jordanchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"title: Chua Yu Xuan Jordan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"### Project: JerylFypManager","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"JerylFypManager is a desktop application catered to professors to manage and track the progress for students’ final year project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"  * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"* **Tools**:","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"JordanChua":27}},{"path":"docs/team/pokezardvgc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PokezardVGC"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"PokezardVGC"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"PokezardVGC"},"content":"title: Poh Yu Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"### Project: JerylFypManager","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"JerylFypManager is a desktop application catered to professors to manage and track the progress for students’ final year ","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"PokezardVGC"},"content":"project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress. The user","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This ","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"project is based on AddressBook - Level 3.","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"PokezardVGC"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"PokezardVGC"},"content":"* **New Feature**: Allows for users to edit student\u0027s information and FYP projects.","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"PokezardVGC"},"content":"  * What it does: Professors can edit student\u0027s information (eg: change in email address, FYP project) easily.","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"PokezardVGC"},"content":"  * Justifications: Students may need to change their email address, or might even change their FYP project all together.","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"PokezardVGC"},"content":"  * Highlights: Allows for quick changing of student parameters, instead of deleting entry and retyping it","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"PokezardVGC"},"content":"  * Credits: @RussellDash for helping me get started with test cases","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"* **New Feature**: Allows for users to delete student\u0027s information and FYP projects.","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"PokezardVGC"},"content":"  * What it does: Professors can delete student\u0027s information once student drops an FYP project.","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"  * Justifications: Having lots of student information in the app may be quite cluttering. Hence, deleting students who","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"  have dropped the FYP would keep only relevant information, making things neat and easy to read.","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"PokezardVGC"},"content":"  * Highlights: Allows easy removal of student\u0027s information from the app.","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"  * Credits: @RussellDash for all the help","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dPokezardVGC)","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"  * Managed the release of `v1.3` (1 release) on GitHub","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"PokezardVGC"},"content":"  * Approved PRs","lastModifiedDate":"2022-11-03"},{"lineNumber":43,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"PokezardVGC"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"  * Adapted storage code from Address Book 3 to suit the context of Source Control","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"  * Adapted tests from Address Book 3 to pass for the newly adapted Source Control code","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"    (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/9e04d8b15cd8d4cebfbb624f06281cd395720744,","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"PokezardVGC"},"content":"    https://github.com/AY2223S1-CS2103-F09-1/tp/commit/1a6eea035395987a4e34257a2c2384a89b4804f1)","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"PokezardVGC"},"content":"  * Wrote additional tests for existing features ","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"  (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/9e04d8b15cd8d4cebfbb624f06281cd395720744,","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"PokezardVGC"},"content":"  https://github.com/AY2223S1-CS2103-F09-1/tp/commit/fe098d2637673d1e833bcb8d092bb44edc744183)","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"PokezardVGC"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"PokezardVGC"},"content":"    * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"PokezardVGC"},"content":"    * Added Features (delete and edit)","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"PokezardVGC"},"content":"      * Added Command Summary","lastModifiedDate":"2022-11-03"},{"lineNumber":59,"author":{"gitId":"PokezardVGC"},"content":"      * Updated Quick Start","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"PokezardVGC"},"content":"      * Fixed typos and bugs related to Dry-PE Triage","lastModifiedDate":"2022-11-03"},{"lineNumber":61,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"PokezardVGC"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"PokezardVGC"},"content":"      * Implementation for edit and delete function","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"PokezardVGC"},"content":"      * Added Action Diagrams (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/8fcad4cb8dc06dc8c1d478d2409f662a84642acd)","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"PokezardVGC"},"content":"      * Added Sequence Diagrams (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/217c2e75d3a22e7cc68a331674c649a773662bc1)","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"PokezardVGC"},"content":"      * Added User stories (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/5e624b06648100ae85d86dc1e0ef7b9615b3fef8)","lastModifiedDate":"2022-11-03"},{"lineNumber":67,"author":{"gitId":"PokezardVGC"},"content":"      * Added Use Case (UC04 - UC07)","lastModifiedDate":"2022-11-03"},{"lineNumber":68,"author":{"gitId":"PokezardVGC"},"content":"      * Added Non-Functional Requirements (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/10c15b8053d3bdecaee0fa6f40aa295ba61b1856)","lastModifiedDate":"2022-11-03"},{"lineNumber":69,"author":{"gitId":"PokezardVGC"},"content":"      * Updated Glossary (https://github.com/AY2223S1-CS2103-F09-1/tp/commit/a07edca57996fe6e781e61ee66d3ceb93dd93616)","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":71,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"PokezardVGC"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"PokezardVGC"},"content":"  * PR reviews (https://github.com/AY2223S1-CS2103-F09-1/tp/pull/155,","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"PokezardVGC"},"content":"  https://github.com/AY2223S1-CS2103-F09-1/tp/pull/141, https://github.com/AY2223S1-CS2103-F09-1/tp/pull/131, etc.)","lastModifiedDate":"2022-11-03"},{"lineNumber":75,"author":{"gitId":"PokezardVGC"},"content":"  * Reported bugs and suggestions for other teams in the class","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"PokezardVGC"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"PokezardVGC"},"content":"  * PlantUML to draw UML diagrams ","lastModifiedDate":"2022-11-03"}],"authorContributionMap":{"PokezardVGC":78}},{"path":"docs/team/russelldash332.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"layout: page","lastModifiedDate":"2022-09-21"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"title: Nicholas Russell Saerang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"### Project: JerylFypManager","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"JerylFypManager is a desktop application catered to professors to manage and track the progress for students’ final year project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"* **Project management**:","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    * User Guide:","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"* **Community**:","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"* **Tools**:","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"RussellDash332":27}},{"path":"docs/team/sweetpotato0213.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SweetPotato0213"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"SweetPotato0213"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"SweetPotato0213"},"content":"title: Liu Han\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"SweetPotato0213"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"SweetPotato0213"},"content":"### Project: JerylFypManager","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"SweetPotato0213"},"content":"JerylFypManager is a desktop application catered to professors to manage and track the progress for students’ final year project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"SweetPotato0213"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"SweetPotato0213"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"SweetPotato0213"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"SweetPotato0213"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"SweetPotato0213"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"SweetPotato0213"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"SweetPotato0213"},"content":"    * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"SweetPotato0213"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"SweetPotato0213"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"SweetPotato0213"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"SweetPotato0213":27}},{"path":"docs/team/yh-15.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"title: Zhang Yuhao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"### Project: JerylFypManager","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"JerylFypManager is a desktop application catered to professors to manage and track the progress for students’ final year project (FYP), as well as serving as a platform for professors to provide feedback on their students’ progress. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC. This project is based on AddressBook - Level 3.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"* **New Feature**:","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"* **Code contributed**:","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"    * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"YH-15":27}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"This command allows users of the FypManager application to add optional remarks to people in their FYP manager and edit it if required. The command should have the following format:","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":" * Changes the remark of an existing student in the FYP manager.","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `FypManagerParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"eugenelmj"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"eugenelmj"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"PokezardVGC"},"content":"**`DeleteStudentCommandParser.java`:**","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"PokezardVGC"},"content":"return new DeleteStudentCommand(index);","lastModifiedDate":"2022-10-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"PokezardVGC"},"content":":information_source: Don’t forget to update `FypManagerParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-10-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"eugenelmj"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"eugenelmj"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"eugenelmj"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"PokezardVGC"},"content":"FypManager stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2022-10-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"PokezardVGC"},"content":":exclamation: You must delete FypManager’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause FypManager to default to an empty FYP manager!","lastModifiedDate":"2022-10-22"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"eugenelmj"},"content":"public PersonCard(Person student, int displayedIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"eugenelmj"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2022-10-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"eugenelmj"},"content":"        Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":347,"author":{"gitId":"eugenelmj"},"content":"        Person editedStudent \u003d new Person(","lastModifiedDate":"2022-10-12"},{"lineNumber":348,"author":{"gitId":"eugenelmj"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-12"},{"lineNumber":349,"author":{"gitId":"eugenelmj"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"eugenelmj"},"content":"        model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"eugenelmj"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-12"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"eugenelmj"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-12"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"eugenelmj"},"content":"    private String generateSuccessMessage(Person studentToEdit) {","lastModifiedDate":"2022-10-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"eugenelmj"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-12"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"PokezardVGC"},"content":"This concludes the tutorial for adding a new `Command` to FypManager.","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"eugenelmj":18,"PokezardVGC":9,"-":374}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"PokezardVGC"},"content":"**`invalidPersonFypManager.json`:**","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"eugenelmj"},"content":"  \"students\": [ {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eugenelmj":2,"PokezardVGC":1,"-":109}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"PokezardVGC"},"content":"            storage.saveFypManager(model.getFypManager());","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"PokezardVGC"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `FypManagerParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-10-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"eugenelmj"},"content":"       Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"eugenelmj"},"content":"       Person editedStudent \u003d createEditedPerson(studentToEdit, editPersonDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"eugenelmj"},"content":"       if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasPerson(editedStudent)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"eugenelmj"},"content":"       model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"eugenelmj"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"eugenelmj"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"eugenelmj"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"eugenelmj"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"eugenelmj"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"PokezardVGC"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveFypManager(model.getFypManager())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-10-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"PokezardVGC"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonFypManager#saveFypManager()` method which calls the `JsonSerializableFypManager` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-10-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"PokezardVGC"},"content":"    **`JsonSerializableFypManager` constructor:**","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"PokezardVGC"},"content":"     * Converts a given {@code ReadOnlyFypManager} into this class for Jackson use.","lastModifiedDate":"2022-10-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"PokezardVGC"},"content":"     * {@code JsonSerializableFypManager}.","lastModifiedDate":"2022-10-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"PokezardVGC"},"content":"    public JsonSerializableFypManager(ReadOnlyFypManager source) {","lastModifiedDate":"2022-10-22"},{"lineNumber":234,"author":{"gitId":"eugenelmj"},"content":"        students.addAll(","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"PokezardVGC"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableFypManager`.","lastModifiedDate":"2022-10-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"PokezardVGC"},"content":"    3.  Save the FYP manager in the CSV format instead","lastModifiedDate":"2022-10-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"PokezardVGC"},"content":"    6.  Add a new entity to the FYP manager","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"eugenelmj":10,"PokezardVGC":11,"-":280}},{"path":"src/main/java/jeryl/fyp/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.FileUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Version;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.LogicManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.FypManagerStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.JsonFypManagerStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.Storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.StorageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.ui.Ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.ui.UiManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FypManager ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        FypManagerStorage fypManagerStorage \u003d new JsonFypManagerStorage(userPrefs.getFypManagerFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        storage \u003d new StorageManager(fypManagerStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s FYP manager and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"     * The data from the sample FYP manager will be used instead if {@code storage}\u0027s FYP manager is not found,","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"     * or an empty FYP manager will be used instead if errors occur when reading {@code storage}\u0027s FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        Optional\u003cReadOnlyFypManager\u003e fypManagerOptional;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        ReadOnlyFypManager initialData;","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"            fypManagerOptional \u003d storage.readFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"            if (!fypManagerOptional.isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"                logger.info(\"Data file not found. Will be starting with a sample FypManager\");","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"            initialData \u003d fypManagerOptional.orElseGet(SampleDataUtil::getSampleFypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty FypManager\");","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"            initialData \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FypManager\");","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"            initialData \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"RussellDash332"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FypManager\");","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"RussellDash332"},"content":"        logger.info(\"Starting FypManager \" + MainApp.VERSION);","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"RussellDash332"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FYP Manager ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"RussellDash332":43}},{"path":"src/main/java/jeryl/fyp/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/core/Datetimes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":" * Container for accepted datetime formats.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"public class Datetimes {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"    public static final String[] ACCEPTABLE_DATETIME_FORMATS \u003d {","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"        \"MMM dd yyyy HHmm\", \"MMM dd yyyy HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"        \"dd/MM/yyyy HHmm\", \"dd/MM/yyyy HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"        \"dd-MM-yyyy HHmm\", \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"        \"yyyy/MM/dd HHmm\", \"yyyy/MM/dd HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"        \"yyyy/MM/dd\u0027T\u0027HHmm\", \"yyyy/MM/dd\u0027T\u0027HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"        \"yyyy-MM-dd HHmm\", \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"        \"dd MMM yyyy HHmm\", \"dd MMM yyyy HH:mm\",","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"        \"MMM dd, yyyy HHmm\", \"MMM dd, yyyy HH:mm\"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    };","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":19}},{"path":"src/main/java/jeryl/fyp/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    private static final String LOG_FILE \u003d \"fypmanager.log\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":110,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"    public static final String MESSAGE_STUDENT_NOT_FOUND \u003d \"There is no Student with the input StudentId!\";","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_PROJECTS_LISTED_OVERVIEW \u003d \"%1$d projects listed!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_RANK \u003d \"The Rank provided should be a valid integer\";","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PokezardVGC":1,"YH-15":1,"-":10,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core.index;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"    public Index(int zeroBasedIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"PokezardVGC":1,"-":52,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"     *   Ignores case, a partial word match is required.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"     *       containsWordIgnoreCase(\"ABc / def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     *       containsWordIgnoreCase(\"ABc / def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"     *       containsWordIgnoreCase(\"ABc / def\", \"ABcD\") \u003d\u003d false // no case-insensitive partial match","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     *       containsWordIgnoreCase(\"ABc / def\", \"Z\") \u003d\u003d false // no case-insensitive partial match","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"     * @param word cannot be null, cannot be empty, must be a single word (can be partial word)","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"        // space in one keyword is allowed","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"        // checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YH-15":11,"-":53,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"     * @throws RuntimeException If an error occurs during model state change.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"     * Returns the FypManager.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"     * @see jeryl.fyp.model.Model#getFypManager()","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    ReadOnlyFypManager getFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"    ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"    ObservableList\u003cStudent\u003e getSortedCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"    /** Returns an unmodifiable view of the uncompleted list of students */","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    /** Returns an unmodifiable view of the completed list of students */","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"     * Returns the user prefs\u0027 FYP manager file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    Path getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eugenelmj":3,"JordanChua":5,"-":35,"RussellDash332":20}},{"path":"src/main/java/jeryl/fyp/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.FypManagerParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.Storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    private final FypManagerParser fypManagerParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        fypManagerParser \u003d new FypManagerParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException,","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"            RuntimeException {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        Command command \u003d fypManagerParser.parseCommand(commandText);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"            storage.saveFypManager(model.getFypManager());","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    public ReadOnlyFypManager getFypManager() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        return model.getFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        return model.getSortedByProjectNameUncompletedStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"JordanChua"},"content":"    public ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"JordanChua"},"content":"        return model.getSortedByProjectStatusUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"JordanChua"},"content":"    public ObservableList\u003cStudent\u003e getSortedCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"JordanChua"},"content":"        return model.getSortedCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"        return model.getUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"        return model.getCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"    public Path getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"        return model.getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eugenelmj":3,"JordanChua":15,"-":58,"RussellDash332":31}},{"path":"src/main/java/jeryl/fyp/logic/commands/AddDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_DEADLINE_DATETIME;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_DEADLINE_NAME;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":" * Adds a deadline to a student.","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    public static final String COMMAND_WORD \u003d \"add -d\";","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline to a student.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"            + PREFIX_DEADLINE_NAME + \"DEADLINE_NAME \"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_DEADLINE_DATETIME + \"DEADLINE_DATETIME\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"            + \"(STUDENT_ID should be in format  \\\"A\\\" + (7 digits) + (1 uppercase letter), e.g. A0123456G)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"            + PREFIX_STUDENT_ID + \"A0123456G \"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"            + PREFIX_DEADLINE_NAME + \"Midterm thesis report \"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_DEADLINE_DATETIME + \"13-02-2022 11:11 \";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New deadline added: %1$s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_DUPLICATE_DEADLINE \u003d \"This deadline already exists in this \"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"            + \"student\u0027s deadline list\";","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    private StudentId studentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"     * Creates an AddDeadlineCommand to add the specified {@code Deadline} to the","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"     * deadline list of specified {@code Student}","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"    public AddDeadlineCommand(Deadline deadline, StudentId studentId) {","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(deadline, studentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        toAdd \u003d deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        Student student \u003d model.getStudentByStudentId(studentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"        if (model.hasDeadline(student, toAdd)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DEADLINE);","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"        model.addDeadline(student, toAdd);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"                || (other instanceof AddDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 toAdd.equals(((AddDeadlineCommand) other).toAdd)","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 studentId.equals(((AddDeadlineCommand) other).studentId));","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"YH-15":65,"RussellDash332":6}},{"path":"src/main/java/jeryl/fyp/logic/commands/AddStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":" * Adds a student to the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"public class AddStudentCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"    public static final String COMMAND_WORD \u003d \"add -s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    public static final String ALTERNATIVE_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the FYP manager.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_NAME + \"STUDENT_NAME \"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_PROJECT_NAME + \"FYP_NAME \"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"            + \"(STUDENT_ID should be in format  \\\"A\\\" + (7 digits) + (1 uppercase letter), e.g. A0123456G)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"A0123456G \"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_NAME + \"John Doe \"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_PROJECT_NAME + \"Neural Network \"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_TAG + \"smart \"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_TAG + \"isWorking\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the FYP manager\";","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"    public AddStudentCommand(Student student) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"                || (other instanceof AddStudentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 toAdd.equals(((AddStudentCommand) other).toAdd));","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenelmj":8,"YH-15":6,"-":34,"RussellDash332":23}},{"path":"src/main/java/jeryl/fyp/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" * Clears the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears the FYP manager\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"FYP manager has been cleared!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"        model.setFypManager(new FypManager());","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JordanChua":2,"-":17,"RussellDash332":7}},{"path":"src/main/java/jeryl/fyp/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    /** The application should show a sorted List by project name*/","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    private final boolean sortByProjectName;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    /** The application should show a sorted List by project status then alphabetical order*/","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"    private final boolean sortByProjectStatus;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"                         boolean sortByProjectName, boolean sortByProjectStatus) {","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        this.sortByProjectName \u003d sortByProjectName;","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"        this.sortByProjectStatus \u003d sortByProjectStatus;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"    public boolean isSortByProjectName() {","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        return sortByProjectName;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"JordanChua"},"content":"    public boolean isSortByProjectStatus() {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"JordanChua"},"content":"        return sortByProjectStatus;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"    public String toString() {","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"        return feedbackToUser;","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JordanChua":13,"-":68,"RussellDash332":12}},{"path":"src/main/java/jeryl/fyp/logic/commands/DeleteDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_STUDENT_NOT_FOUND;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_DEADLINE_RANK;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":" * Deletes a deadline identified using it\u0027s unique StudentId and the rank of deadline.","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"public class DeleteDeadlineCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    public static final String COMMAND_WORD \u003d \"delete -d\";","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"            + \": Deletes the deadline identified by the student ID \u0026 rank provided.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_DEADLINE_RANK + \"DEADLINE_RANK\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"            + \"(STUDENT_ID must be a valid student ID that is already in the FYP manager)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"            + PREFIX_STUDENT_ID + \"A0123456G \"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"            + PREFIX_DEADLINE_RANK + \"1\";","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_DELETE_DEADLINE_SUCCESS \u003d \"Deleted Deadline: %1$s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"    private final Integer rank;","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"     * Contructs a DeleteDeadlineCommand with specified student, and the rank of task to be deleted.","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"     * @param studentId The student\u0027s ID.","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"     * @param number Rank of task to be deleted.","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"    public DeleteDeadlineCommand(StudentId studentId, Integer number) {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"        this.rank \u003d number;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"        Student student \u003d model.getStudentByStudentId(studentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"        if (student \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"            throw new CommandException(MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        if ((rank \u003c 1) || (rank \u003e student.getDeadlineList().size())) {","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DEADLINE_RANK);","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        Deadline deadlineToDelete \u003d student.getDeadlineList().getDeadlineByRank(rank - 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        model.deleteDeadline(student, deadlineToDelete);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DEADLINE_SUCCESS, deadlineToDelete));","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"                || (other instanceof DeleteDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 studentId.equals(((DeleteDeadlineCommand) other).studentId) // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 rank.equals(((DeleteDeadlineCommand) other).rank));","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"YH-15":57,"RussellDash332":14}},{"path":"src/main/java/jeryl/fyp/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"PokezardVGC"},"content":" * Deletes a student identified using it\u0027s unique StudentId.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"public class DeleteStudentCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    public static final String COMMAND_WORD \u003d \"delete -s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    public static final String ALTERNATIVE_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"            + \": Deletes the student identified by it\u0027s unique student ID\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"            + \"(STUDENT_ID must be a valid student ID that is already in the FYP manager)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"PokezardVGC"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"            + PREFIX_STUDENT_ID + \"A0123456G\";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    public DeleteStudentCommand(StudentId studentId) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"PokezardVGC"},"content":"        Index targetIndex \u003d model.getIndexByStudentId(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"            throw new CommandException(Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 studentId.equals(((DeleteStudentCommand) other).studentId)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenelmj":6,"PokezardVGC":9,"YH-15":5,"-":29,"RussellDash332":12}},{"path":"src/main/java/jeryl/fyp/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":" * Edits the details of an existing student in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"            + \"by unique student ID. \"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"            + \"Parameters: STUDENT_ID \"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"            + \"[\" + PREFIX_STUDENT_NAME + \"NAME] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"            + \"[\" + PREFIX_PROJECT_NAME + \"PROJECT_NAME] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"PokezardVGC"},"content":"            + \"Example: \" + COMMAND_WORD + \" A0123456X \"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the FYP manager.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"PokezardVGC"},"content":" * @param studentId of the student in the filtered student list to edit","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"PokezardVGC"},"content":"    public EditCommand(StudentId studentId, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"PokezardVGC"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"PokezardVGC"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"PokezardVGC"},"content":"        Index targetIndex \u003d model.getIndexByStudentId(studentId);","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"PokezardVGC"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"PokezardVGC"},"content":"            throw new CommandException(Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"        if (!studentToEdit.isSameStudentId(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"eugenelmj"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"eugenelmj"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"        StudentName updatedStudentName \u003d editStudentDescriptor.getStudentName().orElse(studentToEdit.getStudentName());","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"        StudentId updatedStudentId \u003d editStudentDescriptor.getStudentId().orElse(studentToEdit.getStudentId());","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"eugenelmj"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"        ProjectName updatedProjectName \u003d editStudentDescriptor.getProjectName().orElse(studentToEdit.getProjectName());","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"JordanChua"},"content":"        ProjectStatus updatedProjectStatus \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"                editStudentDescriptor.getProjectStatus().orElse(studentToEdit.getProjectStatus());","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"eugenelmj"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"        return new Student(updatedStudentName, updatedStudentId, updatedEmail,","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"JordanChua"},"content":"                updatedProjectName, updatedProjectStatus, updatedTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"PokezardVGC"},"content":"        return studentId.equals(e.studentId)","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"eugenelmj"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"eugenelmj"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"eugenelmj"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"        private StudentName studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"RussellDash332"},"content":"        private StudentId id;","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"RussellDash332"},"content":"        private ProjectName projectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"        private ProjectStatus projectStatus;","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"eugenelmj"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"eugenelmj"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"RussellDash332"},"content":"            setStudentName(toCopy.studentName);","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"RussellDash332"},"content":"            setStudentId(toCopy.id);","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"YH-15"},"content":"            setProjectName(toCopy.projectName);","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"RussellDash332"},"content":"            setProjectStatus(toCopy.projectStatus);","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"RussellDash332"},"content":"            return CollectionUtil.isAnyNonNull(studentName, email, projectName, tags);","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"RussellDash332"},"content":"        public void setStudentName(StudentName studentName) {","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"RussellDash332"},"content":"            this.studentName \u003d studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"RussellDash332"},"content":"        public Optional\u003cStudentName\u003e getStudentName() {","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"RussellDash332"},"content":"            return Optional.ofNullable(studentName);","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"RussellDash332"},"content":"        public void setStudentId(StudentId id) {","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"eugenelmj"},"content":"            this.id \u003d id;","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"RussellDash332"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"eugenelmj"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"RussellDash332"},"content":"        public void setProjectName(ProjectName projectName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"YH-15"},"content":"            this.projectName \u003d projectName;","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"RussellDash332"},"content":"        public Optional\u003cProjectName\u003e getProjectName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"YH-15"},"content":"            return Optional.ofNullable(projectName);","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"RussellDash332"},"content":"        public void setProjectStatus(ProjectStatus projectStatus) {","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"RussellDash332"},"content":"            this.projectStatus \u003d projectStatus;","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"RussellDash332"},"content":"        public Optional\u003cProjectStatus\u003e getProjectStatus() {","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"RussellDash332"},"content":"            return Optional.ofNullable(projectStatus);","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"eugenelmj"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"eugenelmj"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"RussellDash332"},"content":"            return getStudentName().equals(e.getStudentName())","lastModifiedDate":"2022-10-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"YH-15"},"content":"                    \u0026\u0026 getProjectName().equals(e.getProjectName())","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"eugenelmj":31,"JordanChua":3,"PokezardVGC":11,"YH-15":8,"-":132,"RussellDash332":52}},{"path":"src/main/java/jeryl/fyp/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the FYP manager\";","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting FYP Manager as requested ...\";","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JordanChua":4,"-":15,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.FieldContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":" * Finds and lists all students in FYP manager whose field contains any of the argument keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_USAGE \u003d \"Finds all students matching the given name of a certain field.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"            + \"1) by ProjectName: \" + FindProjectNameCommand.COMMAND_WORD + \" KEYWORD/[KEYWORD2/KEYWORD3/...]\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"            + \"2) by StudentId: \" + FindStudentIdCommand.COMMAND_WORD + \" KEYWORD/[KEYWORD2/KEYWORD3/...]\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"            + \"3) by StudentName: \" + FindStudentNameCommand.COMMAND_WORD + \" KEYWORD/[KEYWORD2/KEYWORD3/...]\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"            + \"4) by Tags: \" + FindTagsCommand.COMMAND_WORD + \" KEYWORD/[KEYWORD2/KEYWORD3/...]\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"    private final FieldContainsKeywordsPredicate fieldPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"     * Takes in a predicate (to be specified)","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"     * @param fieldPredicate predicate on whether student\u0027s projectName contains keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"    public FindCommand(FieldContainsKeywordsPredicate fieldPredicate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"        this.fieldPredicate \u003d fieldPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"        model.updateFilteredStudentList(fieldPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"                String.format(Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 fieldPredicate.equals(((FindCommand) other).fieldPredicate)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":39,"RussellDash332":8}},{"path":"src/main/java/jeryl/fyp/logic/commands/FindProjectNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":" * Finds and lists all students in FYP manager whose project name contains any of the argument keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"public class FindProjectNameCommand extends FindCommand {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"    public static final String COMMAND_WORD \u003d \"find -p\";","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"    public static final String ALTERNATIVE_COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose project names contain any of \"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"            + \"Parameters: KEYWORD/[MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"            + \"Example: \" + COMMAND_WORD + \" neural network/tree\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"     * Takes in a predicate (to be specified)","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"     * @param projectNamePredicate predicate on whether student\u0027s projectName contains keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    public FindProjectNameCommand(ProjectNameContainsKeywordsPredicate projectNamePredicate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"        super(projectNamePredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"eugenelmj":10,"YH-15":3,"-":10,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/logic/commands/FindStudentIdCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":" * Finds and lists all students in FYP manager whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentIdCommand extends FindCommand {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"    public static final String COMMAND_WORD \u003d \"find -i\";","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"            + \"Parameters: KEYWORD/[MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"            + \"Example: \" + COMMAND_WORD + \" neural network/tree\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"     * Takes in a predicate (to be specified)","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"     * @param studentIdPredicate predicate on whether student\u0027s studentId contains keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"    public FindStudentIdCommand(StudentIdContainsKeywordsPredicate studentIdPredicate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        super(studentIdPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":24,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/logic/commands/FindStudentNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":" * Finds and lists all students in FYP manager whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentNameCommand extends FindCommand {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"    public static final String COMMAND_WORD \u003d \"find -n\";","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"            + \"Parameters: KEYWORD/[MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"            + \"Example: \" + COMMAND_WORD + \" neural network/tree\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"     * Takes in a predicate (to be specified)","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"     * @param studentNamePredicate predicate on whether student\u0027s studentName contains keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"    public FindStudentNameCommand(StudentNameContainsKeywordsPredicate studentNamePredicate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        super(studentNamePredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":25,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/logic/commands/FindTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.TagsContainKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":" * Finds and lists all students in FYP manager who has a tag that contains any of the argument keywords.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"public class FindTagsCommand extends FindCommand {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"    public static final String COMMAND_WORD \u003d \"find -t\";","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose tags contain any of \"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"            + \"Parameters: KEYWORD/[MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"            + \"Example: \" + COMMAND_WORD + \" neural network/tree\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"     * Takes in a predicate (to be specified)","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"     * @param tagsPredicate predicate on whether student\u0027s tags contains keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"    public FindTagsCommand(TagsContainKeywordsPredicate tagsPredicate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        super(tagsPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":25,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"            + \"[COMMAND]\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"            + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"            + COMMAND_WORD + \" \" + AddStudentCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"    private final String helpMessage;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    private final boolean showHelp;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"     * Private constructor for {@code HelpCommand}.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"     * @param helpMessage","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"     * @param showHelp","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"    private HelpCommand(String helpMessage, boolean showHelp) {","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"        this.helpMessage \u003d helpMessage;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"     * Default constructor for {@code HelpCommand}.","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"    public HelpCommand() {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"        this(SHOWING_HELP_MESSAGE, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"     * Constructor for {@code HelpCommand} on a specific {@Command}.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"    public HelpCommand(String helpMessage) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"JordanChua"},"content":"        this(helpMessage, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"JordanChua"},"content":"        return new CommandResult(helpMessage, showHelp, false, false , false);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JordanChua":32,"-":17,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" * Lists all Students in the FYP manager to the user.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all the students in the FYP manager.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all Students!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenelmj":2,"-":18,"RussellDash332":6}},{"path":"src/main/java/jeryl/fyp/logic/commands/ListDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SweetPotato0213"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"SweetPotato0213"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"SweetPotato0213"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"SweetPotato0213"},"content":"import java.util.List;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"SweetPotato0213"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"SweetPotato0213"},"content":" * Lists all Deadlines under one specific students in the FYP manager to the user.","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"SweetPotato0213"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"SweetPotato0213"},"content":"public class ListDeadlineCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"SweetPotato0213"},"content":"    public static final String COMMAND_WORD \u003d \"list -d\";","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"SweetPotato0213"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"SweetPotato0213"},"content":"            + \": Lists all the Deadlines under a specific student in the FYP manager.\"","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"SweetPotato0213"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"SweetPotato0213"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"SweetPotato0213"},"content":"            + \"(STUDENT_ID must be a valid student id that is already in the FYP manager)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"SweetPotato0213"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"SweetPotato0213"},"content":"            + PREFIX_STUDENT_ID + \"A0123456G\";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"SweetPotato0213"},"content":"    public static final String MESSAGE_LIST_DEADLINE_SUCCESS \u003d \"Listed all Deadlines under Student %1$s\";","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"SweetPotato0213"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"SweetPotato0213"},"content":"    public ListDeadlineCommand(StudentId studentId) {","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"SweetPotato0213"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"SweetPotato0213"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"SweetPotato0213"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"SweetPotato0213"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"SweetPotato0213"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"SweetPotato0213"},"content":"        Index targetIndex \u003d model.getIndexByStudentId(studentId);","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"SweetPotato0213"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"SweetPotato0213"},"content":"            throw new CommandException(Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"SweetPotato0213"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"SweetPotato0213"},"content":"        Student studentToListDeadline \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"SweetPotato0213"},"content":"        model.listDeadlineUnderStudent(studentToListDeadline);","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"SweetPotato0213"},"content":"        return new CommandResult(String.format(MESSAGE_LIST_DEADLINE_SUCCESS, studentToListDeadline));","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"SweetPotato0213"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"SweetPotato0213":52}},{"path":"src/main/java/jeryl/fyp/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":" * Updates the status of an existing FYP to \"DONE\", \"IP\" or \"YTS\"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"            + \": Updates status of the FYP project done\"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"            + \"by the student ID given in the command. \"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"            + \"Existing statuses will be updated by the input.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"STUDENT_ID \"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_PROJECT_STATUS + \"STATUS\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"            + \"(STUDENT_ID must be a valid student ID that is already in the FYP manager)\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_ID + \"A0123456G \"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_PROJECT_STATUS + \"DONE\";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_MARK_PROJECT_STATUS_SUCCESS \u003d \"Marked ProjectStatus to Student: %1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"    private final ProjectStatus projectStatus;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"     * @param studentId of the student doing a particular FYP project","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"     * @param projectStatus of the FYP project","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    public MarkCommand(StudentId studentId, ProjectStatus projectStatus) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"        requireAllNonNull(studentId, projectStatus);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        this.projectStatus \u003d projectStatus;","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"JordanChua"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"JordanChua"},"content":"        Student oldStudent \u003d model.getStudentByStudentId(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"JordanChua"},"content":"        if (oldStudent \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"PokezardVGC"},"content":"            throw new CommandException(Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        Student editedStudent \u003d new Student(oldStudent.getStudentName(), oldStudent.getStudentId(),","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"                oldStudent.getEmail(), oldStudent.getProjectName(), projectStatus,","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"                oldStudent.getDeadlineList(), oldStudent.getTags());","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"JordanChua"},"content":"        model.setStudent(oldStudent, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"JordanChua"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"JordanChua"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"JordanChua"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"JordanChua"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"JordanChua"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"        return String.format(MESSAGE_MARK_PROJECT_STATUS_SUCCESS, studentToEdit);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"JordanChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"JordanChua"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"JordanChua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"JordanChua"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"JordanChua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"JordanChua"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"JordanChua"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"JordanChua"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"JordanChua"},"content":"        MarkCommand e \u003d (MarkCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"        return studentId.equals(e.studentId)","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 projectStatus.equals(e.projectStatus);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"JordanChua":64,"PokezardVGC":1,"RussellDash332":30}},{"path":"src/main/java/jeryl/fyp/logic/commands/SortProjectNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" * Sorts all projects in the FYP manager by project name.","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"public class SortProjectNameCommand extends Command {","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"    public static final String COMMAND_WORD \u003d \"sort -p\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    public static final String ALTERNATIVE_COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the FYP projects \"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"            + \"by the project names in alphabetical order.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Projects sorted by project name!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        if (!(other instanceof SortProjectNameCommand)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"            return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"        // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        SortProjectNameCommand e \u003d (SortProjectNameCommand) other;","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"        return COMMAND_WORD.equals(e.COMMAND_WORD);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"JordanChua":38,"RussellDash332":8}},{"path":"src/main/java/jeryl/fyp/logic/commands/SortProjectStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" * Sorts projects in the FYP manager by the project status, followed by alphabetical order.","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"public class SortProjectStatusCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"    public static final String COMMAND_WORD \u003d \"sort -s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the FYP projects \"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"            + \"by the current project status, in the order YTS before IP and DONE separately.\\n\"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Projects sorted by project status!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"        if (!(other instanceof SortProjectStatusCommand)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"            return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"        // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"        SortProjectStatusCommand e \u003d (SortProjectStatusCommand) other;","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"        return COMMAND_WORD.equals(e.COMMAND_WORD);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"JordanChua":42,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/logic/parser/AddDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_DEADLINE_DATETIME;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_DEADLINE_NAME;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"public class AddDeadlineCommandParser implements Parser\u003cAddDeadlineCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDeadlineCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"     * and returns an AddDeadlineCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"    public AddDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID, PREFIX_DEADLINE_NAME, PREFIX_DEADLINE_DATETIME);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_DEADLINE_NAME, PREFIX_DEADLINE_DATETIME)","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        DeadlineName deadlineName \u003d ParserUtil.parseDeadlineName(argMultimap.getValue(PREFIX_DEADLINE_NAME).get());","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"        LocalDateTime deadlineDatetime \u003d ParserUtil.parseDeadlineDatetime(argMultimap.getValue(","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"                PREFIX_DEADLINE_DATETIME).get());","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"        Deadline deadline \u003d new Deadline(deadlineName, deadlineDatetime);","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"        return new AddDeadlineCommand(deadline, studentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"YH-15":22,"-":26,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/logic/parser/AddStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    public AddStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID, PREFIX_STUDENT_NAME, PREFIX_PROJECT_NAME,","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"                        PREFIX_EMAIL, PREFIX_TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_STUDENT_NAME, PREFIX_PROJECT_NAME,","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"                PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        StudentName studentName \u003d ParserUtil.parseStudentName(argMultimap.getValue(PREFIX_STUDENT_NAME).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"        ProjectName projectName \u003d ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_PROJECT_NAME).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        ProjectStatus projectStatus \u003d new ProjectStatus(); // add command does not allow adding status right away","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"        Student student \u003d new Student(studentName, studentId, email, projectName, projectStatus, tagList);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"        return new AddStudentCommand(student);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JordanChua":5,"YH-15":6,"-":33,"RussellDash332":19}},{"path":"src/main/java/jeryl/fyp/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"JordanChua":1,"-":59,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"RussellDash332"},"content":"        public String toString() {","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"RussellDash332"},"content":"            return \"(\" + prefix + \", \" + startPosition + \")\";","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"RussellDash332":6}},{"path":"src/main/java/jeryl/fyp/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_STUDENT_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_STUDENT_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_PROJECT_NAME \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_PROJECT_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_DEADLINE_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_DEADLINE_DATETIME \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public static final Prefix PREFIX_DEADLINE_RANK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"YH-15":1,"-":10,"RussellDash332":8}},{"path":"src/main/java/jeryl/fyp/logic/parser/DeleteDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_DEADLINE_RANK;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":" * Parses input arguments and creates a new DeleteDeadlineCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"public class DeleteDeadlineCommandParser implements Parser\u003cDeleteDeadlineCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDeadlineCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"     * and returns a DeleteDeadlineCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    public DeleteDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID, PREFIX_DEADLINE_RANK);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_DEADLINE_RANK)","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"PokezardVGC"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"                    DeleteDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"PokezardVGC"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"        Integer rank \u003d ParserUtil.parseRank(argMultimap.getValue(PREFIX_DEADLINE_RANK).get());","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"        return new DeleteDeadlineCommand(studentId, rank);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"PokezardVGC"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"PokezardVGC"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"YH-15":13,"PokezardVGC":15,"-":13,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/logic/parser/DeleteStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"public class DeleteStudentCommandParser implements Parser\u003cDeleteStudentCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"     * and returns a DeleteStudentCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    public DeleteStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"PokezardVGC"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"PokezardVGC"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID)","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"PokezardVGC"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"PokezardVGC"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        return new DeleteStudentCommand(studentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"PokezardVGC"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"PokezardVGC":17,"YH-15":8,"-":13,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_NAME,","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"                PREFIX_EMAIL, PREFIX_PROJECT_NAME, PREFIX_TAG);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"PokezardVGC"},"content":"        StudentId studentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"            studentId \u003d ParserUtil.parseStudentId(argMultimap.getPreamble());","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"        if (argMultimap.getValue(PREFIX_STUDENT_NAME).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"            editStudentDescriptor.setStudentName(","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"                ParserUtil.parseStudentName(argMultimap.getValue(PREFIX_STUDENT_NAME).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        if (argMultimap.getValue(PREFIX_PROJECT_NAME).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"            editStudentDescriptor.setProjectName(","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"                ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_PROJECT_NAME).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"PokezardVGC"},"content":"        return new EditCommand(studentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eugenelmj":5,"PokezardVGC":4,"-":53,"RussellDash332":18}},{"path":"src/main/java/jeryl/fyp/logic/parser/FindProjectNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindProjectNameCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":" * Parses input arguments and creates a new FindProjectNameCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"public class FindProjectNameCommandParser implements Parser\u003cFindProjectNameCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"     * Parses the given {@code String} of arguments in the context of the FindProjectNameCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"     * and returns a FindProjectNameCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    public FindProjectNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindProjectNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"        String[] nameKeywords \u003d Arrays.stream(trimmedArgs.split(\"/\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"                .map(keyword -\u003e keyword.trim())","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"                .filter(keyword -\u003e !keyword.equals(\"\"))","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"                .toArray(size -\u003e new String[size]); // split by \"/\" then trim each","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        return new FindProjectNameCommand(new ProjectNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eugenelmj":9,"YH-15":1,"-":19,"RussellDash332":6}},{"path":"src/main/java/jeryl/fyp/logic/parser/FindStudentIdCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindStudentIdCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":" * Parses input arguments and creates a new FindStudentIdCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentIdCommandParser implements Parser\u003cFindStudentIdCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"     * Parses the given {@code String} of arguments in the context of the FindStudentIdCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"     * and returns a FindStudentIdCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    public FindStudentIdCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStudentIdCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        String[] nameKeywords \u003d Arrays.stream(trimmedArgs.split(\"/\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                .map(keyword -\u003e keyword.trim())","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"                .filter(keyword -\u003e !keyword.equals(\"\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"                .toArray(size -\u003e new String[size]); // split by \"/\" then trim each","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        return new FindStudentIdCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":35}},{"path":"src/main/java/jeryl/fyp/logic/parser/FindStudentNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindStudentNameCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":" * Parses input arguments and creates a new FindStudentNameCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentNameCommandParser implements Parser\u003cFindStudentNameCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"     * Parses the given {@code String} of arguments in the context of the FindStudentNameCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"     * and returns a FindStudentNameCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    public FindStudentNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindStudentNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        String[] nameKeywords \u003d Arrays.stream(trimmedArgs.split(\"/\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                .map(keyword -\u003e keyword.trim())","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"                .filter(keyword -\u003e !keyword.equals(\"\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"                .toArray(size -\u003e new String[size]); // split by \"/\" then trim each","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        return new FindStudentNameCommand(new StudentNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":35}},{"path":"src/main/java/jeryl/fyp/logic/parser/FindTagsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindTagsCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.TagsContainKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":" * Parses input arguments and creates a new FindTagsCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"public class FindTagsCommandParser implements Parser\u003cFindTagsCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagsCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"     * and returns a FindTagsCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    public FindTagsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        String[] nameKeywords \u003d Arrays.stream(trimmedArgs.split(\"/\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                .map(keyword -\u003e keyword.trim())","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"                .filter(keyword -\u003e !keyword.equals(\"\"))","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"                .toArray(size -\u003e new String[size]); // split by \"/\" then trim each","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        return new FindTagsCommand(new TagsContainKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":35}},{"path":"src/main/java/jeryl/fyp/logic/parser/FypManagerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.Command;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.EditCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.FindProjectNameCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.FindStudentIdCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.FindStudentNameCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.FindTagsCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.ListCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.ListDeadlineCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.SortProjectNameCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.SortProjectStatusCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"public class FypManagerParser {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"     * Used for initial separation of command word, flag, and args.","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"            .compile(\"(?\u003ccommandWord\u003e[\\\\S\u0026\u0026[^-]]+)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"                    + \"(?\u003cflag\u003e\\\\s*-\\\\w+)?\"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"                    + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        final String flag \u003d matcher.group(\"flag\");","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        final String newCommandWord \u003d commandWord + (flag \u003d\u003d null ? \"\" : \" \" + flag.trim());","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        switch (newCommandWord) {","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"        case AddStudentCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"            return new AddStudentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"            return new AddDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        case DeleteStudentCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"            return new DeleteStudentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"        case DeleteDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"            return new DeleteDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"        case FindProjectNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"        case FindProjectNameCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"            return new FindProjectNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"        case FindStudentNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"eugenelmj"},"content":"            return new FindStudentNameCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"        case FindStudentIdCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"eugenelmj"},"content":"            return new FindStudentIdCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"        case FindTagsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"            return new FindTagsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"SweetPotato0213"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":104,"author":{"gitId":"JordanChua"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"JordanChua"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"SweetPotato0213"},"content":"        case ListDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":108,"author":{"gitId":"SweetPotato0213"},"content":"            return new ListDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":110,"author":{"gitId":"RussellDash332"},"content":"        case SortProjectNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"RussellDash332"},"content":"        case SortProjectNameCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"            return new SortProjectNameCommand();","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":114,"author":{"gitId":"JordanChua"},"content":"        case SortProjectStatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"JordanChua"},"content":"            return new SortProjectStatusCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SweetPotato0213":20,"eugenelmj":11,"JordanChua":8,"YH-15":10,"-":52,"RussellDash332":21}},{"path":"src/main/java/jeryl/fyp/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SweetPotato0213"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.FindCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindProjectNameCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.FindStudentIdCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.FindStudentNameCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.FindTagsCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.SortProjectNameCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.SortProjectStatusCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"SweetPotato0213"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"SweetPotato0213"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"SweetPotato0213"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"SweetPotato0213"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"    private static final Pattern HELP_ARGS_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"            .compile(\"(?\u003ccommandWord\u003e[\\\\S\u0026\u0026[^-]]+)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"                    + \"(?\u003cflag\u003e\\\\s*-\\\\w)?\"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"                    + \".*\");","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"SweetPotato0213"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"SweetPotato0213"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"SweetPotato0213"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"SweetPotato0213"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"SweetPotato0213"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"SweetPotato0213"},"content":"    public HelpCommand parse(String args) {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"        final Matcher matcher \u003d HELP_ARGS_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JordanChua"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"JordanChua"},"content":"        final String flag \u003d matcher.group(\"flag\");","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"JordanChua"},"content":"        final String parsedArgs \u003d commandWord + (flag \u003d\u003d null ? \"\" : \" \" + flag.trim());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"JordanChua"},"content":"        switch (parsedArgs) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"JordanChua"},"content":"        case AddStudentCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"JordanChua"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(AddDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"JordanChua"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"JordanChua"},"content":"        case DeleteStudentCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(DeleteStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"JordanChua"},"content":"        case DeleteDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(DeleteDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"JordanChua"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"        case FindProjectNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(FindProjectNameCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"JordanChua"},"content":"        case FindProjectNameCommand.ALTERNATIVE_COMMAND_WORD: // \u0027find\u0027 gives the full FindCommand usage message","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"JordanChua"},"content":"        case FindStudentNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(FindStudentNameCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"JordanChua"},"content":"        case FindStudentIdCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(FindStudentIdCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"JordanChua"},"content":"        case FindTagsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(FindTagsCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"SweetPotato0213"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"JordanChua"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"JordanChua"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"SweetPotato0213"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JordanChua"},"content":"            return new HelpCommand(MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"        case SortProjectNameCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"        case SortProjectNameCommand.ALTERNATIVE_COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"            return new HelpCommand(SortProjectNameCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"        case SortProjectStatusCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"            return new HelpCommand(SortProjectStatusCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"SweetPotato0213"},"content":"        default:","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"SweetPotato0213"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"SweetPotato0213"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"SweetPotato0213"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"SweetPotato0213":33,"eugenelmj":2,"JordanChua":63,"YH-15":4,"RussellDash332":9}},{"path":"src/main/java/jeryl/fyp/logic/parser/ListDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SweetPotato0213"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"SweetPotato0213"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"SweetPotato0213"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"SweetPotato0213"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.commands.ListDeadlineCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"SweetPotato0213"},"content":"/**","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"SweetPotato0213"},"content":" * Parses input arguments and creates a new DeleteDeadlineCommand object","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"SweetPotato0213"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"SweetPotato0213"},"content":"public class ListDeadlineCommandParser implements Parser\u003cListDeadlineCommand\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"SweetPotato0213"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"SweetPotato0213"},"content":"     * Parses the given {@code String} of arguments in the context of the ListDeadlineCommand","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"SweetPotato0213"},"content":"     * and returns a ListDeadlineCommand object for execution.","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"SweetPotato0213"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"SweetPotato0213"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"SweetPotato0213"},"content":"    public ListDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"SweetPotato0213"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"SweetPotato0213"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID);","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"SweetPotato0213"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID)","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"SweetPotato0213"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"SweetPotato0213"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"SweetPotato0213"},"content":"                    ListDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"SweetPotato0213"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"SweetPotato0213"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"SweetPotato0213"},"content":"        return new ListDeadlineCommand(studentId);","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"SweetPotato0213"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"SweetPotato0213"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"SweetPotato0213"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"SweetPotato0213"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"SweetPotato0213"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"SweetPotato0213"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"SweetPotato0213"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"SweetPotato0213":42}},{"path":"src/main/java/jeryl/fyp/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":" * Parses input arguments and creates a new {@code MarkCommand} object","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_ID, PREFIX_PROJECT_STATUS);","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_ID, PREFIX_PROJECT_STATUS)","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENT_ID).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"        ProjectStatus projectStatus \u003d ParserUtil.parseProjectStatus(argMultimap.getValue(PREFIX_PROJECT_STATUS).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"        return new MarkCommand(studentId, projectStatus);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"JordanChua":37,"RussellDash332":8}},{"path":"src/main/java/jeryl/fyp/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Datetimes.ACCEPTABLE_DATETIME_FORMATS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_DEADLINE_RANK;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"     * Parses a {@code String name} into a {@code StudentName}.","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"     * @throws ParseException if the given {@code StudentName} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    public static StudentName parseStudentName(String name) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        if (!StudentName.isValidStudentName(trimmedName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"            throw new ParseException(StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        return new StudentName(trimmedName);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"     * Parses {@code String studentId} into an {@code StudentId} and returns it.","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"     * @throws ParseException if the given {@code StudentId} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"        String trimmedId \u003d studentId.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        if (!StudentId.isValidStudentId(trimmedId)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        return new StudentId(trimmedId);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"     * Parses a {@code String projectName} into a {@code ProjectName}.","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"     * @throws ParseException if the given {@code projectName} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"    public static ProjectName parseProjectName(String projectName) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"        requireNonNull(projectName);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"        String trimmedProjectName \u003d projectName.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"        if (!ProjectName.isValidProjectName(trimmedProjectName)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"            throw new ParseException(ProjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"        return new ProjectName(trimmedProjectName);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"JordanChua"},"content":"     * Parses {@code String studentId} into an {@code StudentId} and returns it.","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"JordanChua"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"JordanChua"},"content":"     * @throws ParseException if the specified studentId is invalid(not of the format \"A\" + 7 numbers + 1 letter).","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"JordanChua"},"content":"    public static ProjectStatus parseProjectStatus(String projectStatus) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"JordanChua"},"content":"        requireNonNull(projectStatus);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"JordanChua"},"content":"        String trimmedProjectStatus \u003d projectStatus.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"JordanChua"},"content":"        if (!ProjectStatus.isValidProjectStatus(trimmedProjectStatus)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"JordanChua"},"content":"            throw new ParseException(ProjectStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"JordanChua"},"content":"        return new ProjectStatus(trimmedProjectStatus);","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"YH-15"},"content":"     * Parses a {@code String deadlineName} into a {@code deadlineName}.","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"YH-15"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"     * @throws ParseException if the given {@code deadlineName} is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"    public static DeadlineName parseDeadlineName(String deadlineName) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"        requireNonNull(deadlineName);","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"        String trimmedDeadlineName \u003d deadlineName.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"        if (!DeadlineName.isValidDeadlineName(trimmedDeadlineName)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"RussellDash332"},"content":"            throw new ParseException(DeadlineName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"        return new DeadlineName(trimmedDeadlineName);","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"YH-15"},"content":"     * Converts a datetime string to a LocalDateTime Object.","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"RussellDash332"},"content":"     * @param dateTime A string in format: dd-MM-yyyy HH:mm.","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"YH-15"},"content":"     * @return A LocalDateTime variable implied by the string.","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"YH-15"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"YH-15"},"content":"    public static LocalDateTime parseDeadlineDatetime(String dateTime) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"RussellDash332"},"content":"        for (String dateTimeFormat : ACCEPTABLE_DATETIME_FORMATS) {","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"YH-15"},"content":"            try {","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"RussellDash332"},"content":"                return LocalDateTime.parse(dateTime,","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"RussellDash332"},"content":"                        DateTimeFormatter.ofPattern(dateTimeFormat)","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"RussellDash332"},"content":"                                .withResolverStyle(ResolverStyle.SMART));","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"RussellDash332"},"content":"            } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"RussellDash332"},"content":"                // Go to the next dateTime format","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"RussellDash332"},"content":"        throw new ParseException(\"Invalid datetime format given!\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"RussellDash332"},"content":"                + \"Consider using \\\"dd-MM-yyyy HH:mm\\\"\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"RussellDash332"},"content":"                + \"Example: 20-10-2022 13:57\");","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":181,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":182,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"YH-15"},"content":"     * Parses a {@code String rank} into a {@code Integer rank}.","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"YH-15"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"YH-15"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"YH-15"},"content":"     * @throws ParseException if the given {@code rank} is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":188,"author":{"gitId":"YH-15"},"content":"    public static Integer parseRank(String rank) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"YH-15"},"content":"        requireNonNull(rank);","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"YH-15"},"content":"        String trimmedRank \u003d rank.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"YH-15"},"content":"            return Integer.valueOf(trimmedRank);","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"YH-15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"YH-15"},"content":"            throw new ParseException(MESSAGE_INVALID_DEADLINE_RANK);","lastModifiedDate":"2022-10-18"},{"lineNumber":195,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":196,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"eugenelmj":1,"JordanChua":16,"YH-15":54,"-":85,"RussellDash332":41}},{"path":"src/main/java/jeryl/fyp/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/model/FypManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.UniqueStudentList;","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":" * Wraps all data at the FYP-manager level","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"public class FypManager implements ReadOnlyFypManager {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    public FypManager() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"     * Creates a FypManager using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"    public FypManager(ReadOnlyFypManager toBeCopied) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"     * Resets the existing data of this {@code FypManager} with {@code newData}.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"    public void resetData(ReadOnlyFypManager newData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        return students.contains(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"     * Adds a student to the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"     * The student must not already exist in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"        students.add(p);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"eugenelmj"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"     * {@code target} must exist in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"     * in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"eugenelmj"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"     * Removes {@code student} from this {@code FypManager}.","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"     * {@code student} must exist in the FYP manager.","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"        students.remove(student);","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"JordanChua"},"content":"     * Returns unique Student if {@code students} contains the student with the specified studentId.","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"JordanChua"},"content":"    public Student getStudentByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JordanChua"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"JordanChua"},"content":"        return students.getStudentByStudentId(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"PokezardVGC"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"PokezardVGC"},"content":"     * @param studentId studentId we provide to get index in FYPManager","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"PokezardVGC"},"content":"     * @return index position in FYPManager","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"PokezardVGC"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"PokezardVGC"},"content":"    public Index getIndexByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"PokezardVGC"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"PokezardVGC"},"content":"        return students.getIndexByStudentId(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"PokezardVGC"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"    //// deadline-level operations","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"     * Returns true if a deadline with the same identity as {@code deadline} exists in the {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"YH-15"},"content":"    public boolean hasDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"YH-15"},"content":"        return student.getDeadlineList().contains(deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"YH-15"},"content":"     * Removes {@code deadline} from this specified {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"YH-15"},"content":"     * {@code deadline} must exist in the specified {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"    public void removeDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"        student.getDeadlineList().remove(deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"RussellDash332"},"content":"        setStudent(student, student);","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"YH-15"},"content":"     * Adds a deadline to this specified {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"YH-15"},"content":"     * The deadline must not already exist in this specified {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"YH-15"},"content":"    public void addDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"YH-15"},"content":"        student.getDeadlineList().add(deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"RussellDash332"},"content":"        setStudent(student, student);","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"YH-15"},"content":"     * Replaces the given deadline {@code target} in the list with {@code editedDeadline}.","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"     * {@code target} must exist in the {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"     * The deadline identity of {@code editedDeadline} must not be the same as another existing deadline","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"     * in the {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"    public void setDeadline(Student student, Deadline target, Deadline editedDeadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(student, target, editedDeadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"        student.getDeadlineList().setDeadline(target, editedDeadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"RussellDash332"},"content":"        setStudent(student, student);","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"eugenelmj"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"eugenelmj"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"eugenelmj"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":172,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"RussellDash332"},"content":"        return students.filter(student -\u003e !student.getProjectStatus().projectStatus.equals(\"DONE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"RussellDash332"},"content":"        return students.filter(student -\u003e student.getProjectStatus().projectStatus.equals(\"DONE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"SweetPotato0213"},"content":"    public DeadlineList getDeadlineList(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"SweetPotato0213"},"content":"        return student.getDeadlineList();","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":188,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"RussellDash332"},"content":"        return getUncompletedStudentList().sorted(Comparator.comparing(s -\u003e s.getProjectName().toString()","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"RussellDash332"},"content":"                .toLowerCase()));","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":194,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"RussellDash332"},"content":"        return getUncompletedStudentList().sorted((a, b) -\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":196,"author":{"gitId":"RussellDash332"},"content":"            int statusComp \u003d b.getProjectStatus().toString().toLowerCase()","lastModifiedDate":"2022-10-28"},{"lineNumber":197,"author":{"gitId":"RussellDash332"},"content":"                    .compareTo(a.getProjectStatus().toString().toLowerCase());","lastModifiedDate":"2022-10-28"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"RussellDash332"},"content":"            if (statusComp !\u003d 0) {","lastModifiedDate":"2022-10-28"},{"lineNumber":200,"author":{"gitId":"RussellDash332"},"content":"                return statusComp;","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"RussellDash332"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":202,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":203,"author":{"gitId":"RussellDash332"},"content":"            return a.getProjectName().toString().toLowerCase()","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"RussellDash332"},"content":"                    .compareTo(b.getProjectName().toString().toLowerCase());","lastModifiedDate":"2022-10-28"},{"lineNumber":205,"author":{"gitId":"RussellDash332"},"content":"        });","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":207,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":209,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getSortedCompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"RussellDash332"},"content":"        return getCompletedStudentList().sorted(Comparator.comparing(s -\u003e s.getProjectName().toString()","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"RussellDash332"},"content":"                .toLowerCase()));","lastModifiedDate":"2022-10-28"},{"lineNumber":212,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":213,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"RussellDash332"},"content":"                || (other instanceof FypManager // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 students.equals(((FypManager) other).students));","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"eugenelmj"},"content":"        return students.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SweetPotato0213":10,"eugenelmj":23,"JordanChua":10,"YH-15":35,"PokezardVGC":11,"-":75,"RussellDash332":61}},{"path":"src/main/java/jeryl/fyp/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"     * Returns the user prefs\u0027 FYP manager file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    Path getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"     * Sets the user prefs\u0027 FYP manager file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    void setFypManagerFilePath(Path fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"     * Replaces FYP manager data with the data in {@code fypManager}.","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"    void setFypManager(ReadOnlyFypManager fypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"    /** Returns the FypManager */","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    ReadOnlyFypManager getFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"     * The student must exist in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"     * {@code student} must not already exist in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"     * {@code target} must exist in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"     * in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"eugenelmj"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"     * Returns true if a deadline with the same identity as {@code deadline} exists in the student\u0027s DeadlineList.","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"    boolean hasDeadline(Student student, Deadline deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"     * Deletes the given deadline for the given student.","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"     * The deadline must exist in the DeadlineList of the given student.","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"    void deleteDeadline(Student student, Deadline deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"     * Adds the given deadline to the DeadlineList of the given student.","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"     * {@code deadline} must not already exist in the DeadlineList of the given student.","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"    void addDeadline(Student student, Deadline deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"     * Replaces the given deadline {@code target} with {@code editedDeadline}.","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"     * {@code target} must not already exist in the DeadlineList of the given student.","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"     * The deadline identity of {@code editedDeadline} must not be the same as another existing deadline","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"     * for the given student {@code student}.","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"    void setDeadline(Student student, Deadline target, Deadline editedDeadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"JordanChua"},"content":"     * Gets the unique student with the specified StudentId","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"JordanChua"},"content":"     * {@code studentId} is unique so it should output 1 student only","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"JordanChua"},"content":"    Student getStudentByStudentId(StudentId studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"PokezardVGC"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"PokezardVGC"},"content":"     * Gets the index position in UniqueStudentList with the specified StudentId","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"PokezardVGC"},"content":"     * {@code studentId} is unique so it should output 1 student only","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"PokezardVGC"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"PokezardVGC"},"content":"    Index getIndexByStudentId(StudentId studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"eugenelmj"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"eugenelmj"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"RussellDash332"},"content":"    /** Returns an unmodifiable view of the sorted Uncompleted student list by project name */","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"JordanChua"},"content":"     * Returns an unmodifiable view of the sorted Uncompleted student list by project status","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"JordanChua"},"content":"     * followed by alphabetical order","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"JordanChua"},"content":"    ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"RussellDash332"},"content":"     * Returns an unmodifiable view of the sorted Completed student list by project name","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"JordanChua"},"content":"     * which is equivalent to sorting by  alphabetical order","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"JordanChua"},"content":"    ObservableList\u003cStudent\u003e getSortedCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"    /** Returns an unmodifiable view of the uncompleted list of students */","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"RussellDash332"},"content":"    /** Returns an unmodifiable view of the completed list of students */","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"eugenelmj"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"eugenelmj"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"SweetPotato0213"},"content":"    DeadlineList listDeadlineUnderStudent(Student student);","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SweetPotato0213":3,"eugenelmj":14,"JordanChua":19,"PokezardVGC":8,"YH-15":26,"-":59,"RussellDash332":24}},{"path":"src/main/java/jeryl/fyp/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":" * Represents the in-memory model of the FYP manager data.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    private final FypManager fypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    private final SortedList\u003cStudent\u003e sortedByProjectNameUncompletedStudents;","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"    private final SortedList\u003cStudent\u003e sortedByProjectStatusUncompletedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"    private final SortedList\u003cStudent\u003e sortedCompletedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    private final FilteredList\u003cStudent\u003e completedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"    private final FilteredList\u003cStudent\u003e uncompletedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"     * Initializes a ModelManager with the given fypManager and userPrefs.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"    public ModelManager(ReadOnlyFypManager fypManager, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        requireAllNonNull(fypManager, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"        logger.fine(\"Initializing with FYP manager: \" + fypManager + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        this.fypManager \u003d new FypManager(fypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.fypManager.getStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        completedStudents \u003d new FilteredList\u003c\u003e(this.fypManager.getCompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"        uncompletedStudents \u003d new FilteredList\u003c\u003e(this.fypManager.getUncompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        sortedByProjectNameUncompletedStudents \u003d","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                new SortedList\u003c\u003e(this.fypManager.getSortedByProjectNameUncompletedStudentList());","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"JordanChua"},"content":"        sortedByProjectStatusUncompletedStudents \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"JordanChua"},"content":"                new SortedList\u003c\u003e(this.fypManager.getSortedByProjectStatusUncompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"JordanChua"},"content":"        sortedCompletedStudents \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"JordanChua"},"content":"                new SortedList\u003c\u003e(this.fypManager.getSortedCompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        this(new FypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"    public Path getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"        return userPrefs.getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"    public void setFypManagerFilePath(Path fypManagerFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"        requireNonNull(fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"        userPrefs.setFypManagerFilePath(fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FypManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"    public void setFypManager(ReadOnlyFypManager fypManager) {","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"        this.fypManager.resetData(fypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"    public ReadOnlyFypManager getFypManager() {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"        return fypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"eugenelmj"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"RussellDash332"},"content":"        return fypManager.hasStudent(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"eugenelmj"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"RussellDash332"},"content":"        fypManager.removeStudent(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"eugenelmj"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"RussellDash332"},"content":"        fypManager.addStudent(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"eugenelmj"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"eugenelmj"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"        fypManager.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"    public boolean hasDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"YH-15"},"content":"        return fypManager.hasDeadline(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"YH-15"},"content":"    public void deleteDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"YH-15"},"content":"        fypManager.removeDeadline(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"    public void addDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"        fypManager.addDeadline(student, deadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"RussellDash332"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"    public void setDeadline(Student student, Deadline target, Deadline editedDeadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(student, target, editedDeadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"        fypManager.setDeadline(student, target, editedDeadline);","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"JordanChua"},"content":"    public Student getStudentByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"JordanChua"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"JordanChua"},"content":"        return fypManager.getStudentByStudentId(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"PokezardVGC"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"PokezardVGC"},"content":"    public Index getIndexByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"PokezardVGC"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"PokezardVGC"},"content":"        return fypManager.getIndexByStudentId(studentId);","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"PokezardVGC"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"eugenelmj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":177,"author":{"gitId":"eugenelmj"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"RussellDash332"},"content":"     * {@code versionedFypManager}","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"eugenelmj"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"eugenelmj"},"content":"        return filteredStudents;","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"RussellDash332"},"content":"     * Returns an unmodifiable view of the list of {@code Student} who have yet to complete","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"RussellDash332"},"content":"     * their projects, backed by the internal list of {@code versionedFypManager}","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"RussellDash332"},"content":"        return uncompletedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"RussellDash332"},"content":"     * Returns an unmodifiable view of the list of {@code Student} who have completed their projects,","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"RussellDash332"},"content":"     * backed by the internal list of {@code versionedFypManager}","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"RussellDash332"},"content":"        return completedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"JordanChua"},"content":"     * Returns an unmodifiable view of the list of {@code Student} who have yet to complete","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"RussellDash332"},"content":"     * their projects sorted by their project name,","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"JordanChua"},"content":"     * backed by the internal list of {@code versionedFypManager}","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"RussellDash332"},"content":"        return sortedByProjectNameUncompletedStudents;","lastModifiedDate":"2022-10-28"},{"lineNumber":211,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"JordanChua"},"content":"     * Returns an unmodifiable view of the list of {@code Student} who have yet to complete","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"JordanChua"},"content":"     * their projects sorted by their project status","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"JordanChua"},"content":"     * backed by the internal list of {@code versionedFypManager}","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"JordanChua"},"content":"    public ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"JordanChua"},"content":"        return sortedByProjectStatusUncompletedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"JordanChua"},"content":"     * Returns an unmodifiable view of the list of {@code Student} who have completed","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"RussellDash332"},"content":"     * their projects sorted by their project name (or equivalently alphabetical order)","lastModifiedDate":"2022-10-28"},{"lineNumber":226,"author":{"gitId":"JordanChua"},"content":"     * backed by the internal list of {@code versionedFypManager}","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"JordanChua"},"content":"    public ObservableList\u003cStudent\u003e getSortedCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"JordanChua"},"content":"        return sortedCompletedStudents;","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":234,"author":{"gitId":"eugenelmj"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":236,"author":{"gitId":"eugenelmj"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"RussellDash332"},"content":"        completedStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"RussellDash332"},"content":"        uncompletedStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":241,"author":{"gitId":"SweetPotato0213"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"SweetPotato0213"},"content":"    public DeadlineList listDeadlineUnderStudent(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"SweetPotato0213"},"content":"        return fypManager.getDeadlineList(student);","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"SweetPotato0213"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"RussellDash332"},"content":"        return fypManager.equals(other.fypManager)","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":262,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SweetPotato0213":6,"eugenelmj":16,"JordanChua":43,"PokezardVGC":9,"YH-15":26,"-":104,"RussellDash332":61}},{"path":"src/main/java/jeryl/fyp/model/ReadOnlyFypManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * Unmodifiable view of a FYP manager","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"public interface ReadOnlyFypManager {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"     * Returns an unmodifiable view of the list of students who have yet to","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"     * complete their projects.","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getUncompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"     * Returns an unmodifiable view of the list of students who have","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"     * completed their projects.","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getCompletedStudentList();","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"     * Sorts our uncompleted student list by project name, which","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"     * naturally sorts it in alphabetical order.","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"     * Sorts our uncompleted student list by project status then","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"     * by alphabetical order.","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"     * Sorts our completed student list by project name, which","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"     * naturally sorts it in alphabetical order.","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    ObservableList\u003cStudent\u003e getSortedCompletedStudentList();","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenelmj":4,"-":10,"RussellDash332":35}},{"path":"src/main/java/jeryl/fyp/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"    Path getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":13,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    private Path fypManagerFilePath \u003d Paths.get(\"data\" , \"fypmanager.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        setFypManagerFilePath(newUserPrefs.getFypManagerFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"    public Path getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"        return fypManagerFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"    public void setFypManagerFilePath(Path fypManagerFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        requireNonNull(fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        this.fypManagerFilePath \u003d fypManagerFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 fypManagerFilePath.equals(o.fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        return Objects.hash(guiSettings, fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"        sb.append(\"\\nLocal data file location : \" + fypManagerFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":75,"RussellDash332":12}},{"path":"src/main/java/jeryl/fyp/model/student/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":" * Represents a deadline added by the professor to a student\u0027s project.","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":" * Guarantees: immutable","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"public class Deadline {","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"            \"Deadline must have a valid deadline name and valid deadline datetime\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"    public final DeadlineName fullDeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    public final LocalDateTime fullDeadlineDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"     * @param deadlineName A valid deadline name.","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"     * @param deadlineDateTime A valid deadline date.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    public Deadline(DeadlineName deadlineName, LocalDateTime deadlineDateTime) {","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        requireNonNull(deadlineName);","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"        fullDeadlineName \u003d deadlineName;","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"        fullDeadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"     * Returns the deadline task name.","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"     * @return The deadline name.","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    public DeadlineName getDeadlineName() {","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        return fullDeadlineName;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"     * Returns the deadline datetime.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"     * @return The deadline datetim.","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"    public LocalDateTime getDeadlineDateTime() {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        return fullDeadlineDateTime;","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"     * Returns true if both deadlines have the same name.","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"     * This defines a weaker notion of equality between two deadlines.","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"     * @param otherDeadline The deadline object compared to the current deadline.","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"     * @return True if both deadlines have the same name.","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"    public boolean isSameDeadlineName(Deadline otherDeadline) {","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        if (otherDeadline \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"        return otherDeadline !\u003d null","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 otherDeadline.getDeadlineName().equals(getDeadlineName());","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"        builder.append(getDeadlineName())","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"                .append(\", deadline: \")","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"                .append(getDeadlineDateTime().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"        return otherDeadline.getDeadlineName().equals(getDeadlineName())","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 otherDeadline.getDeadlineDateTime().equals(getDeadlineDateTime());","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"        return Objects.hash(fullDeadlineName, fullDeadlineDateTime);","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"YH-15":83,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/model/student/DeadlineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.exceptions.DeadlineNotFoundException;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.exceptions.DuplicateDeadlineException;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":" * A list of deadlines that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":" * A deadline is considered unique by comparing using {@code Deadline#isSameDeadline(Deadline)}. As such, adding and","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":" * updating of Deadlines uses Deadline#isSameDeadline(Deadline) for equality so as to ensure that the deadline being","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":" * added or updated is unique in terms of identity in the UniqueDeadlineList. However, the removal of a deadline uses","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":" * Deadline#equals(Object) so as to ensure that the deadline with exactly the same fields will be removed.","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":" *","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":" *","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":" * @see Deadline#isSameDeadlineName(Deadline)","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"public class DeadlineList implements DeadlineListTemplate {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"    private final ObservableList\u003cDeadline\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"    private final ObservableList\u003cDeadline\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"     * Returns true if the list contains an equivalent deadline as the given argument.","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"    public boolean contains(Deadline toCheck) {","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDeadlineName);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"     * Adds a deadline to the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"     * The deadline must not already exist in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"    public void add(Deadline toAdd) {","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"            throw new DuplicateDeadlineException();","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        internalList.sort(Comparator.comparing(ddl -\u003e ddl.fullDeadlineDateTime));","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"     * Replaces the deadline {@code target} in the list with {@code editedDeadline}.","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"     * The deadline identity of {@code editedDeadline} must not be the same as another existing deadline in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"    public void setDeadline(Deadline target, Deadline editedDeadline) {","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(target, editedDeadline);","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"            throw new DeadlineNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"        if (!target.isSameDeadlineName(editedDeadline) \u0026\u0026 contains(editedDeadline)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"            throw new DuplicateDeadlineException();","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"        internalList.set(index, editedDeadline);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"     * Removes the equivalent deadline from the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"     * The deadline must exist in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"    public void remove(Deadline toRemove) {","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"            throw new DeadlineNotFoundException();","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"     *  Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"    public void setDeadlines(DeadlineList replacement) {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-17"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"     * Replaces the contents of this list with {@code deadlines}.","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"     * @param deadlines must not contain duplicate deadlines.","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"    public void setDeadlines(List\u003cDeadline\u003e deadlines) {","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(deadlines);","lastModifiedDate":"2022-10-17"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"        if (!deadlinesAreUnique(deadlines)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"            throw new DuplicateDeadlineException();","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"        internalList.setAll(deadlines);","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"    public ObservableList\u003cDeadline\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"    public Iterator\u003cDeadline\u003e iterator() {","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"YH-15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"YH-15"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"RussellDash332"},"content":"                || (other instanceof DeadlineList // instanceof handles nulls","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 internalList.equals(((DeadlineList) other).internalList));","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"YH-15"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"RussellDash332"},"content":"    public String toString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"RussellDash332"},"content":"        return \"[\" + internalList","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"                .stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"RussellDash332"},"content":"                .map(ddl -\u003e ddl.getDeadlineName().fullDeadlineName)","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"RussellDash332"},"content":"                .collect(Collectors.joining(\", \")) + \"]\";","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"     * Returns true if {@code deadlines} contains only unique deadlines.","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"    private boolean deadlinesAreUnique(List\u003cDeadline\u003e deadlines) {","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"YH-15"},"content":"        for (int i \u003d 0; i \u003c deadlines.size(); i++) {","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"            for (int j \u003d i + 1; j \u003c deadlines.size(); j++) {","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"                if (deadlines.get(i).isSameDeadlineName(deadlines.get(j))) {","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"                    return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"                }","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"        return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"RussellDash332"},"content":"     * Returns unique {@code Deadline} with the specified {@code taskName}.","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"YH-15"},"content":"    public Deadline getDeadlineByName(String taskName) {","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"YH-15"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"YH-15"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"YH-15"},"content":"            if (internalList.get(i).getDeadlineName().equals(taskName)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"YH-15"},"content":"                deadline \u003d internalList.get(i);","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"YH-15"},"content":"        return deadline;","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"RussellDash332"},"content":"     * Returns the {@code Index} of the deadline with the specified {@code taskName}.","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"YH-15"},"content":"    public Index getIndexByName(String taskName) {","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"YH-15"},"content":"        int index \u003d internalList.size();","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"YH-15"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"YH-15"},"content":"            if (internalList.get(i).getDeadlineName().equals(taskName)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"YH-15"},"content":"                index \u003d i;","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"YH-15"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"YH-15"},"content":"        return new Index(index);","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"RussellDash332"},"content":"     * Returns the {@code Deadline} at a given index {@code index}.","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"RussellDash332"},"content":"    public Deadline getDeadlineByRank(Integer index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"RussellDash332"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"RussellDash332"},"content":"        return internalList.get(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":195,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"RussellDash332"},"content":"     * Returns the size of the deadline list.","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"RussellDash332"},"content":"    public int size() {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"RussellDash332"},"content":"        return internalList.size();","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":203,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"YH-15":175,"RussellDash332":29}},{"path":"src/main/java/jeryl/fyp/model/student/DeadlineListTemplate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":" * An interface created for DeadlineList, for test purpose","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"public interface DeadlineListTemplate extends Iterable\u003cDeadline\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    boolean contains(Deadline toCheck);","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"    void add(Deadline toAdd) throws RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    void setDeadline(Deadline target, Deadline editedDeadline) throws RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    void remove(Deadline toRemove) throws RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    void setDeadlines(DeadlineList replacement);","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    void setDeadlines(List\u003cDeadline\u003e deadlines) throws RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    ObservableList\u003cDeadline\u003e asUnmodifiableObservableList();","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"    Deadline getDeadlineByName(String taskName);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"    Index getIndexByName(String taskName);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    Deadline getDeadlineByRank(Integer rank) throws RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    int size();","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"YH-15":26,"RussellDash332":7}},{"path":"src/main/java/jeryl/fyp/model/student/DeadlineName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":" * Represents a Deadline\u0027s deadline name.","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadlineName(String)}","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"public class DeadlineName {","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"            \"Deadline names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    /*","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    public final String fullDeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"     * Constructs a {@code DeadlineName}.","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"     * @param deadlineName A valid ddl name.","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"    public DeadlineName(String deadlineName) {","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"        requireNonNull(deadlineName);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        checkArgument(isValidDeadlineName(deadlineName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        fullDeadlineName \u003d deadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"     * Returns true if a given string is a valid deadline name.","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    public static boolean isValidDeadlineName(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"    public String toString() {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        return fullDeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"                || (other instanceof DeadlineName // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 fullDeadlineName.equals(((DeadlineName) other).fullDeadlineName)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"        return fullDeadlineName.hashCode();","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"YH-15":58}},{"path":"src/main/java/jeryl/fyp/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * Represents a Student\u0027s email in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenelmj":1,"-":68,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/model/student/FieldContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":" * Tests that a {@code Student}\u0027s particular field matches any of the keywords given.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"public abstract class FieldContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"    public FieldContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"    public abstract boolean test(Student student);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":19}},{"path":"src/main/java/jeryl/fyp/model/student/ProjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * Represents a Student\u0027s project name in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectName(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"public class ProjectName {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    // TODO -- Russell","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"            \"Project names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    // TODO -- Russell","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    public final String fullProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"     * Constructs a {@code ProjectName}.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"     * @param projectName A valid project name.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    public ProjectName(String projectName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        requireNonNull(projectName);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        checkArgument(isValidProjectName(projectName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"        fullProjectName \u003d projectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"     * Returns true if a given string is a valid project name.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"    public static boolean isValidProjectName(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        return fullProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"                || (other instanceof ProjectName // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 fullProjectName.equals(((ProjectName) other).fullProjectName)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        return fullProjectName.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"JordanChua":1,"RussellDash332":60}},{"path":"src/main/java/jeryl/fyp/model/student/ProjectNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" * Tests that a {@code Student}\u0027s {@code ProjectName} matches any of the keywords given.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"public class ProjectNameContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    public ProjectNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"        super(keywords);","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"                        student.getProjectName().fullProjectName, keyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"                || (other instanceof ProjectNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 keywords.equals(((ProjectNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"eugenelmj":5,"YH-15":21,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/model/student/ProjectStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":" * Represents a Student\u0027s project status in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectStatus(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":"public class ProjectStatus {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"            \"Status should only be of the form YTS, IP OR DONE\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"    public final String projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"     * Constructs a {@code ProjectStatus}.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"     * @param status A valid project status","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"    public ProjectStatus(String status) {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"        checkArgument(isValidProjectStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"        projectStatus \u003d status;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"     * Constructs a default {@code ProjectStatus}.","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    public ProjectStatus() {","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        this(\"YTS\");","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"        return projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"     * Returns true if a given status is one of our enumeration constants","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"    public static boolean isValidProjectStatus(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        return (test.equals(\"YTS\") || test.equals(\"IP\") || test.equals(\"DONE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JordanChua"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JordanChua"},"content":"                || (other instanceof ProjectStatus // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JordanChua"},"content":"                \u0026\u0026 projectStatus.equals(((ProjectStatus) other).projectStatus)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"JordanChua":43,"RussellDash332":8}},{"path":"src/main/java/jeryl/fyp/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":" * Represents a Student in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"public class Student {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"    private final StudentName studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    private final ProjectName projectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    private final ProjectStatus projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    private final DeadlineList deadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"     * Every field except deadlineList must be present and not null.","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    public Student(StudentName studentName, StudentId studentId, Email email, ProjectName projectName,","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"                   ProjectStatus projectStatus, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        this(studentName, studentId, email, projectName, projectStatus, new DeadlineList(), tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"     * Every field must be present and not null. This is for restoration.","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    public Student(StudentName studentName, StudentId studentId, Email email, ProjectName projectName,","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"                   ProjectStatus projectStatus, DeadlineList deadlineList, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        requireAllNonNull(studentName, studentId, email, projectName, projectStatus, tags);","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"        this.projectStatus \u003d projectStatus;","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"        this.deadlineList \u003d deadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    public StudentName getStudentName() {","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        return studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"        return studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"    public ProjectName getProjectName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        return projectName;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"JordanChua"},"content":"    public ProjectStatus getProjectStatus() {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"JordanChua"},"content":"        return projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"    public DeadlineList getDeadlineList() {","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"        return deadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"     * Returns true if both students have the same ID.","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"    public boolean isSameStudentId(Student otherStudent) {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId());","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"eugenelmj"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"eugenelmj"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"eugenelmj"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"eugenelmj"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"        return otherStudent.getStudentName().equals(getStudentName())","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 otherStudent.getProjectName().equals(getProjectName())","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"                \u0026\u0026 otherStudent.getDeadlineList().equals(getDeadlineList())","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"        return Objects.hash(studentName, studentId, email, projectName, projectStatus, deadlineList, tags);","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"        builder.append(getStudentName())","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"eugenelmj"},"content":"                .append(\"; Student ID: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"RussellDash332"},"content":"                .append(getStudentId())","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"                .append(\"; ProjectName: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"JordanChua"},"content":"                .append(getProjectName())","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"JordanChua"},"content":"                .append(\"; ProjectStatus: \")","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"                .append(getProjectStatus())","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"                .append(\"; Deadlines: \")","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"                .append(getDeadlineList());","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenelmj":13,"JordanChua":8,"YH-15":30,"-":77,"RussellDash332":21}},{"path":"src/main/java/jeryl/fyp/model/student/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * Represents a Student\u0027s student ID in the FYP manager.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"public class StudentId {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"            \"ID should be of the format \u0027A\u0027 + (7 digits) + (1 uppercase letter), and it should not be blank\";","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"    public static final String VALIDATION_REGEX \u003d \"A\\\\d{7}[A-Z]\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"    public final String id;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"     * Constructs a {@code StudentId}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"     * @param studentId A valid studentId.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        id \u003d studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"JordanChua"},"content":"        return id;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"JordanChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"JordanChua"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 id.equals(((StudentId) other).id)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"JordanChua"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"JordanChua"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"JordanChua"},"content":"        return id.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"eugenelmj":1,"JordanChua":42,"RussellDash332":16}},{"path":"src/main/java/jeryl/fyp/model/student/StudentIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" * Tests that a {@code Student}\u0027s {@code StudentId} matches any of the keywords given.","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"public class StudentIdContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"    public StudentIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"        super(keywords);","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"                        student.getStudentId().id, keyword));","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"                || (other instanceof StudentIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 keywords.equals(((StudentIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":29}},{"path":"src/main/java/jeryl/fyp/model/student/StudentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * Represents a Student\u0027s student name in the FYP manager.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentName(String)}","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"public class StudentName {","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"            \"Student names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    public final String fullStudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"     * Constructs a {@code StudentName}.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    public StudentName(String name) {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        checkArgument(isValidStudentName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        fullStudentName \u003d name;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    public static boolean isValidStudentName(String test) {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        return fullStudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                || (other instanceof StudentName // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 fullStudentName.equals(((StudentName) other).fullStudentName)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        return fullStudentName.hashCode();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenelmj":1,"-":43,"RussellDash332":15}},{"path":"src/main/java/jeryl/fyp/model/student/StudentNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":" * Tests that a {@code Student}\u0027s {@code StudentName} matches any of the keywords given.","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"public class StudentNameContainsKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    public StudentNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"        super(keywords);","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsPartialWordIgnoreCase(","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"                        student.getStudentName().fullStudentName, keyword));","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"                || (other instanceof StudentNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 keywords.equals(((StudentNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"eugenelmj":4,"RussellDash332":25}},{"path":"src/main/java/jeryl/fyp/model/student/TagsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":" * Tests that a {@code Student}\u0027s {@code tags} matches any of the keywords given.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"public class TagsContainKeywordsPredicate extends FieldContainsKeywordsPredicate {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"    public TagsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"        super(keywords);","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"                .anyMatch(keyword -\u003e student.getTags().stream().anyMatch(","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"                        tagName -\u003e StringUtil.containsPartialWordIgnoreCase(String.valueOf(tagName), keyword)));","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"                || (other instanceof TagsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 keywords.equals(((TagsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"eugenelmj":29}},{"path":"src/main/java/jeryl/fyp/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":" * updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student being added","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":" * or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":" * @see Student#isSameStudentId(Student)","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudentId);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"eugenelmj"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        if (!target.isSameStudentId(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"eugenelmj"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"eugenelmj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"eugenelmj"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"eugenelmj"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"eugenelmj"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"eugenelmj"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"eugenelmj"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"     * Filters the student list based on {@code studentPredicate}.","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e filter(Predicate\u003cStudent\u003e studentPredicate) {","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"        return internalList.filtered(studentPredicate);","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"eugenelmj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"eugenelmj"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"eugenelmj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"eugenelmj"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"eugenelmj"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"eugenelmj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"eugenelmj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"eugenelmj"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"eugenelmj"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"eugenelmj"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"eugenelmj"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"eugenelmj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"eugenelmj"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"eugenelmj"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"PokezardVGC"},"content":"        for (int i \u003d 0; i \u003c students.size(); i++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"eugenelmj"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"RussellDash332"},"content":"                if (students.get(i).isSameStudentId(students.get(j))) {","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"eugenelmj"},"content":"                    return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"eugenelmj"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"eugenelmj"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"eugenelmj"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"eugenelmj"},"content":"        return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"JordanChua"},"content":"     * Returns unique Student if {@code students} contains the student with the specified studentId.","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"JordanChua"},"content":"    public Student getStudentByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JordanChua"},"content":"        Student student \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"PokezardVGC"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"JordanChua"},"content":"            if (internalList.get(i).getStudentId().equals(studentId)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"JordanChua"},"content":"                student \u003d internalList.get(i);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"JordanChua"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"JordanChua"},"content":"        return student;","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"PokezardVGC"},"content":"    public Index getIndexByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"PokezardVGC"},"content":"        int index \u003d internalList.size();","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"PokezardVGC"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"PokezardVGC"},"content":"            if (internalList.get(i).getStudentId().equals(studentId)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"PokezardVGC"},"content":"                index \u003d i;","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"PokezardVGC"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"PokezardVGC"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"PokezardVGC"},"content":"        return new Index(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"PokezardVGC"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"RussellDash332"},"content":"     * Sorts our student list by project name (which naturally sorts it by alphabetical order as well)","lastModifiedDate":"2022-10-28"},{"lineNumber":174,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"RussellDash332"},"content":"    public ObservableList\u003cStudent\u003e sortByProjectName() {","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"JordanChua"},"content":"        return internalList.sorted((Student a, Student b) -\u003e a.getProjectName().toString().toLowerCase()","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"JordanChua"},"content":"                .compareTo(b.getProjectName().toString().toLowerCase()));","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"JordanChua"},"content":"     * Sorts our student list by project Status(YTS, IP then DONE) then by alphabetical order","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"JordanChua"},"content":"    public ObservableList\u003cStudent\u003e sortByProjectStatus() {","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"JordanChua"},"content":"        return internalList.sorted(new Comparator\u003cStudent\u003e() {","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"JordanChua"},"content":"            public int compare(Student a, Student b) {","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"JordanChua"},"content":"                int statusComp \u003d b.getProjectStatus().toString().toLowerCase()","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"JordanChua"},"content":"                        .compareTo(a.getProjectStatus().toString().toLowerCase());","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"JordanChua"},"content":"                if (statusComp !\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"JordanChua"},"content":"                    return statusComp;","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"JordanChua"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"JordanChua"},"content":"                return a.getProjectName().toString().toLowerCase()","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"JordanChua"},"content":"                        .compareTo(b.getProjectName().toString().toLowerCase());","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"JordanChua"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"JordanChua"},"content":"        });","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"eugenelmj":132,"JordanChua":40,"PokezardVGC":13,"RussellDash332":14}},{"path":"src/main/java/jeryl/fyp/model/student/exceptions/DeadlineNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student.exceptions;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * Signals that the operation is unable to find the specified deadline.","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"public class DeadlineNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"    public DeadlineNotFoundException(String s) {","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"        super(s);","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"    public DeadlineNotFoundException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"        super(\"Deadline not found for this student.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"YH-15":13}},{"path":"src/main/java/jeryl/fyp/model/student/exceptions/DuplicateDeadlineException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student.exceptions;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":" * Signals that the operation will result in duplicate Deadlines (Deadlines are considered duplicates if they have the","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":" * same name).","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"public class DuplicateDeadlineException extends RuntimeException {","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"    public DuplicateDeadlineException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"        super(\"Operation would result in duplicate deadlines\");","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"YH-15":11}},{"path":"src/main/java/jeryl/fyp/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student.exceptions;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":" * same identity).","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"eugenelmj":11}},{"path":"src/main/java/jeryl/fyp/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student.exceptions;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"public class StudentNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"    public StudentNotFoundException(String s) {","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"        super(s);","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"    public StudentNotFoundException() {","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"        super(\"Student not found!\");","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"eugenelmj":5,"RussellDash332":8}},{"path":"src/main/java/jeryl/fyp/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * Represents a Tag in the FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Datetimes.ACCEPTABLE_DATETIME_FORMATS;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":" * Contains utility methods for populating {@code FypManager} with sample data.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"        return new Student[] {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"            new Student(new StudentName(\"Alex Yeoh\"), new StudentId(\"A1438807T\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"                new ProjectName(\"neural network\"), new ProjectStatus(\"YTS\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"                    getDeadlineList(\"CS2103 TP\", \"15-12-2022 12:30\"),","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"            new Student(new StudentName(\"Bernice Yu\"), new StudentId(\"A1272758C\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"                new ProjectName(\"Decision Tree\"), new ProjectStatus(\"IP\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"                    getDeadlineList(\"CS2103 IP\", \"2022-11-15 23:30\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"            new Student(new StudentName(\"Charlotte Oliveiro\"), new StudentId(\"A1210283B\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"                new Email(\"charlotte@example.com\"), new ProjectName(\"genetic algorithm\"), new ProjectStatus(\"DONE\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"                    getDeadlineList(\"midterm report\", \"2022-10-18 11:30\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"            new Student(new StudentName(\"David Li\"), new StudentId(\"A1031282L\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"                new ProjectName(\"Computer Networks\"), new ProjectStatus(\"YTS\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"                    getDeadlineList(\"Final check\", \"2022-12-08 16:00\"), getTagSet(\"family\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"            new Student(new StudentName(\"Irfan Ibrahim\"), new StudentId(\"A1492021I\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"                new ProjectName(\"computer graphics\"), new ProjectStatus(\"IP\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                    getDeadlineList(\"resterization\", \"15-11-2022 18:00\"), getTagSet(\"classmates\")),","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"            new Student(new StudentName(\"Roy Balakrishnan\"), new StudentId(\"A1624417P\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"                new ProjectName(\"circuit design\"), new ProjectStatus(\"DONE\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"                    getDeadlineList(\"CS2100 lab\", \"15-11-2022 18:00\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    public static ReadOnlyFypManager getSampleFypManager() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        FypManager sampleAb \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"eugenelmj"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"    public static DeadlineList getDeadlineList(String name, String datetime) {","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"        DeadlineList deadlines \u003d new DeadlineList();","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        deadlines.add(getDeadline(name, datetime));","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"        return deadlines;","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"    public static Deadline getDeadline(String name, String datetime) {","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"        LocalDateTime parsedDatetime \u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"        for (String dateTimeFormat : ACCEPTABLE_DATETIME_FORMATS) {","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"            try {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"                parsedDatetime \u003d LocalDateTime.parse(datetime,","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"                        DateTimeFormatter.ofPattern(dateTimeFormat)","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"                                .withResolverStyle(ResolverStyle.SMART));","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"                return new Deadline(new DeadlineName(name), parsedDatetime);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"            } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"                // Go to the next dateTime format","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"        return new Deadline(new DeadlineName(name), parsedDatetime);","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"eugenelmj":4,"JordanChua":6,"YH-15":23,"-":25,"RussellDash332":36}},{"path":"src/main/java/jeryl/fyp/storage/FypManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":" * Represents a storage for {@link jeryl.fyp.model.FypManager}.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"public interface FypManagerStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    Path getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"     * Returns FypManager data as a {@link ReadOnlyFypManager}.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    Optional\u003cReadOnlyFypManager\u003e readFypManager() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"     * @see #getFypManagerFilePath()","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    Optional\u003cReadOnlyFypManager\u003e readFypManager(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"     * Saves the given {@link ReadOnlyFypManager} to the storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"     * @param fypManager cannot be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"    void saveFypManager(ReadOnlyFypManager fypManager) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"     * @see #saveFypManager(ReadOnlyFypManager)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"    void saveFypManager(ReadOnlyFypManager fypManager, Path filePath) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":45}},{"path":"src/main/java/jeryl/fyp/storage/JsonAdaptedDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineName;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":" * Jackson-friendly version of {@link Deadline}.","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"class JsonAdaptedDeadline {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"    private final String deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"     * Constructs a {@code JsonAdaptedDeadline} with the given {@code deadline}.","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"    public JsonAdaptedDeadline(String deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"     * Converts a given {@code Deadline} into this class for Jackson use.","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"    public JsonAdaptedDeadline(Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"        this.deadline \u003d deadline.toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"    @JsonValue","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"    public String getDeadline() {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        return deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Deadline} object.","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted deadline.","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"    public Deadline toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        String[] deadlineComponents \u003d deadline.split(\", deadline: \");","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"        if (deadlineComponents.length !\u003d 2) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"        if (!DeadlineName.isValidDeadlineName(deadlineComponents[0])) {","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"            throw new IllegalValueException(DeadlineName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"            DeadlineName deadlineName \u003d ParserUtil.parseDeadlineName(deadlineComponents[0]);","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"            LocalDateTime deadlineDateTime \u003d ParserUtil.parseDeadlineDatetime(deadlineComponents[1]);","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"            return new Deadline(deadlineName, deadlineDateTime);","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"YH-15":62}},{"path":"src/main/java/jeryl/fyp/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    private final String studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    private final String studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"    private final String projectName;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"    private final String projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    private final List\u003cJsonAdaptedDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String studentName, @JsonProperty(\"studentId\") String studentId,","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"projectName\") String projectName,","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"JordanChua"},"content":"                              @JsonProperty(\"projectStatus\") String projectStatus,","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"                              @JsonProperty(\"deadlines\") List\u003cJsonAdaptedDeadline\u003e deadlines,","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"JordanChua"},"content":"        this.projectStatus \u003d projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"        if (deadlines !\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"            this.deadlines.addAll(deadlines);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"        studentName \u003d source.getStudentName().fullStudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"        studentId \u003d source.getStudentId().id;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        projectName \u003d source.getProjectName().fullProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"JordanChua"},"content":"        projectStatus \u003d source.getProjectStatus().projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"        deadlines.addAll(source.getDeadlineList().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"                .map(JsonAdaptedDeadline::new)","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"        final List\u003cDeadline\u003e studentDeadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"        for (JsonAdaptedDeadline ddl : deadlines) {","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"            studentDeadlines.add(ddl.toModelType());","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"        if (studentName \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"                    StudentName.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"        if (!StudentName.isValidStudentName(studentName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"            throw new IllegalValueException(StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"        final StudentName modelStudentName \u003d new StudentName(studentName);","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"eugenelmj"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"        if (projectName \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"RussellDash332"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"RussellDash332"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectName.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"RussellDash332"},"content":"        if (!ProjectName.isValidProjectName(projectName)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"RussellDash332"},"content":"            throw new IllegalValueException(ProjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"RussellDash332"},"content":"        final ProjectName modelProjectName \u003d new ProjectName(projectName);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"JordanChua"},"content":"        if (projectStatus \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"JordanChua"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JordanChua"},"content":"                    ProjectStatus.class.getSimpleName()));","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"JordanChua"},"content":"        final ProjectStatus modelProjectStatus \u003d new ProjectStatus(projectStatus);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"eugenelmj"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"        Student student \u003d new Student(modelStudentName, modelStudentId, modelEmail,","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"RussellDash332"},"content":"                modelProjectName, modelProjectStatus, modelTags);","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"        // restore deadlines","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"        student.getDeadlineList().setDeadlines(studentDeadlines);","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"        return student;","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenelmj":16,"JordanChua":13,"YH-15":23,"-":58,"RussellDash332":32}},{"path":"src/main/java/jeryl/fyp/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"RussellDash332":3}},{"path":"src/main/java/jeryl/fyp/storage/JsonFypManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.FileUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":" * A class to access FypManager data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"public class JsonFypManagerStorage implements FypManagerStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFypManagerStorage.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public JsonFypManagerStorage(Path filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    public Path getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    public Optional\u003cReadOnlyFypManager\u003e readFypManager() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        return readFypManager(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"     * Similar to {@link #readFypManager()}.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"    public Optional\u003cReadOnlyFypManager\u003e readFypManager(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"        Optional\u003cJsonSerializableFypManager\u003e jsonFypManager \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"                filePath, JsonSerializableFypManager.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"        if (!jsonFypManager.isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"            return Optional.of(jsonFypManager.get().toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"    public void saveFypManager(ReadOnlyFypManager fypManager) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"        saveFypManager(fypManager, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"     * Similar to {@link #saveFypManager(ReadOnlyFypManager)}.","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"    public void saveFypManager(ReadOnlyFypManager fypManager, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        requireNonNull(fypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFypManager(fypManager), filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":54,"RussellDash332":26}},{"path":"src/main/java/jeryl/fyp/storage/JsonSerializableFypManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":" * An Immutable FypManager that is serializable to JSON format.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"@JsonRootName(value \u003d \"fypmanager\")","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"class JsonSerializableFypManager {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"     * Constructs a {@code JsonSerializableFypManager} with the given students.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    public JsonSerializableFypManager(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"     * Converts a given {@code ReadOnlyFypManager} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFypManager}.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"    public JsonSerializableFypManager(ReadOnlyFypManager source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"     * Converts this FYP manager into the model\u0027s {@code FypManager} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"    public FypManager toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        FypManager fypManager \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"            if (fypManager.hasStudent(student)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"            fypManager.addStudent(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"        return fypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenelmj":8,"-":34,"RussellDash332":18}},{"path":"src/main/java/jeryl/fyp/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"public interface Storage extends FypManagerStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    Path getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    Optional\u003cReadOnlyFypManager\u003e readFypManager() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    void saveFypManager(ReadOnlyFypManager fypManager) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":23,"RussellDash332":9}},{"path":"src/main/java/jeryl/fyp/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":" * Manages storage of FypManager data in local storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    private FypManagerStorage fypManagerStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code StorageManager} with the given {@code FypManagerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public StorageManager(FypManagerStorage fypManagerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        this.fypManagerStorage \u003d fypManagerStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FypManager methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    public Path getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        return fypManagerStorage.getFypManagerFilePath();","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    public Optional\u003cReadOnlyFypManager\u003e readFypManager() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        return readFypManager(fypManagerStorage.getFypManagerFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"    public Optional\u003cReadOnlyFypManager\u003e readFypManager(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"        return fypManagerStorage.readFypManager(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"    public void saveFypManager(ReadOnlyFypManager fypManager) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        saveFypManager(fypManager, fypManagerStorage.getFypManagerFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"    public void saveFypManager(ReadOnlyFypManager fypManager, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"        fypManagerStorage.saveFypManager(fypManager, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":56,"RussellDash332":22}},{"path":"src/main/java/jeryl/fyp/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":" * Represents a storage for {@link jeryl.fyp.model.UserPrefs}.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"     * Saves the given {@link jeryl.fyp.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"RussellDash332":6}},{"path":"src/main/java/jeryl/fyp/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        } catch (CommandException | ParseException | RuntimeException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"         * @see jeryl.fyp.logic.Logic#execute(String)","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, RuntimeException;","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":78,"RussellDash332":7}},{"path":"src/main/java/jeryl/fyp/ui/CompletedStudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"public class CompletedStudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    private static final String FXML \u003d \"CompletedStudentListPanel.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CompletedStudentListPanel.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public CompletedStudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"                setText(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"            } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":49}},{"path":"src/main/java/jeryl/fyp/ui/CompletedStudentListTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":" * The UI component that is responsible for displaying the","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" * title of the completed student list panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"public class CompletedStudentListTitle extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"    private static final String FXML \u003d \"CompletedStudentListTitle.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    private Label completedTitleLabel;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code CompletedStudentListTitle}.","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    public CompletedStudentListTitle() {","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"        completedTitleLabel.setText(\"Completed\");","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":25}},{"path":"src/main/java/jeryl/fyp/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2223s1-cs2103-f09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":97,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"    private UncompletedStudentListPanel uncompletedStudentListPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    private UncompletedStudentListTitle uncompletedStudentListTitle;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"    private CompletedStudentListPanel completedStudentListPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    private CompletedStudentListTitle completedStudentListTitle;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"    private StackPane welcomeBoxPlaceholder;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"    private StackPane uncompletedStudentListPanelPlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"    private StackPane uncompletedStudentListTitlePlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    private StackPane completedStudentListPanelPlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"    private StackPane completedStudentListTitlePlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"        uncompletedStudentListPanel \u003d new UncompletedStudentListPanel(logic.getUncompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"RussellDash332"},"content":"        uncompletedStudentListPanelPlaceholder.getChildren().add(uncompletedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"RussellDash332"},"content":"        completedStudentListPanel \u003d new CompletedStudentListPanel(logic.getCompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"        completedStudentListPanelPlaceholder.getChildren().add(completedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"RussellDash332"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter();","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"RussellDash332"},"content":"        WelcomeBox welcomeBox \u003d new WelcomeBox();","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"RussellDash332"},"content":"        welcomeBoxPlaceholder.getChildren().add(welcomeBox.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"RussellDash332"},"content":"        UncompletedStudentListTitle uncompletedStudentListTitle \u003d new UncompletedStudentListTitle();","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"RussellDash332"},"content":"        uncompletedStudentListTitlePlaceholder.getChildren().add(uncompletedStudentListTitle.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"RussellDash332"},"content":"        CompletedStudentListTitle completedStudentListTitle \u003d new CompletedStudentListTitle();","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"RussellDash332"},"content":"        completedStudentListTitlePlaceholder.getChildren().add(completedStudentListTitle.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"RussellDash332"},"content":"    public UncompletedStudentListPanel getUncompletedStudentListPanel() {","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"RussellDash332"},"content":"        return uncompletedStudentListPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"RussellDash332"},"content":"    public CompletedStudentListPanel getCompletedStudentListPanel() {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"RussellDash332"},"content":"        return completedStudentListPanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"RussellDash332"},"content":"     * Outputs the sorted list of projects by project name","lastModifiedDate":"2022-10-28"},{"lineNumber":206,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"RussellDash332"},"content":"    private void handleSortByProjectName() {","lastModifiedDate":"2022-10-28"},{"lineNumber":208,"author":{"gitId":"JordanChua"},"content":"        uncompletedStudentListPanel \u003d new UncompletedStudentListPanel(logic","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"RussellDash332"},"content":"                .getSortedByProjectNameUncompletedStudentList());","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"JordanChua"},"content":"        uncompletedStudentListPanelPlaceholder.getChildren().add(uncompletedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"JordanChua"},"content":"        completedStudentListPanel \u003d new CompletedStudentListPanel(logic.getSortedCompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"JordanChua"},"content":"        completedStudentListPanelPlaceholder.getChildren().add(completedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"JordanChua"},"content":"     * Outputs the sorted list of projects by project status followed by alphabetical order","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"JordanChua"},"content":"    private void handleSortByProjectStatus() {","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"JordanChua"},"content":"        uncompletedStudentListPanel \u003d new UncompletedStudentListPanel(logic","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"JordanChua"},"content":"                .getSortedByProjectStatusUncompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"JordanChua"},"content":"        uncompletedStudentListPanelPlaceholder.getChildren().add(uncompletedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"JordanChua"},"content":"        completedStudentListPanel \u003d new CompletedStudentListPanel(logic.getSortedCompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"JordanChua"},"content":"        completedStudentListPanelPlaceholder.getChildren().add(completedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"JordanChua"},"content":"     * Reverts the UI back to the Filtered Student List","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"JordanChua"},"content":"    private void revertStudentListPanel() {","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"JordanChua"},"content":"        uncompletedStudentListPanel \u003d new UncompletedStudentListPanel(logic.getUncompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"JordanChua"},"content":"        uncompletedStudentListPanelPlaceholder.getChildren().add(uncompletedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"JordanChua"},"content":"        completedStudentListPanel \u003d new CompletedStudentListPanel(logic.getCompletedStudentList());","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"JordanChua"},"content":"        completedStudentListPanelPlaceholder.getChildren().add(completedStudentListPanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"RussellDash332"},"content":"     * @see jeryl.fyp.logic.Logic#execute(String)","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"RussellDash332"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException,","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"RussellDash332"},"content":"            RuntimeException {","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"RussellDash332"},"content":"            if (commandResult.isSortByProjectName()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"RussellDash332"},"content":"                handleSortByProjectName();","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"JordanChua"},"content":"            } else if (commandResult.isSortByProjectStatus()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"JordanChua"},"content":"                handleSortByProjectStatus();","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"JordanChua"},"content":"            } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"JordanChua"},"content":"                revertStudentListPanel();","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"JordanChua"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"RussellDash332"},"content":"        } catch (CommandException | ParseException | RuntimeException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JordanChua":39,"-":182,"RussellDash332":53}},{"path":"src/main/java/jeryl/fyp/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    private Label copyrightName;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code StatusBarFooter}.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    public StatusBarFooter() {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"        copyrightName.setText(\"JerylFypManager © 2022\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":20,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    private static final String FXML \u003d \"StudentCard.fxml\";","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    private static final int MAX_TAG_LINE_LENGTH \u003d 40;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on FypManager level 4\u003c/a\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"    public final Student student;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    private Label studentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    private Hyperlink email;","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"    private ImageView emailImage;","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"    private Label projectName;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"JordanChua"},"content":"    private Label projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"JordanChua"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"    private FlowPane deadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"    private Image emailThumbnail \u003d new Image(this.getClass().getResourceAsStream(\"/images/mail.png\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        name.setText(student.getStudentName().fullStudentName);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        studentId.setText(student.getStudentId().id);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        emailImage.setImage(emailThumbnail);","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        email.setOnAction(t -\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"            try {","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"                Desktop.getDesktop().browse(new URI(\"mailto:\" + student.getEmail().value));","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"                throw new RuntimeException(ioe);","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"            } catch (URISyntaxException urie) {","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"                throw new RuntimeException(urie);","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"        });","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"        projectName.setText(student.getProjectName().fullProjectName);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"JordanChua"},"content":"        projectStatus.setText(student.getProjectStatus().projectStatus);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"        String style \u003d \"-fx-text-fill: black; -fx-background-radius: 20; -fx-background-color: \";","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"        switch (student.getProjectStatus().projectStatus) {","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"        case \"DONE\":","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"            style +\u003d \"green\";","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"            break;","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"        case \"IP\":","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"            style +\u003d \"yellow\";","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"            break;","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"        default:","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"            style +\u003d \"red\";","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"            break;","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"RussellDash332"},"content":"        projectStatus.setStyle(style);","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"eugenelmj"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"                        Arrays.asList(tag.tagName.split(String.format(\"(?\u003c\u003d\\\\G.{%d})\", MAX_TAG_LINE_LENGTH)))","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"                                .stream().collect(Collectors.joining(\"...\\n\"))","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"                )));","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"        AtomicInteger index \u003d new AtomicInteger();","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"        if (student.getDeadlineList().asUnmodifiableObservableList().isEmpty()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"            deadlineList.getChildren().add(new Label(\"No deadline at the moment!\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"RussellDash332"},"content":"        } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"            student.getDeadlineList().asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"RussellDash332"},"content":"                    .forEach(ddl -\u003e deadlineList.getChildren().add(new Label(index.incrementAndGet() + \". \" + ddl)));","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"        deadlineList.getChildren().stream().forEach(child -\u003e child.setStyle(\"-fx-font-size: 12\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"eugenelmj"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"eugenelmj"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"eugenelmj"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eugenelmj":10,"JordanChua":4,"YH-15":7,"-":54,"RussellDash332":57}},{"path":"src/main/java/jeryl/fyp/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"RussellDash332":1}},{"path":"src/main/java/jeryl/fyp/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":83,"RussellDash332":5}},{"path":"src/main/java/jeryl/fyp/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"RussellDash332":2}},{"path":"src/main/java/jeryl/fyp/ui/UncompletedStudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"public class UncompletedStudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    private static final String FXML \u003d \"UncompletedStudentListPanel.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(UncompletedStudentListPanel.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public UncompletedStudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eugenelmj":12,"-":31,"RussellDash332":6}},{"path":"src/main/java/jeryl/fyp/ui/UncompletedStudentListTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":" * The UI component that is responsible for displaying the","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" * title of the uncompleted student list panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"public class UncompletedStudentListTitle extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"    private static final String FXML \u003d \"UncompletedStudentListTitle.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    private Label uncompletedTitleLabel;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code UncompletedStudentListTitle}.","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    public UncompletedStudentListTitle() {","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"        uncompletedTitleLabel.setText(\"Not Completed\");","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":25}},{"path":"src/main/java/jeryl/fyp/ui/WelcomeBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":" * The UI component that is responsible for displaying a welcome message.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"public class WelcomeBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    private static final String FXML \u003d \"WelcomeBox.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    private Label welcomeLabel;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"     * Creates a {@code WelcomeBox}.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    public WelcomeBox() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM YYYY\");","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"        LocalDateTime today \u003d LocalDateTime.now();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        welcomeLabel.setText(\"Welcome back! \" + dateTimeFormatter.format(today));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":29}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"\u003cStackPane style\u003d\"-fx-background-radius: 10; -fx-border-radius: 10;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"RussellDash332":1}},{"path":"src/main/resources/view/CompletedStudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"      \u003c/padding\u003e\u003c/ListView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":15}},{"path":"src/main/resources/view/CompletedStudentListTitle.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"\u003cStackPane style\u003d\"-fx-background-color: #d9d9d9;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"  \u003cLabel fx:id\u003d\"completedTitleLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"         \u003cFont name\u003d\"Inter Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":12}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"    background-color: #d9d9d9; /* Used in the default.html file */","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"    -fx-text-fill: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    -fx-table-cell-border-color: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    -fx-table-header-border-color: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"    -fx-padding: 10;","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"    -fx-label-padding: 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":".list-cell:filled {","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #4f4545;","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"RussellDash332"},"content":".cell_medium_label {","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"RussellDash332"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-22"},{"lineNumber":136,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-10-22"},{"lineNumber":137,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":138,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"     -fx-background-color: #d9d9d9;","lastModifiedDate":"2022-10-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"RussellDash332"},"content":"     -fx-background-color: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #967d7d;","lastModifiedDate":"2022-10-22"},{"lineNumber":153,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2022-10-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #271f1f;","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #928787;","lastModifiedDate":"2022-10-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #c8c3c3;","lastModifiedDate":"2022-10-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"RussellDash332"},"content":"    -fx-border-color: #d9d9d9 #d9d9d9 #d9d9d9 #d9d9d9;","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"RussellDash332"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"RussellDash332"},"content":"    -fx-font-family: \"Inter\";","lastModifiedDate":"2022-10-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"RussellDash332"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"eugenelmj"},"content":"#filterField, #studentListPanel, #studentWebpage {","lastModifiedDate":"2022-10-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"RussellDash332"},"content":"    -fx-background-color: #967d7d;","lastModifiedDate":"2022-10-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"eugenelmj":1,"-":312,"RussellDash332":40}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"    -fx-background: transparent;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"RussellDash332":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"JerylFypManager\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        \u003cStackPane fx:id\u003d\"welcomeBoxPlaceholder\" style\u003d\"-fx-background-color: #d9d9d9;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"        \u003cVBox fx:id\u003d\"studentList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-background-color: #271F1F;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"            \u003cInsets bottom\u003d\"20\" left\u003d\"10\" right\u003d\"10\" top\u003d\"20\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"               \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"                     \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                           \u003cStackPane fx:id\u003d\"uncompletedStudentListTitlePlaceholder\" style\u003d\"-fx-background-color: #d9d9d9;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"                                 \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/StackPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"                      \u003cStackPane fx:id\u003d\"uncompletedStudentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"                     \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"                           \u003cStackPane fx:id\u003d\"completedStudentListTitlePlaceholder\" style\u003d\"-fx-background-color: #d9d9d9;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"                                 \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/StackPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"                          \u003cStackPane fx:id\u003d\"completedStudentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" minHeight\u003d\"150.0\" prefHeight\u003d\"150.0\" style\u003d\"-fx-background-color: #271F1F;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #271F1F;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":48,"RussellDash332":46}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" promptText\u003d\"Description will appear here...\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"RussellDash332":2}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"  \u003cLabel fx:id\u003d\"copyrightName\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":11,"RussellDash332":1}},{"path":"src/main/resources/view/StudentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"\u003cVBox maxHeight\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"      \u003cRegion maxHeight\u003d\"5.0\" minHeight\u003d\"5.0\" prefHeight\u003d\"5.0\" style\u003d\"-fx-background-color: #d9d9d9;\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"      \u003cHBox fx:id\u003d\"cardPane\" maxHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"         \u003cHBox maxHeight\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"               \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"              \u003cGridPane maxHeight\u003d\"-Infinity\" style\u003d\"-fx-background-radius: 10; -fx-border-radius: 10;\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"                     \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"180.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"180.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"                     \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"180.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"180.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"                     \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"180.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"180.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"                  \u003crowConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"                     \u003cRowConstraints maxHeight\u003d\"-Infinity\" percentHeight\u003d\"95.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"                  \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"                   \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"105\" GridPane.columnSpan\u003d\"2\" GridPane.hgrow\u003d\"NEVER\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"                       \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"                     \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"                       \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"                         \u003cminWidth\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"                           \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"                           \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"                         \u003c/minWidth\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"                       \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"                       \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                              \u003cfont\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"                                 \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"                              \u003c/font\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"                              \u003cInsets right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"                     \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"                        \u003cLabel fx:id\u003d\"projectStatus\" style\u003d\"-fx-background-radius: 20\" text\u003d\"\\$projectStatus\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"                           \u003cfont\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"                              \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/font\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"                              \u003cInsets bottom\u003d\"4.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"                        \u003cRegion prefHeight\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"                     \u003cLabel fx:id\u003d\"projectName\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$projectName\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"                           \u003cfont\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"                              \u003cFont name\u003d\"System Italic\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/font\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"                        \u003cRegion prefHeight\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"                        \u003cHyperlink fx:id\u003d\"email\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"                           \u003cgraphic\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"                              \u003cImageView fx:id\u003d\"emailImage\" fitHeight\u003d\"27.0\" fitWidth\u003d\"27.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/graphic\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/Hyperlink\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"                        \u003cRegion prefHeight\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"                     \u003cFlowPane fx:id\u003d\"tags\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"                   \u003c/VBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"                     \u003cVBox maxHeight\u003d\"-Infinity\" GridPane.columnIndex\u003d\"2\" GridPane.valignment\u003d\"TOP\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"                           \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"                           \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"18.0\" prefWidth\u003d\"156.0\" spacing\u003d\"5\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"                                 \u003cLabel alignment\u003d\"TOP_LEFT\" styleClass\u003d\"cell_big_label\" text\u003d\"Deadlines\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"                                    \u003cfont\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"                                       \u003cFont size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"                                    \u003c/font\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"                                       \u003cInsets top\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"                                 \u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"RussellDash332"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"                           \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"                            \u003cFlowPane fx:id\u003d\"deadlineList\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"              \u003c/GridPane\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"RussellDash332"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"RussellDash332"},"content":"      \u003cRegion maxHeight\u003d\"5.0\" minHeight\u003d\"5.0\" prefHeight\u003d\"5.0\" style\u003d\"-fx-background-color: #d9d9d9;\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"RussellDash332"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"RussellDash332":112}},{"path":"src/main/resources/view/UncompletedStudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"      \u003c/padding\u003e\u003c/ListView\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"RussellDash332":9}},{"path":"src/main/resources/view/UncompletedStudentListTitle.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"\u003cStackPane style\u003d\"-fx-background-color: #d9d9d9;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"  \u003cLabel fx:id\u003d\"uncompletedTitleLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"         \u003cFont name\u003d\"Inter Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"RussellDash332":12}},{"path":"src/main/resources/view/WelcomeBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"\u003cStackPane alignment\u003d\"CENTER_LEFT\" style\u003d\"-fx-background-color: #d9d9d9;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"  \u003cLabel fx:id\u003d\"welcomeLabel\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"      \u003cfont\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"         \u003cFont name\u003d\"Inter Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":12}},{"path":"src/test/java/jeryl/fyp/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.core.index;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eugenelmj":7,"-":51,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":34,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"RussellDash332":3}},{"path":"src/test/java/jeryl/fyp/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"RussellDash332":4}},{"path":"src/test/java/jeryl/fyp/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.testutil.TestUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"RussellDash332":3}},{"path":"src/test/java/jeryl/fyp/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"    public void containsPartialWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"                \"typical sentence\", null));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"    public void containsPartialWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"            -\u003e StringUtil.containsPartialWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"    public void containsPartialWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"                null, \"abc\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"        // Sentence word bigger than query word","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"YH-15":21,"-":119,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_STUDENT_NOT_FOUND;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PROJECT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.JsonFypManagerStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.storage.StorageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        JsonFypManagerStorage fypManagerStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"                new JsonFypManagerStorage(temporaryFolder.resolve(\"fypManager.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        StorageManager storage \u003d new StorageManager(fypManagerStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"        String deleteCommand \u003d \"delete -s i/A9999999Z\";","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"PokezardVGC"},"content":"        assertCommandException(deleteCommand, MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        // Setup LogicManager with JsonFypManagerIoExceptionThrowingStub","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"        JsonFypManagerStorage fypManagerStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"                new JsonFypManagerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFypManager.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        StorageManager storage \u003d new StorageManager(fypManagerStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"        String addCommand \u003d AddStudentCommand.COMMAND_WORD + STUDENT_NAME_DESC_AMY + STUDENT_ID_DESC_AMY","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"                + PROJECT_NAME_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"RussellDash332"},"content":"        Model expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"RussellDash332"},"content":"    private static class JsonFypManagerIoExceptionThrowingStub extends JsonFypManagerStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"RussellDash332"},"content":"        private JsonFypManagerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"RussellDash332"},"content":"        public void saveFypManager(ReadOnlyFypManager fypManager, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eugenelmj":7,"PokezardVGC":2,"YH-15":2,"-":119,"RussellDash332":32}},{"path":"src/test/java/jeryl/fyp/logic/commands/AddDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineListTemplate;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"    public void constructor_nullDeadline_throwsNullPointerException() {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddDeadlineCommand(null, null));","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        AddDeadlineCommandTest.DeadlineListStubAcceptingDeadlineAdded deadlineListStub \u003d new AddDeadlineCommandTest","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"                .DeadlineListStubAcceptingDeadlineAdded();","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"        Deadline validDeadline \u003d SampleDataUtil.getDeadline(\"Valid name\", \"01-01-1970 00:00\");","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"        model.addStudent(validStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        deadlineListStub.add(validDeadline);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"        CommandResult commandResult \u003d new AddDeadlineCommand(validDeadline, validStudent.getStudentId())","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"                .execute(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        assertEquals(String.format(AddDeadlineCommand.MESSAGE_SUCCESS, validDeadline),","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"        assertEquals(Arrays.asList(validDeadline), deadlineListStub.deadlinesAdded);","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"    public void execute_duplicateDeadline_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"        Deadline validDeadline \u003d SampleDataUtil.getDeadline(\"Valid name\", \"01-01-1970 00:00\");","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"YH-15"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"        model.addStudent(validStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(validDeadline, validStudent.getStudentId());","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"        CommandResult commandResult \u003d addDeadlineCommand.execute(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"        assertThrows(CommandException.class, AddDeadlineCommand.MESSAGE_DUPLICATE_DEADLINE, () -\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"                addDeadlineCommand.execute(model));","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"YH-15"},"content":"        Student alice \u003d new StudentBuilder().withStudentId(\"A1111111U\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"YH-15"},"content":"        Student bob \u003d new StudentBuilder().withStudentId(\"A1111112U\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"        Deadline aliceDeadline \u003d SampleDataUtil.getDeadline(\"Task 1\", \"01-01-1970 00:00\");","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        Deadline bobDeadline \u003d SampleDataUtil.getDeadline(\"Task 2\", \"01-01-1970 00:00\");","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"YH-15"},"content":"        AddDeadlineCommand addAliceTaskCommand \u003d new AddDeadlineCommand(aliceDeadline, alice.getStudentId());","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        AddDeadlineCommand addBobTaskCommand \u003d new AddDeadlineCommand(bobDeadline, bob.getStudentId());","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"YH-15"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"        assertTrue(addAliceTaskCommand.equals(addAliceTaskCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"YH-15"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"        AddDeadlineCommand addAliceTaskCommandCopy \u003d new AddDeadlineCommand(aliceDeadline, alice.getStudentId());","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"YH-15"},"content":"        assertTrue(addAliceTaskCommand.equals(addAliceTaskCommandCopy));","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"        assertFalse(addAliceTaskCommand.equals(1));","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"        assertFalse(addAliceTaskCommand.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"        assertFalse(addAliceTaskCommand.equals(addBobTaskCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"     * A default DeadlineList stub that have all of the methods failing.","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"YH-15"},"content":"    private class DeadlineListStub implements DeadlineListTemplate {","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"        public boolean contains(Deadline toCheck) {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"YH-15"},"content":"        public void add(Deadline toAdd) {","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"YH-15"},"content":"        public void setDeadline(Deadline target, Deadline editedDeadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"YH-15"},"content":"        public void remove(Deadline toRemove) {","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"YH-15"},"content":"        public void setDeadlines(DeadlineList replacement) {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"        public void setDeadlines(List\u003cDeadline\u003e deadlines) {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"        public ObservableList\u003cDeadline\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"YH-15"},"content":"        public Deadline getDeadlineByName(String taskName) {","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"YH-15"},"content":"        public Index getIndexByName(String taskName) {","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"        public Deadline getDeadlineByRank(Integer rank) {","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"YH-15"},"content":"        public Iterator\u003cDeadline\u003e iterator() {","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"RussellDash332"},"content":"        public int size() {","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"RussellDash332"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"     * A DeadlineList stub that always accept the Deadline being added.","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"    private class DeadlineListStubAcceptingDeadlineAdded extends DeadlineListStub {","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"        final ArrayList\u003cDeadline\u003e deadlinesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"YH-15"},"content":"        public boolean contains(Deadline deadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"YH-15"},"content":"            requireNonNull(deadline);","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"YH-15"},"content":"            return deadlinesAdded.stream().anyMatch(deadline::isSameDeadlineName);","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"YH-15"},"content":"        public void add(Deadline deadline) {","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"YH-15"},"content":"            requireNonNull(deadline);","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"YH-15"},"content":"            deadlinesAdded.add(deadline);","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"YH-15":164,"RussellDash332":9}},{"path":"src/test/java/jeryl/fyp/logic/commands/AddStudentCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"public class AddStudentCommandIntegrationTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        Model expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        assertCommandSuccess(new AddStudentCommand(validStudent), model,","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"                String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        Student studentInList \u003d model.getFypManager().getStudentList().get(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"YH-15"},"content":"        assertCommandFailure(new AddStudentCommand(studentInList), model, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"eugenelmj":6,"YH-15":4,"-":25,"RussellDash332":10}},{"path":"src/test/java/jeryl/fyp/logic/commands/AddStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.Deadline;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"SweetPotato0213"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"public class AddStudentCommandTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStudentCommand(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"        CommandResult commandResult \u003d new AddStudentCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        assertEquals(String.format(AddStudentCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"        AddStudentCommand addStudentCommand \u003d new AddStudentCommand(validStudent);","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"        assertThrows(CommandException.class, AddStudentCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"YH-15"},"content":"                addStudentCommand.execute(modelStub));","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"        Student alice \u003d new StudentBuilder().withStudentName(\"Alice\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"        Student bob \u003d new StudentBuilder().withStudentName(\"Bob\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"        AddStudentCommand addAliceCommand \u003d new AddStudentCommand(alice);","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"YH-15"},"content":"        AddStudentCommand addBobCommand \u003d new AddStudentCommand(bob);","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"YH-15"},"content":"        AddStudentCommand addAliceCommandCopy \u003d new AddStudentCommand(alice);","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"        public Path getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"RussellDash332"},"content":"        public void setFypManagerFilePath(Path fypManagerFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"eugenelmj"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"RussellDash332"},"content":"        public void setFypManager(ReadOnlyFypManager newData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"        public ReadOnlyFypManager getFypManager() {","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"eugenelmj"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"eugenelmj"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"eugenelmj"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"YH-15"},"content":"        public boolean hasDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"YH-15"},"content":"        public void deleteDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"YH-15"},"content":"        public void addDeadline(Student student, Deadline deadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"YH-15"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"YH-15"},"content":"        public void setDeadline(Student student, Deadline target, Deadline editedDeadline) {","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"YH-15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"YH-15"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"eugenelmj"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"RussellDash332"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"RussellDash332"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"eugenelmj"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"SweetPotato0213"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"SweetPotato0213"},"content":"        public DeadlineList listDeadlineUnderStudent(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"SweetPotato0213"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"SweetPotato0213"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"SweetPotato0213"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"JordanChua"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"JordanChua"},"content":"        public Student getStudentByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"JordanChua"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"PokezardVGC"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"PokezardVGC"},"content":"        public Index getIndexByStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"PokezardVGC"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"PokezardVGC"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"JordanChua"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"JordanChua"},"content":"        public SortedList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"JordanChua"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"JordanChua"},"content":"        @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"RussellDash332"},"content":"        public SortedList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"JordanChua"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"JordanChua"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"JordanChua"},"content":"        public SortedList\u003cStudent\u003e getSortedCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"JordanChua"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"JordanChua"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"eugenelmj"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"eugenelmj"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"eugenelmj"},"content":"        private final Student student;","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"eugenelmj"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"eugenelmj"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"eugenelmj"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"eugenelmj"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"eugenelmj"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"RussellDash332"},"content":"            return this.student.isSameStudentId(student);","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"eugenelmj"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"eugenelmj"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"eugenelmj"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"eugenelmj"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"eugenelmj"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"RussellDash332"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudentId);","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"eugenelmj"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"eugenelmj"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"eugenelmj"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"RussellDash332"},"content":"        public ReadOnlyFypManager getFypManager() {","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"RussellDash332"},"content":"            return new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"SweetPotato0213":6,"eugenelmj":33,"JordanChua":21,"PokezardVGC":6,"YH-15":32,"-":134,"RussellDash332":29}},{"path":"src/test/java/jeryl/fyp/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    public void execute_emptyFypManager_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    public void execute_nonEmptyFypManager_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.setFypManager(new FypManager());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":20,"RussellDash332":12}},{"path":"src/test/java/jeryl/fyp/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false)));","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false)));","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"JordanChua"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"JordanChua"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, false).hashCode());","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"JordanChua":5,"-":48,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_STUDENT_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_STUDENT_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_STUDENT_ID_AMY \u003d \"A1111111M\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_STUDENT_ID_BOB \u003d \"A2222222O\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_PROJECT_NAME_AMY \u003d \"random CS proj 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_PROJECT_NAME_BOB \u003d \"random CS proj 2\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_PROJECT_STATUS_AMY \u003d \"IP\";","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"    public static final String VALID_PROJECT_STATUS_BOB \u003d \"DONE\";","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"    public static final String STUDENT_NAME_DESC_AMY \u003d \" \" + PREFIX_STUDENT_NAME + VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    public static final String STUDENT_NAME_DESC_BOB \u003d \" \" + PREFIX_STUDENT_NAME + VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"    public static final String STUDENT_ID_DESC_AMY \u003d \" \" + PREFIX_STUDENT_ID + VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    public static final String STUDENT_ID_DESC_BOB \u003d \" \" + PREFIX_STUDENT_ID + VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"    public static final String PROJECT_NAME_DESC_AMY \u003d \" \" + PREFIX_PROJECT_NAME + VALID_PROJECT_NAME_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"    public static final String PROJECT_NAME_DESC_BOB \u003d \" \" + PREFIX_PROJECT_NAME + VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    public static final String PROJECT_STATUS_DESC_AMY \u003d \" \" + PREFIX_PROJECT_STATUS + VALID_PROJECT_STATUS_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"    public static final String PROJECT_STATUS_DESC_BOB \u003d \" \" + PREFIX_PROJECT_STATUS + VALID_PROJECT_STATUS_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    public static final String INVALID_STUDENT_NAME_DESC \u003d \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"            + PREFIX_STUDENT_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    public static final String INVALID_STUDENT_ID_DESC \u003d \" \" + PREFIX_STUDENT_ID + \"a\"; // \u0027a\u0027 invalidates student ID","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"    // empty str not allowed for projects","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"    public static final String INVALID_PROJECT_NAME_DESC \u003d \" \" + PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"    public static final String INVALID_PROJECT_STATUS_DESC \u003d \" \" + PREFIX_PROJECT_STATUS + \"!?\";","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"                .withStudentId(VALID_STUDENT_ID_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"                .withTags(VALID_TAG_FRIEND).withProjectName(VALID_PROJECT_NAME_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"                .withProjectStatus(VALID_PROJECT_STATUS_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"                .withStudentId(VALID_STUDENT_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"                .withProjectName(VALID_PROJECT_NAME_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"                .withProjectStatus(VALID_PROJECT_STATUS_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"RussellDash332"},"content":"     * - the FYP manager, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"RussellDash332"},"content":"        FypManager expectedFypManager \u003d new FypManager(actualModel.getFypManager());","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"eugenelmj"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedFypManager, actualModel.getFypManager());","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"eugenelmj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"RussellDash332"},"content":"     * {@code model}\u0027s FYP manager.","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"eugenelmj"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size()","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"RussellDash332"},"content":"                \u0026\u0026 targetIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"eugenelmj"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"RussellDash332"},"content":"        final String[] splitName \u003d student.getStudentName().fullStudentName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"RussellDash332"},"content":"        model.updateFilteredStudentList(new StudentNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eugenelmj":10,"YH-15":1,"-":79,"RussellDash332":51}},{"path":"src/test/java/jeryl/fyp/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"    public void execute_validStudentIdUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"PokezardVGC"},"content":"        StudentId validStudentId \u003d studentToDelete.getStudentId();","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(validStudentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"    public void execute_nonexistentStudentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        StudentId nonexistentStudentId \u003d new StudentId(VALID_STUDENT_ID_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(nonexistentStudentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"PokezardVGC"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"PokezardVGC"},"content":"    public void execute_validStudentIdFilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"PokezardVGC"},"content":"        StudentId validStudentId \u003d studentToDelete.getStudentId();","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(validStudentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"    public void execute_nonexistentStudentIdFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        StudentId nonexistentStudentId \u003d new StudentId(VALID_STUDENT_ID_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(nonexistentStudentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"PokezardVGC"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"        assertCommandFailure(deleteStudentCommand, model, Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(new StudentId(VALID_STUDENT_ID_AMY));","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(new StudentId(VALID_STUDENT_ID_BOB));","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(new StudentId(VALID_STUDENT_ID_AMY));","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"eugenelmj"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"eugenelmj"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eugenelmj":13,"PokezardVGC":19,"YH-15":12,"-":61,"RussellDash332":12}},{"path":"src/test/java/jeryl/fyp/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"PokezardVGC"},"content":"    private StudentId bobId \u003d new StudentId(VALID_STUDENT_ID_BOB);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"PokezardVGC"},"content":"    private StudentId amyId \u003d new StudentId(VALID_STUDENT_ID_AMY);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"PokezardVGC"},"content":"    @Test","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"PokezardVGC"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        Student editedStudent \u003d new StudentBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"                .withStudentId(model.getFilteredStudentList().get(0).getStudentId().toString()).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"        StudentId validStudentId \u003d editedStudent.getStudentId();","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(validStudentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased()),","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"                editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit)","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"PokezardVGC"},"content":"        StudentId validStudentId \u003d studentToEdit.getStudentId();","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(validStudentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"PokezardVGC"},"content":"        StudentId validStudentId \u003d studentToEdit.getStudentId();","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"PokezardVGC"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(validStudentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"PokezardVGC"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, studentToEdit);","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased()),","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"                studentToEdit);","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"        Student editedStudent \u003d new StudentBuilder(studentToEdit)","lastModifiedDate":"2022-10-28"},{"lineNumber":97,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":98,"author":{"gitId":"PokezardVGC"},"content":"        StudentId validStudentId \u003d studentToEdit.getStudentId();","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(validStudentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"PokezardVGC"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"eugenelmj"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"PokezardVGC"},"content":"        Student studentToEdit \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"PokezardVGC"},"content":"        StudentId validStudentId \u003d model.getFilteredStudentList()","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"PokezardVGC"},"content":"                .get(INDEX_SECOND_STUDENT.getZeroBased()).getStudentId();","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"PokezardVGC"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptorBuilder(studentToEdit).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(validStudentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"eugenelmj"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"eugenelmj"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"RussellDash332"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"RussellDash332"},"content":"        Student studentToEdit \u003d model.getFypManager().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"RussellDash332"},"content":"        StudentId validStudentId \u003d model.getFypManager().getStudentList()","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"RussellDash332"},"content":"                .get(INDEX_FIRST_STUDENT.getZeroBased()).getStudentId();","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptorBuilder(studentToEdit).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"        EditCommand editCommand \u003d new EditCommand(validStudentId, editStudentDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"eugenelmj"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"eugenelmj"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"PokezardVGC"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"RussellDash332"},"content":"     * but smaller than size of FYP manager","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"eugenelmj"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand editCommand \u003d new EditCommand(amyId,","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"RussellDash332"},"content":"                new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_BOB).build());","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"PokezardVGC"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"PokezardVGC"},"content":"        final EditCommand standardCommand \u003d new EditCommand(bobId, DESC_AMY);","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"eugenelmj"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(bobId, copyDescriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"PokezardVGC"},"content":"        // same studentId -\u003e returns True","lastModifiedDate":"2022-10-28"},{"lineNumber":176,"author":{"gitId":"PokezardVGC"},"content":"        assertTrue(standardCommand.equals(new EditCommand(bobId, DESC_AMY)));","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"PokezardVGC"},"content":"        assertFalse(standardCommand.equals(new EditCommand(bobId, DESC_BOB)));","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"eugenelmj":16,"PokezardVGC":40,"-":82,"RussellDash332":44}},{"path":"src/test/java/jeryl/fyp/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        // different project name -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withProjectName(VALID_PROJECT_NAME_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"eugenelmj":6,"-":34,"RussellDash332":14}},{"path":"src/test/java/jeryl/fyp/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true,","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"                false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"JordanChua":2,"-":14,"RussellDash332":5}},{"path":"src/test/java/jeryl/fyp/logic/commands/FindProjectNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" * Contains integration tests (interaction with the Model) for {@code FindProjectNameCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"public class FindProjectNameCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"                new ProjectNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"        ProjectNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"                new ProjectNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand findFirstCommand \u003d new FindProjectNameCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand findSecondCommand \u003d new FindProjectNameCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand findFirstCommandCopy \u003d new FindProjectNameCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"abc\");","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand command \u003d new FindProjectNameCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"de/ woRld/ de \");","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand command \u003d new FindProjectNameCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"     * Parses {@code userInput} into a {@code ProjectNameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"YH-15"},"content":"    private ProjectNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"        return new ProjectNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"/\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eugenelmj":17,"YH-15":6,"-":45,"RussellDash332":14}},{"path":"src/test/java/jeryl/fyp/logic/commands/FindStudentIdCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" * Contains integration tests (interaction with the Model) for {@code FindStudentIdCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentIdCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        StudentIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        StudentIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"        FindStudentIdCommand findFirstCommand \u003d new FindStudentIdCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"        FindStudentIdCommand findSecondCommand \u003d new FindStudentIdCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        FindStudentIdCommand findFirstCommandCopy \u003d new FindStudentIdCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"eugenelmj"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\"abc\");","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        FindStudentIdCommand command \u003d new FindStudentIdCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\"2427  / 563\");","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"        FindStudentIdCommand command \u003d new FindStudentIdCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"     * Parses {@code userInput} into a {@code StudentIdContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"    private StudentIdContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"        return new StudentIdContainsKeywordsPredicate(Arrays.asList(userInput.split(\"/\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":82}},{"path":"src/test/java/jeryl/fyp/logic/commands/FindStudentNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" * Contains integration tests (interaction with the Model) for {@code FindStudentNameCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentNameCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        StudentNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"                new StudentNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        StudentNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"                new StudentNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"        FindStudentNameCommand findFirstCommand \u003d new FindStudentNameCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"        FindStudentNameCommand findSecondCommand \u003d new FindStudentNameCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        FindStudentNameCommand findFirstCommandCopy \u003d new FindStudentNameCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"eugenelmj"},"content":"        StudentNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"abc\");","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        FindStudentNameCommand command \u003d new FindStudentNameCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"        StudentNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"ku  / kurz / IoN \");","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"        FindStudentNameCommand command \u003d new FindStudentNameCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Arrays.asList(CARL, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"     * Parses {@code userInput} into a {@code StudentNameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"    private StudentNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"        return new StudentNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"/\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":82}},{"path":"src/test/java/jeryl/fyp/logic/commands/FindTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_PROJECTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.TagsContainKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTagsCommand}.","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"public class FindTagsCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"    public void equals() {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"        TagsContainKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"                new TagsContainKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"        TagsContainKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"                new TagsContainKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand findFirstCommand \u003d new FindTagsCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand findSecondCommand \u003d new FindTagsCommand(secondPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand findFirstCommandCopy \u003d new FindTagsCommand(firstPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        TagsContainKeywordsPredicate predicate \u003d preparePredicate(\"abc\");","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PROJECTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"        TagsContainKeywordsPredicate predicate \u003d preparePredicate(\"smo / wES\");","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredStudentList());","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"eugenelmj"},"content":"     * Parses {@code userInput} into a {@code TagsContainKeywordsPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"    private TagsContainKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"        return new TagsContainKeywordsPredicate(Arrays.asList(userInput.split(\"/\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":81}},{"path":"src/test/java/jeryl/fyp/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"JordanChua":1,"-":14,"RussellDash332":5}},{"path":"src/test/java/jeryl/fyp/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"        expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eugenelmj":3,"-":28,"RussellDash332":8}},{"path":"src/test/java/jeryl/fyp/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_STATUS_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_STATUS_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":" * {@code RemarkCommand}.","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"public class MarkCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"    private Model model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    public void execute_validStudentId_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"        StudentId validStudentId \u003d studentToDelete.getStudentId();","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(validStudentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"    public void execute_nonexistentStudentId_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        StudentId nonexistentStudentId \u003d new StudentId(VALID_STUDENT_ID_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand deleteCommand \u003d new DeleteStudentCommand(nonexistentStudentId);","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(new StudentId(VALID_STUDENT_ID_AMY),","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"                new ProjectStatus(VALID_PROJECT_STATUS_AMY));","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(new StudentId(VALID_STUDENT_ID_BOB),","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"                new ProjectStatus(VALID_PROJECT_STATUS_BOB));","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"JordanChua"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(new StudentId(VALID_STUDENT_ID_AMY),","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"                new ProjectStatus(VALID_PROJECT_STATUS_AMY));","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"JordanChua"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"JordanChua"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(markFirstCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"        // different studentId -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"JordanChua"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(markFirstCommand.equals(new MarkCommand(new StudentId(VALID_STUDENT_ID_AMY),","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"                new ProjectStatus(VALID_PROJECT_STATUS_BOB))));","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"JordanChua":33,"YH-15":3,"RussellDash332":50}},{"path":"src/test/java/jeryl/fyp/logic/commands/SortProjectNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.SortProjectNameCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortProjectNameCommand.","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"public class SortProjectNameCommandTest {","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"    private Model model;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"        model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"        expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    public void execute_sortProjectName_success() {","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS, false, false,","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"                true, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        assertCommandSuccess(new SortProjectNameCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"    public void execute_sortedListIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        assertCommandSuccess(new SortProjectNameCommand(), model,","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"                SortProjectNameCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"JordanChua":32,"RussellDash332":7}},{"path":"src/test/java/jeryl/fyp/logic/commands/SortProjectStatusCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"package jeryl.fyp.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.logic.commands.SortProjectStatusCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortProjectStatusCommand.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"public class SortProjectStatusCommandTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"    private Model model;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"        model \u003d new ModelManager(getTypicalFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"        expectedModel \u003d new ModelManager(model.getFypManager(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"    public void execute_sortProjectStatus_success() {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS, false, false,","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"                false, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"        assertCommandSuccess(new SortProjectStatusCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"JordanChua"},"content":"    public void execute_sortedListIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"JordanChua"},"content":"        assertCommandSuccess(new SortProjectStatusCommand(), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"JordanChua"},"content":"                SortProjectStatusCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"JordanChua":40}},{"path":"src/test/java/jeryl/fyp/logic/parser/AddStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_PROJECT_NAME_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_STUDENT_NAME_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PROJECT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PROJECT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_ID_DESC_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"public class AddStudentCommandParserTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"    private AddStudentCommandParser parser \u003d new AddStudentCommandParser();","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"YH-15"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        // multiple student IDs - last student ID accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_AMY + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"YH-15"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        // multiple project names - last project name accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + PROJECT_NAME_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"YH-15"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB + PROJECT_NAME_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"YH-15"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddStudentCommand(expectedStudentMultipleTags));","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + STUDENT_ID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"                + PROJECT_NAME_DESC_AMY, new AddStudentCommand(expectedStudent));","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_NAME_BOB + STUDENT_ID_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"                + EMAIL_DESC_BOB + PROJECT_NAME_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"        // missing student ID prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + VALID_STUDENT_ID_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"                + EMAIL_DESC_BOB + PROJECT_NAME_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"                + VALID_EMAIL_BOB + PROJECT_NAME_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"        // missing project name prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"                + EMAIL_DESC_BOB + VALID_PROJECT_NAME_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_NAME_BOB + VALID_STUDENT_ID_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"                + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"        // invalid student name","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, INVALID_STUDENT_NAME_DESC + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"RussellDash332"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"RussellDash332"},"content":"        // invalid student ID","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + INVALID_STUDENT_ID_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"RussellDash332"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"RussellDash332"},"content":"                + PROJECT_NAME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"RussellDash332"},"content":"        // invalid project name","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"RussellDash332"},"content":"                + INVALID_PROJECT_NAME_DESC + INVALID_TAG_DESC + VALID_TAG_FRIEND, ProjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"                + PROJECT_NAME_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, INVALID_STUDENT_NAME_DESC + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"                        + PROJECT_NAME_DESC_BOB, StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + STUDENT_NAME_DESC_BOB + STUDENT_ID_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"RussellDash332"},"content":"                        + PROJECT_NAME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"YH-15"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"eugenelmj":8,"YH-15":12,"-":50,"RussellDash332":71}},{"path":"src/test/java/jeryl/fyp/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"            throw new IllegalArgumentException(\"Invalid userInput, cannot parse.\", pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":35,"RussellDash332":4}},{"path":"src/test/java/jeryl/fyp/logic/parser/DeleteStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"PokezardVGC"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"PokezardVGC"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":" * outside the DeleteCommand code.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"public class DeleteStudentCommandParserTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    private DeleteStudentCommandParser parser \u003d new DeleteStudentCommandParser();","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_AMY, new DeleteStudentCommand(new StudentId(VALID_STUDENT_ID_AMY)));","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"                DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"PokezardVGC":3,"YH-15":6,"-":20,"RussellDash332":5}},{"path":"src/test/java/jeryl/fyp/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_PROJECT_NAME_DESC;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_STUDENT_NAME_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PROJECT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"PokezardVGC"},"content":"    private static final StudentId amyId \u003d new StudentId(VALID_STUDENT_ID_AMY);","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, \"-5\" + STUDENT_NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, \"0\" + STUDENT_NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        // invalid student ID","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, INVALID_STUDENT_ID_DESC + STUDENT_NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + INVALID_STUDENT_NAME_DESC,","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"                StudentName.MESSAGE_CONSTRAINTS); // invalid student name","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + INVALID_EMAIL_DESC,","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"PokezardVGC"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + INVALID_PROJECT_NAME_DESC,","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"                ProjectName.MESSAGE_CONSTRAINTS); // invalid project name","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-28"},{"lineNumber":84,"author":{"gitId":"PokezardVGC"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"        // invalid student name followed by valid email","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + INVALID_STUDENT_NAME_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"                StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"        // valid student name followed by invalid student name.","lastModifiedDate":"2022-10-28"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"        // The test case for invalid student name followed by valid student name","lastModifiedDate":"2022-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + STUDENT_NAME_DESC_AMY + INVALID_STUDENT_NAME_DESC,","lastModifiedDate":"2022-10-28"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"                StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"eugenelmj"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"PokezardVGC"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-28"},{"lineNumber":101,"author":{"gitId":"PokezardVGC"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-28"},{"lineNumber":103,"author":{"gitId":"PokezardVGC"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"PokezardVGC"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + INVALID_STUDENT_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"                + VALID_STUDENT_ID_AMY, StudentName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"        String userInput \u003d amyId + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"RussellDash332"},"content":"                + EMAIL_DESC_AMY + STUDENT_NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"RussellDash332"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"RussellDash332"},"content":"        String userInput \u003d amyId + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"RussellDash332"},"content":"        // student name","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"PokezardVGC"},"content":"        String userInput \u003d amyId + STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_AMY).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"PokezardVGC"},"content":"        userInput \u003d amyId + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"eugenelmj"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"PokezardVGC"},"content":"        expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"RussellDash332"},"content":"        // project name","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"RussellDash332"},"content":"        userInput \u003d amyId + PROJECT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"RussellDash332"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withProjectName(VALID_PROJECT_NAME_AMY).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"RussellDash332"},"content":"        expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":154,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"PokezardVGC"},"content":"        userInput \u003d amyId + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"eugenelmj"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"PokezardVGC"},"content":"        expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"RussellDash332"},"content":"        String userInput \u003d amyId + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"RussellDash332"},"content":"                + TAG_DESC_FRIEND + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-28"},{"lineNumber":168,"author":{"gitId":"RussellDash332"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"RussellDash332"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"RussellDash332"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"RussellDash332"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"RussellDash332"},"content":"        String userInput \u003d amyId + INVALID_STUDENT_NAME_DESC + STUDENT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":183,"author":{"gitId":"eugenelmj"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"RussellDash332"},"content":"        userInput \u003d amyId + EMAIL_DESC_BOB + INVALID_STUDENT_NAME_DESC + STUDENT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"RussellDash332"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":192,"author":{"gitId":"RussellDash332"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-28"},{"lineNumber":193,"author":{"gitId":"RussellDash332"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"PokezardVGC"},"content":"        expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"PokezardVGC"},"content":"        String userInput \u003d amyId + TAG_EMPTY;","lastModifiedDate":"2022-10-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"eugenelmj"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"PokezardVGC"},"content":"        EditCommand expectedCommand \u003d new EditCommand(amyId, descriptor);","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"eugenelmj":8,"PokezardVGC":29,"-":94,"RussellDash332":76}},{"path":"src/test/java/jeryl/fyp/logic/parser/FindProjectNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindProjectNameCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"public class FindProjectNameCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    private FindProjectNameCommandParser parser \u003d new FindProjectNameCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindProjectNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand expectedFindProjectNameCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                new FindProjectNameCommand(new ProjectNameContainsKeywordsPredicate(Arrays.asList(\"neural network\",","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"                        VALID_PROJECT_NAME_BOB)));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \"neural network/\" + VALID_PROJECT_NAME_BOB, expectedFindProjectNameCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, \" \\n neural network \\n / \\t \" + VALID_PROJECT_NAME_BOB + \"  \\t\",","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"                expectedFindProjectNameCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"eugenelmj":10,"-":21,"RussellDash332":7}},{"path":"src/test/java/jeryl/fyp/logic/parser/FindStudentIdCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindStudentIdCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentIdCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    private FindStudentIdCommandParser parser \u003d new FindStudentIdCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindStudentIdCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        FindStudentIdCommand expectedFindStudentIdCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                new FindStudentIdCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(\"neural network\",","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"                        VALID_PROJECT_NAME_BOB)));","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \"neural network/\" + VALID_PROJECT_NAME_BOB, expectedFindStudentIdCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \" \\n neural network \\n / \\t \" + VALID_PROJECT_NAME_BOB + \"  \\t\",","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"                expectedFindStudentIdCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":38}},{"path":"src/test/java/jeryl/fyp/logic/parser/FindStudentNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindStudentNameCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"public class FindStudentNameCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    private FindStudentNameCommandParser parser \u003d new FindStudentNameCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindStudentNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        FindStudentNameCommand expectedFindStudentNameCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                new FindStudentNameCommand(new StudentNameContainsKeywordsPredicate(Arrays.asList(\"neural network\",","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"                        VALID_PROJECT_NAME_BOB)));","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \"neural network/\" + VALID_PROJECT_NAME_BOB, expectedFindStudentNameCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \" \\n neural network \\n / \\t \" + VALID_PROJECT_NAME_BOB + \"  \\t\",","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"                expectedFindStudentNameCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":38}},{"path":"src/test/java/jeryl/fyp/logic/parser/FindTagsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindTagsCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.TagsContainKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"public class FindTagsCommandParserTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"    private FindTagsCommandParser parser \u003d new FindTagsCommandParser();","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"        assertParseFailure(parser, \"     \", String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, FindTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand expectedFindTagsCommand \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"                new FindTagsCommand(new TagsContainKeywordsPredicate(Arrays.asList(\"neural network\",","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"                        VALID_PROJECT_NAME_BOB)));","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \"neural network/\" + VALID_PROJECT_NAME_BOB, expectedFindTagsCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"        assertParseSuccess(parser, \" \\n neural network \\n / \\t \" + VALID_PROJECT_NAME_BOB + \"  \\t\",","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"                expectedFindTagsCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"eugenelmj":38}},{"path":"src/test/java/jeryl/fyp/logic/parser/FypManagerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindProjectNameCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.FindTagsCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.ListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.SortProjectNameCommand;","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.logic.commands.SortProjectStatusCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.TagsContainKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"public class FypManagerParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"    private final FypManagerParser parser \u003d new FypManagerParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    public void parseCommand_addStudent() throws Exception {","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"        AddStudentCommand command \u003d (AddStudentCommand) parser.parseCommand(StudentUtil.getAddStudentCommand(student));","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"YH-15"},"content":"        assertEquals(new AddStudentCommand(student), command);","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    public void parseCommand_deleteStudent() throws Exception {","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"PokezardVGC"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"        DeleteStudentCommand command \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"                StudentUtil.getDeleteStudentCommand(student));","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"YH-15"},"content":"        assertEquals(new DeleteStudentCommand(student.getStudentId()), command);","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"eugenelmj"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"PokezardVGC"},"content":"                + student.getStudentId() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"PokezardVGC"},"content":"        assertEquals(new EditCommand(student.getStudentId(), descriptor), command);","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"    public void parseCommand_findProjectName() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"        FindProjectNameCommand command \u003d (FindProjectNameCommand) parser.parseCommand(","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"                FindProjectNameCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\"/\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(new FindProjectNameCommand(new ProjectNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"        command \u003d (FindProjectNameCommand) parser.parseCommand(FindProjectNameCommand.ALTERNATIVE_COMMAND_WORD","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"                + \" \" + keywords.stream().collect(Collectors.joining(\"/\")));","lastModifiedDate":"2022-10-28"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(new FindProjectNameCommand(new ProjectNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"    public void parseCommand_findTags() throws Exception {","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"eugenelmj"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"eugenelmj"},"content":"        FindTagsCommand command \u003d (FindTagsCommand) parser.parseCommand(","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"eugenelmj"},"content":"                FindTagsCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\"/\")));","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(new FindTagsCommand(new TagsContainKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2022-10-28"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"                HelpCommand.COMMAND_WORD + \" \" + DeleteStudentCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"JordanChua"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"JordanChua"},"content":"        final StudentId studentId \u003d new StudentId(\"A0123456G\");","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"JordanChua"},"content":"        final ProjectStatus projectStatus \u003d new ProjectStatus(\"DONE\");","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"JordanChua"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(MarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"RussellDash332"},"content":"                + PREFIX_STUDENT_ID + studentId + \" \" + PREFIX_PROJECT_STATUS + projectStatus);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"JordanChua"},"content":"        assertEquals(new MarkCommand(studentId, projectStatus), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":130,"author":{"gitId":"JordanChua"},"content":"    public void parseCommand_sortProjectStatus() throws Exception {","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"JordanChua"},"content":"        assertTrue(parser.parseCommand(SortProjectStatusCommand.COMMAND_WORD) instanceof SortProjectStatusCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":132,"author":{"gitId":"JordanChua"},"content":"        assertTrue(parser.parseCommand(SortProjectStatusCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"JordanChua"},"content":"                instanceof SortProjectStatusCommand);","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":135,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":137,"author":{"gitId":"RussellDash332"},"content":"    public void parseCommand_sortProjectName() throws Exception {","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(parser.parseCommand(SortProjectNameCommand.COMMAND_WORD) instanceof SortProjectNameCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(parser.parseCommand(SortProjectNameCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2022-10-28"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"                instanceof SortProjectNameCommand);","lastModifiedDate":"2022-10-28"},{"lineNumber":141,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"YH-15"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"YH-15"},"content":"                parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eugenelmj":24,"JordanChua":23,"YH-15":7,"PokezardVGC":3,"-":62,"RussellDash332":29}},{"path":"src/test/java/jeryl/fyp/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_PROJECT_STATUS_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PROJECT_STATUS_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.PROJECT_STATUS_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_STATUS_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"        // normal","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_AMY + PROJECT_STATUS_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"                new MarkCommand(new StudentId(VALID_STUDENT_ID_AMY), new ProjectStatus(VALID_PROJECT_STATUS_AMY)));","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        // multiple statuses - last status accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        assertParseSuccess(parser, STUDENT_ID_DESC_AMY + PROJECT_STATUS_DESC_BOB + PROJECT_STATUS_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"                new MarkCommand(new StudentId(VALID_STUDENT_ID_AMY), new ProjectStatus(VALID_PROJECT_STATUS_AMY)));","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        // missing prefixes","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        // missing student ID","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, VALID_STUDENT_ID_AMY + PROJECT_STATUS_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        // missing status","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_AMY + VALID_PROJECT_STATUS_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"        // invalid student ID","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, INVALID_STUDENT_ID_DESC + PROJECT_STATUS_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"                StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        // invalid status","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_AMY + INVALID_PROJECT_STATUS_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"                ProjectStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"RussellDash332":56}},{"path":"src/test/java/jeryl/fyp/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    private static final String INVALID_STUDENT_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"A012T456X\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    private static final String INVALID_PROJECT_NAME \u003d \"@CSSE$\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    private static final String VALID_STUDENT_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    private static final String VALID_STUDENT_ID \u003d \"A0123456X\";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    private static final String VALID_PROJECT_NAME \u003d \"CSSE test\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentName((String) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentName(INVALID_STUDENT_NAME));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        StudentName expectedStudentName \u003d new StudentName(VALID_STUDENT_NAME);","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedStudentName, ParserUtil.parseStudentName(VALID_STUDENT_NAME));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_STUDENT_NAME + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        StudentName expectedStudentName \u003d new StudentName(VALID_STUDENT_NAME);","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedStudentName, ParserUtil.parseStudentName(nameWithWhitespace));","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentId_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentId((String) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentId_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentId(INVALID_STUDENT_ID));","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentId_validValueWithoutWhitespace_returnsStudentId() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(VALID_STUDENT_ID));","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"    public void parseStudentId_validValueWithWhitespace_returnsTrimmedStudentId() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"        String studentIdWithWhitespace \u003d WHITESPACE + VALID_STUDENT_ID + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(studentIdWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"    public void parseProjectName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseProjectName((String) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"    public void parseProjectName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseProjectName(INVALID_PROJECT_NAME));","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"RussellDash332"},"content":"    public void parseProjectName_validValueWithoutWhitespace_returnsProjectName() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"RussellDash332"},"content":"        ProjectName expectedProjectName \u003d new ProjectName(VALID_PROJECT_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedProjectName, ParserUtil.parseProjectName(VALID_PROJECT_NAME));","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"RussellDash332"},"content":"    public void parseProjectName_validValueWithWhitespace_returnsTrimmedProjectName() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"RussellDash332"},"content":"        String projectNameWithWhitespace \u003d WHITESPACE + VALID_PROJECT_NAME + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"RussellDash332"},"content":"        ProjectName expectedProjectName \u003d new ProjectName(VALID_PROJECT_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(expectedProjectName, ParserUtil.parseProjectName(projectNameWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"eugenelmj":4,"-":145,"RussellDash332":47}},{"path":"src/test/java/jeryl/fyp/model/FypManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"public class FypManagerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    private final FypManager fypManager \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(Collections.emptyList(), fypManager.getStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e fypManager.resetData(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"    public void resetData_withValidReadOnlyFypManager_replacesData() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        FypManager newData \u003d getTypicalFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"        fypManager.resetData(newData);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(newData, fypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"eugenelmj"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        FypManagerStub newData \u003d new FypManagerStub(newStudents);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e fypManager.resetData(newData));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e fypManager.hasStudent(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"    public void hasStudent_studentNotInFypManager_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(fypManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"    public void hasStudent_studentInFypManager_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        fypManager.addStudent(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(fypManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInFypManager_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"        fypManager.addStudent(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(fypManager.hasStudent(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e fypManager.getStudentList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"     * A stub ReadOnlyFypManager whose students list can violate interface constraints.","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"    private static class FypManagerStub implements ReadOnlyFypManager {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"eugenelmj"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"        FypManagerStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"eugenelmj"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"eugenelmj"},"content":"            return students;","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getUncompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"            return students.filtered(student -\u003e !student.getProjectStatus().projectStatus.equals(\"DONE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getCompletedStudentList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"RussellDash332"},"content":"            return students.filtered(student -\u003e student.getProjectStatus().projectStatus.equals(\"DONE\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":111,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getSortedByProjectNameUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":113,"author":{"gitId":"RussellDash332"},"content":"            return getUncompletedStudentList().sorted(Comparator.comparing(s -\u003e s.getProjectName().toString()","lastModifiedDate":"2022-10-28"},{"lineNumber":114,"author":{"gitId":"RussellDash332"},"content":"                    .toLowerCase()));","lastModifiedDate":"2022-10-28"},{"lineNumber":115,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":116,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":117,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":118,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getSortedByProjectStatusUncompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":119,"author":{"gitId":"RussellDash332"},"content":"            return getUncompletedStudentList().sorted((a, b) -\u003e {","lastModifiedDate":"2022-10-28"},{"lineNumber":120,"author":{"gitId":"RussellDash332"},"content":"                int statusComp \u003d b.getProjectStatus().toString().toLowerCase()","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"RussellDash332"},"content":"                        .compareTo(a.getProjectStatus().toString().toLowerCase());","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"RussellDash332"},"content":"                if (statusComp !\u003d 0) {","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"RussellDash332"},"content":"                    return statusComp;","lastModifiedDate":"2022-10-28"},{"lineNumber":125,"author":{"gitId":"RussellDash332"},"content":"                }","lastModifiedDate":"2022-10-28"},{"lineNumber":126,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"RussellDash332"},"content":"                return a.getProjectName().toString().toLowerCase()","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"RussellDash332"},"content":"                        .compareTo(b.getProjectName().toString().toLowerCase());","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"            });","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":132,"author":{"gitId":"RussellDash332"},"content":"        @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":133,"author":{"gitId":"RussellDash332"},"content":"        public ObservableList\u003cStudent\u003e getSortedCompletedStudentList() {","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"RussellDash332"},"content":"            return getCompletedStudentList().sorted(Comparator.comparing(s -\u003e s.getProjectName().toString()","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"RussellDash332"},"content":"                    .toLowerCase()));","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"eugenelmj":13,"-":59,"RussellDash332":67}},{"path":"src/test/java/jeryl/fyp/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.testutil.FypManagerBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(new FypManager(), new FypManager(modelManager.getFypManager()));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        userPrefs.setFypManagerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        userPrefs.setFypManagerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"    public void setFypManagerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFypManagerFilePath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"    public void setFypManagerFilePath_validPath_setsFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        modelManager.setFypManagerFilePath(path);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(path, modelManager.getFypManagerFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"eugenelmj"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"    public void hasStudent_studentNotInFypManager_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"    public void hasStudent_studentInFypManager_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"eugenelmj"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"        FypManager fypManager \u003d new FypManagerBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"        FypManager differentFypManager \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"        modelManager \u003d new ModelManager(fypManager, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(fypManager, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"RussellDash332"},"content":"        // different fypManager -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentFypManager, userPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"RussellDash332"},"content":"        String[] keywords \u003d ALICE.getStudentName().fullStudentName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"RussellDash332"},"content":"        modelManager.updateFilteredStudentList(new StudentNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(modelManager.equals(new ModelManager(fypManager, userPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"eugenelmj"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"RussellDash332"},"content":"        differentUserPrefs.setFypManagerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(modelManager.equals(new ModelManager(fypManager, differentUserPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"eugenelmj":11,"-":95,"RussellDash332":26}},{"path":"src/test/java/jeryl/fyp/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    public void setFypManagerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFypManagerFilePath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":17,"RussellDash332":4}},{"path":"src/test/java/jeryl/fyp/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"eugenelmj":1,"-":66,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/model/student/ProjectNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"public class ProjectNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicate \u003d new ProjectNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate secondPredicate \u003d new ProjectNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicateCopy \u003d new ProjectNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"    public void test_projectNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        // One keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate predicate \u003d new ProjectNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"                Collections.singletonList(\"neural\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withProjectName(\"neural network\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new ProjectNameContainsKeywordsPredicate(Arrays.asList(\"neural\", \"network\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withProjectName(\"neural network\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new ProjectNameContainsKeywordsPredicate(Arrays.asList(\"graph\", \"network\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withProjectName(\"neural network\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new ProjectNameContainsKeywordsPredicate(Arrays.asList(\"neUrAl\", \"NetWORK\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withProjectName(\"neural network\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"    public void test_projectNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        ProjectNameContainsKeywordsPredicate predicate \u003d new ProjectNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(predicate.test(new StudentBuilder().withProjectName(\"neural network\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new ProjectNameContainsKeywordsPredicate(Arrays.asList(\"graph\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(predicate.test(new StudentBuilder().withProjectName(\"neural network\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"        // Keywords match name, studentId, and email, but does not match name","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new ProjectNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"A1234567X\", \"alice@email.com\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").withStudentId(\"A1234567X\")","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"                .withEmail(\"alice@email.com\").withProjectName(\"neural net\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":80}},{"path":"src/test/java/jeryl/fyp/model/student/ProjectNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YH-15"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"YH-15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"YH-15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"YH-15"},"content":"public class ProjectNameTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"YH-15"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"YH-15"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"YH-15"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectName(invalidName));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"YH-15"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"YH-15"},"content":"        // null name","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"YH-15"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectName.isValidProjectName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        // invalid name","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"YH-15"},"content":"        assertFalse(ProjectName.isValidProjectName(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"YH-15"},"content":"        assertFalse(ProjectName.isValidProjectName(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"YH-15"},"content":"        assertFalse(ProjectName.isValidProjectName(\"   \")); // multiple spaces","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"YH-15"},"content":"        assertFalse(ProjectName.isValidProjectName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"YH-15"},"content":"        assertFalse(ProjectName.isValidProjectName(\"+dsdw+\")); // starting with non-alphanumeric characters","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"YH-15"},"content":"        assertFalse(ProjectName.isValidProjectName(\"Machine Learn -- practical guide to data science.\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"        // valid name","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"        assertTrue(ProjectName.isValidProjectName(\"some random alphabets\")); // alphabets only","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"        assertTrue(ProjectName.isValidProjectName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"        assertTrue(ProjectName.isValidProjectName(\"some random alphabets 12345\")); // alphanumeric characters","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"YH-15"},"content":"        assertTrue(ProjectName.isValidProjectName(\"Random Forest\")); // with capital letters","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"        assertTrue(ProjectName.isValidProjectName(\"Generalized Autoencoder for dimensionality reduction\")); // long name","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"YH-15"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"YH-15":41}},{"path":"src/test/java/jeryl/fyp/model/student/ProjectStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JordanChua"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"JordanChua"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"JordanChua"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"JordanChua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"JordanChua"},"content":"public class ProjectStatusTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"JordanChua"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"JordanChua"},"content":"        ProjectStatus status \u003d new ProjectStatus(\"IP\");","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"JordanChua"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"JordanChua"},"content":"        assertTrue(status.equals(status));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"JordanChua"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"JordanChua"},"content":"        ProjectStatus statusCopy \u003d new ProjectStatus(\"IP\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"JordanChua"},"content":"        assertTrue(status.equals(statusCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"JordanChua"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"JordanChua"},"content":"        assertFalse(status.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"JordanChua"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"JordanChua"},"content":"        assertFalse(status.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"JordanChua"},"content":"        ProjectStatus differentStatus \u003d new ProjectStatus(\"DONE\");","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"        assertFalse(status.equals(differentStatus));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"JordanChua"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"JordanChua":31}},{"path":"src/test/java/jeryl/fyp/model/student/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"public class StudentIdTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"        String invalidStudentId \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidStudentId));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    public void isValidStudentId() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"        // null student ID","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidStudentId(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        // invalid student IDs","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"A91P\")); // less than 7 numbers","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"matric\")); // non-numeric","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"183q0791\")); // alphabets within digits","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"A931 1534Q\")); // spaces within digits","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"A 9311534Q\")); // spaces within","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"A9311534 Q\")); // spaces within","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"a0193773X\")); // lower capitals","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentId.isValidStudentId(\"A0193773w\")); // lower capitals","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"        // valid student IDs","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentId.isValidStudentId(\"A0123456X\")); // A + 7 digits + an alphabet","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentId.isValidStudentId(\"A0000000A\")); // A + 7 digits + an alphabet","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":43}},{"path":"src/test/java/jeryl/fyp/model/student/StudentNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"public class StudentNameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"        StudentNameContainsKeywordsPredicate firstPredicate \u003d new StudentNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"        StudentNameContainsKeywordsPredicate secondPredicate \u003d new StudentNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        StudentNameContainsKeywordsPredicate firstPredicateCopy \u003d new StudentNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"        // One keyword","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        StudentNameContainsKeywordsPredicate predicate \u003d new StudentNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new StudentNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new StudentNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new StudentNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        StudentNameContainsKeywordsPredicate predicate \u003d new StudentNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new StudentNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"        // Keywords match studentId, email and project name, but does not match name","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        predicate \u003d new StudentNameContainsKeywordsPredicate(","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"                Arrays.asList(\"A1234567X\", \"alice@email.com\", \"neural\", \"net\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").withStudentId(\"A1234567X\")","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"                .withEmail(\"alice@email.com\").withProjectName(\"neural net\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"RussellDash332":81}},{"path":"src/test/java/jeryl/fyp/model/student/StudentNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"public class StudentNameTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentName(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentName(invalidName));","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"        // null name","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentName.isValidStudentName(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        // invalid name","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentName.isValidStudentName(\"\")); // empty string","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentName.isValidStudentName(\" \")); // spaces only","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentName.isValidStudentName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(StudentName.isValidStudentName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"        // valid name","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentName.isValidStudentName(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentName.isValidStudentName(\"12345\")); // numbers only","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentName.isValidStudentName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentName.isValidStudentName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(StudentName.isValidStudentName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"RussellDash332":40}},{"path":"src/test/java/jeryl/fyp/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"    public void isSameStudentId() {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(ALICE.isSameStudentId(ALICE));","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(ALICE.isSameStudentId(null));","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        // same ID, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE)","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"                .withProjectName(VALID_PROJECT_NAME_BOB)","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"        assertTrue(ALICE.isSameStudentId(editedAlice));","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"        // different ID, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(ALICE.isSameStudentId(editedAlice));","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        // different studentId -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        // different project name -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withProjectName(VALID_PROJECT_NAME_BOB).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"eugenelmj":11,"-":45,"RussellDash332":29}},{"path":"src/test/java/jeryl/fyp/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.StudentBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"eugenelmj"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"eugenelmj"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"eugenelmj"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"eugenelmj"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"eugenelmj"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"eugenelmj"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"eugenelmj"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"eugenelmj"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"eugenelmj"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"eugenelmj"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"eugenelmj"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"eugenelmj"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"eugenelmj"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"eugenelmj"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"eugenelmj"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"eugenelmj"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"eugenelmj"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"eugenelmj"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"eugenelmj"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"eugenelmj"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"eugenelmj":81,"-":84,"RussellDash332":4}},{"path":"src/test/java/jeryl/fyp/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.model.tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":24,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import static jeryl.fyp.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    private static final String INVALID_STUDENT_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"    private static final String INVALID_STUDENT_ID \u003d \"+1651234D\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    private static final String INVALID_PROJECT_NAME \u003d \"$@CS2103 SE!?\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"YH-15"},"content":"    private static final JsonAdaptedDeadline INVALID_DEADLINELIST \u003d new JsonAdaptedDeadline(","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"            \"CS2103--tp, deadline: 15-12-2022\");","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    private static final String VALID_STUDENT_NAME \u003d BENSON.getStudentName().toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    private static final String VALID_STUDENT_ID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    private static final String VALID_PROJECT_NAME \u003d BENSON.getProjectName().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"    private static final String VALID_PROJECT_STATUS \u003d BENSON.getProjectStatus().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    private static final List\u003cJsonAdaptedDeadline\u003e VALID_DEADLINELIST \u003d BENSON.getDeadlineList()","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"YH-15"},"content":"            .asUnmodifiableObservableList().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"YH-15"},"content":"            .map(JsonAdaptedDeadline::new)","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"YH-15"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"eugenelmj"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"                new JsonAdaptedStudent(INVALID_STUDENT_NAME, VALID_STUDENT_ID, VALID_EMAIL, VALID_PROJECT_NAME,","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"YH-15"},"content":"                        VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d StudentName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_STUDENT_ID, VALID_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"                VALID_PROJECT_NAME, VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentName.class.getSimpleName());","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, INVALID_STUDENT_ID, VALID_EMAIL, VALID_PROJECT_NAME,","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"YH-15"},"content":"                        VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"YH-15"},"content":"                VALID_PROJECT_NAME, VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_ID, INVALID_EMAIL, VALID_PROJECT_NAME,","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"                        VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_ID, null,","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"YH-15"},"content":"                VALID_PROJECT_NAME, VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"    public void toModelType_invalidProjectName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_ID, VALID_EMAIL, INVALID_PROJECT_NAME,","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"YH-15"},"content":"                        VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d ProjectName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"    public void toModelType_nullProjectName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"RussellDash332"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_ID, VALID_EMAIL,","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"YH-15"},"content":"                null, VALID_PROJECT_STATUS, VALID_DEADLINELIST, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"RussellDash332"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectName.class.getSimpleName());","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"YH-15"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"YH-15"},"content":"        List\u003cJsonAdaptedDeadline\u003e invalidDeadlines \u003d new ArrayList\u003c\u003e(VALID_DEADLINELIST);","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"        invalidDeadlines.add(INVALID_DEADLINELIST);","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"YH-15"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_ID, VALID_EMAIL,","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"YH-15"},"content":"                VALID_PROJECT_STATUS, VALID_PROJECT_STATUS, invalidDeadlines, VALID_TAGS);","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"eugenelmj"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"RussellDash332"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_STUDENT_ID, VALID_EMAIL,","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"YH-15"},"content":"                        VALID_PROJECT_NAME, VALID_PROJECT_STATUS, VALID_DEADLINELIST, invalidTags);","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"eugenelmj"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenelmj":18,"JordanChua":1,"YH-15":24,"-":52,"RussellDash332":40}},{"path":"src/test/java/jeryl/fyp/storage/JsonFypManagerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"public class JsonFypManagerStorageTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonFypManagerStorageTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    public void readFypManager_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFypManager(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    private java.util.Optional\u003cReadOnlyFypManager\u003e readFypManager(String filePath) throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        return new JsonFypManagerStorage(Paths.get(filePath)).readFypManager(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"RussellDash332"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"RussellDash332"},"content":"                : null;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"RussellDash332"},"content":"        assertFalse(readFypManager(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFypManager(\"notJsonFormatFypManager.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"    public void readFypManager_invalidStudentFypManager_throwDataConversionException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFypManager(\"invalidStudentFypManager.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"    public void readFypManager_invalidAndValidStudentFypManager_throwDataConversionException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFypManager(\"invalidAndValidStudentFypManager.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"    public void readAndSaveFypManager_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFypManager.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"        FypManager original \u003d getTypicalFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"        JsonFypManagerStorage jsonFypManagerStorage \u003d new JsonFypManagerStorage(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"        jsonFypManagerStorage.saveFypManager(original, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        ReadOnlyFypManager readBack \u003d jsonFypManagerStorage.readFypManager(filePath).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(original, new FypManager(readBack));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"RussellDash332"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"        jsonFypManagerStorage.saveFypManager(original, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"        readBack \u003d jsonFypManagerStorage.readFypManager(filePath).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(original, new FypManager(readBack));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"RussellDash332"},"content":"        jsonFypManagerStorage.saveFypManager(original); // file path not specified","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"RussellDash332"},"content":"        readBack \u003d jsonFypManagerStorage.readFypManager().get(); // file path not specified","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(original, new FypManager(readBack));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"RussellDash332"},"content":"    public void saveFypManager_nullFypManager_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFypManager(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"     * Saves {@code fypManager} at the specified {@code filePath}.","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"RussellDash332"},"content":"    private void saveFypManager(ReadOnlyFypManager fypManager, String filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"RussellDash332"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"RussellDash332"},"content":"            new JsonFypManagerStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"RussellDash332"},"content":"                    .saveFypManager(fypManager, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"RussellDash332"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"RussellDash332"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"RussellDash332"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"RussellDash332"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"RussellDash332"},"content":"    public void saveFypManager_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFypManager(new FypManager(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":110}},{"path":"src/test/java/jeryl/fyp/storage/JsonSerializableFypManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.testutil.TypicalStudents;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"public class JsonSerializableFypManagerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableFypManagerTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsFypManager.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentFypManager.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentFypManager.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"        JsonSerializableFypManager dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"                JsonSerializableFypManager.class).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        FypManager fypManagerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"        FypManager typicalStudentsFypManager \u003d TypicalStudents.getTypicalFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(fypManagerFromFile, typicalStudentsFypManager);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"        JsonSerializableFypManager dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"RussellDash332"},"content":"                JsonSerializableFypManager.class).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        JsonSerializableFypManager dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"                JsonSerializableFypManager.class).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"RussellDash332"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFypManager.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenelmj":4,"-":23,"RussellDash332":20}},{"path":"src/test/java/jeryl/fyp/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"        userPrefs.setFypManagerFilePath(Paths.get(\"fypmanager.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":117,"RussellDash332":6}},{"path":"src/test/java/jeryl/fyp/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.TypicalStudents.getTypicalFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.ReadOnlyFypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        JsonFypManagerStorage fypManagerStorage \u003d new JsonFypManagerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"        storageManager \u003d new StorageManager(fypManagerStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"RussellDash332"},"content":"    public void fypManagerReadSave() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"         * {@link JsonFypManagerStorage} class.","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonFypManagerStorageTest} class.","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"        FypManager original \u003d getTypicalFypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"RussellDash332"},"content":"        storageManager.saveFypManager(original);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        ReadOnlyFypManager retrieved \u003d storageManager.readFypManager().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"        assertEquals(original, new FypManager(retrieved));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"RussellDash332"},"content":"    public void getFypManagerFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"        assertNotNull(storageManager.getFypManagerFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":51,"RussellDash332":17}},{"path":"src/test/java/jeryl/fyp/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenelmj"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"eugenelmj"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"eugenelmj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"eugenelmj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"eugenelmj"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"eugenelmj"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"eugenelmj"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"eugenelmj"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"eugenelmj"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"        descriptor.setStudentName(student.getStudentName());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"RussellDash332"},"content":"        descriptor.setStudentId(student.getStudentId());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"        descriptor.setProjectName(student.getProjectName());","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code StudentName} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    public EditStudentDescriptorBuilder withStudentName(String name) {","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"RussellDash332"},"content":"        descriptor.setStudentName(new StudentName(name));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"eugenelmj"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code StudentId} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"RussellDash332"},"content":"    public EditStudentDescriptorBuilder withStudentId(String id) {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        descriptor.setStudentId(new StudentId(id));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"eugenelmj"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"eugenelmj"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"eugenelmj"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code ProjectName} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptorBuilder withProjectName(String projectName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"RussellDash332"},"content":"        descriptor.setProjectName(new ProjectName(projectName));","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"eugenelmj"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code ProjectStatus} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"RussellDash332"},"content":"    public EditStudentDescriptorBuilder withProjectStatus(String projectStatus) {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"        descriptor.setProjectStatus(new ProjectStatus(projectStatus));","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"eugenelmj"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"eugenelmj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"eugenelmj"},"content":"     * that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"eugenelmj"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"eugenelmj"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"eugenelmj"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"eugenelmj"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"eugenelmj"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"eugenelmj"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"eugenelmj"},"content":"        return descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"eugenelmj"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"eugenelmj"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"eugenelmj":74,"RussellDash332":22}},{"path":"src/test/java/jeryl/fyp/testutil/FypManagerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":" *     {@code FypManager ab \u003d new FypManagerBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"public class FypManagerBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"    private FypManager fypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"    public FypManagerBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"        fypManager \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"RussellDash332"},"content":"    public FypManagerBuilder(FypManager fypManager) {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"RussellDash332"},"content":"        this.fypManager \u003d fypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"     * Adds a new {@code Student} to the {@code FypManager} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public FypManagerBuilder withStudent(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"        fypManager.addStudent(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"RussellDash332"},"content":"    public FypManager build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"        return fypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"RussellDash332":34}},{"path":"src/test/java/jeryl/fyp/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"YH-15"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"YH-15"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.model.student.DeadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Email;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.ProjectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"JordanChua"},"content":"import jeryl.fyp.model.student.ProjectStatus;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentId;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.student.StudentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"eugenelmj"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"    public static final String DEFAULT_STUDENT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RussellDash332"},"content":"    public static final String DEFAULT_STUDENT_ID \u003d \"A1355255B\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public static final String DEFAULT_PROJECT_NAME \u003d \"CS2103 SE\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"JordanChua"},"content":"    public static final String DEFAULT_PROJECT_STATUS \u003d \"YTS\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"RussellDash332"},"content":"    private StudentName studentName;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"    private StudentId id;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    private ProjectName projectName;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"JordanChua"},"content":"    private ProjectStatus projectStatus;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"YH-15"},"content":"    private DeadlineList deadlineList;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"eugenelmj"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"eugenelmj"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        studentName \u003d new StudentName(DEFAULT_STUDENT_NAME);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"        id \u003d new StudentId(DEFAULT_STUDENT_ID);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        projectName \u003d new ProjectName(DEFAULT_PROJECT_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"JordanChua"},"content":"        projectStatus \u003d new ProjectStatus(DEFAULT_PROJECT_STATUS);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"YH-15"},"content":"        deadlineList \u003d new DeadlineList();","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"RussellDash332"},"content":"        studentName \u003d studentToCopy.getStudentName();","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        id \u003d studentToCopy.getStudentId();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"eugenelmj"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"eugenelmj"},"content":"        projectName \u003d studentToCopy.getProjectName();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"JordanChua"},"content":"        projectStatus \u003d studentToCopy.getProjectStatus();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"YH-15"},"content":"        deadlineList \u003d studentToCopy.getDeadlineList();","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"eugenelmj"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code StudentName} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"    public StudentBuilder withStudentName(String studentName) {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"        this.studentName \u003d new StudentName(studentName);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"eugenelmj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"eugenelmj"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"YH-15"},"content":"     * Parses the {@code deadlines} into a {@code Set\u003cDeadline\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"YH-15"},"content":"    public StudentBuilder withDeadlines(String[] deadlines) {","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"YH-15"},"content":"        Arrays.stream(deadlines)","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"YH-15"},"content":"                .map(ddl -\u003e SampleDataUtil.getDeadline(ddl.split(\", deadline: \")[0],","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"YH-15"},"content":"                                ddl.split(\", deadline: \")[1])).collect(Collectors.toList())","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"YH-15"},"content":"                .forEach(ddl -\u003e this.deadlineList.add(ddl));","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"YH-15"},"content":"        return this;","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code StudentId} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"RussellDash332"},"content":"    public StudentBuilder withStudentId(String id) {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"RussellDash332"},"content":"        this.id \u003d new StudentId(id);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"eugenelmj"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"eugenelmj"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"JordanChua"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"JordanChua"},"content":"     * Sets the {@code ProjectStatus} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"JordanChua"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"JordanChua"},"content":"    public StudentBuilder withProjectStatus(String projectStatus) {","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"JordanChua"},"content":"        this.projectStatus \u003d new ProjectStatus(projectStatus);","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"JordanChua"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"JordanChua"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"JordanChua"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"YH-15"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"RussellDash332"},"content":"     * Sets the {@code ProjectName} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"YH-15"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"eugenelmj"},"content":"    public StudentBuilder withProjectName(String projectName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"RussellDash332"},"content":"        this.projectName \u003d new ProjectName(projectName);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"YH-15"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"YH-15"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"eugenelmj"},"content":"    public Student build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"RussellDash332"},"content":"        return new Student(studentName, id, email, projectName, projectStatus, tags);","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"eugenelmj":17,"JordanChua":14,"YH-15":23,"PokezardVGC":1,"-":48,"RussellDash332":26}},{"path":"src/test/java/jeryl/fyp/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_ID;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.AddStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"YH-15"},"content":"import jeryl.fyp.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.tag.Tag;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"eugenelmj"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"eugenelmj"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"RussellDash332"},"content":"     * Returns an add student command string for adding the {@code student}.","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"RussellDash332"},"content":"    public static String getAddStudentCommand(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":26,"author":{"gitId":"YH-15"},"content":"        return AddStudentCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"PokezardVGC"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"     * Returns a delete student command string for deleting the {@code student}.","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"PokezardVGC"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    public static String getDeleteStudentCommand(Student student) {","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"YH-15"},"content":"        return DeleteStudentCommand.COMMAND_WORD + \" \" + PREFIX_STUDENT_ID + student.getStudentId();","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"PokezardVGC"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"PokezardVGC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"eugenelmj"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"        sb.append(PREFIX_STUDENT_NAME + student.getStudentName().fullStudentName + \" \");","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"        sb.append(PREFIX_STUDENT_ID + student.getStudentId().id + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"RussellDash332"},"content":"        sb.append(PREFIX_PROJECT_NAME + student.getProjectName().fullProjectName + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"eugenelmj"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"eugenelmj"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"RussellDash332"},"content":"        descriptor.getStudentName().ifPresent(name -\u003e sb.append(PREFIX_STUDENT_NAME)","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"                .append(name.fullStudentName).append(\" \"));","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"        descriptor.getProjectName().ifPresent(projectName -\u003e sb.append(PREFIX_PROJECT_NAME)","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"                .append(projectName.fullProjectName).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"eugenelmj":10,"YH-15":5,"PokezardVGC":4,"-":34,"RussellDash332":18}},{"path":"src/test/java/jeryl/fyp/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"eugenelmj"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"eugenelmj"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"eugenelmj"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"eugenelmj"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"eugenelmj"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"eugenelmj"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"eugenelmj"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenelmj":8,"-":44,"RussellDash332":3}},{"path":"src/test/java/jeryl/fyp/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"eugenelmj"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"eugenelmj"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"eugenelmj"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"eugenelmj":3,"-":7,"RussellDash332":2}},{"path":"src/test/java/jeryl/fyp/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.testutil;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"YH-15"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.model.FypManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"eugenelmj"},"content":"import jeryl.fyp.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"eugenelmj"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"eugenelmj"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"RussellDash332"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withStudentName(\"Alice Pauline\")","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RussellDash332"},"content":"            .withEmail(\"alice@example.com\").withStudentId(\"A1351253P\")","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"RussellDash332"},"content":"            .withProjectName(\"Using CRISP to generate crisps\")","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"JordanChua"},"content":"            .withProjectStatus(\"YTS\")","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"RussellDash332"},"content":"            .withDeadlines(new String[]{\"Research, deadline: 15-12-2022 12:30\"})","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"RussellDash332"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withStudentName(\"Benson Meier\")","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"RussellDash332"},"content":"            .withEmail(\"johnd@example.com\").withStudentId(\"A1765432B\")","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"RussellDash332"},"content":"            .withProjectName(\"Neural Networks and ML\")","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"JordanChua"},"content":"            .withProjectStatus(\"IP\")","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"RussellDash332"},"content":"            .withDeadlines(new String[]{\"CS2103 IP, deadline: 15-12-2022 12:30\"})","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"RussellDash332"},"content":"    public static final Student CARL \u003d new StudentBuilder().withStudentName(\"Carl Kurz\").withStudentId(\"A1352563C\")","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"YH-15"},"content":"            .withEmail(\"heinz@example.com\").withProjectName(\"About Decision Trees\")","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"YH-15"},"content":"            .withDeadlines(new String[]{\"data mining, deadline: 2022-10-07 15:46\"}).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"RussellDash332"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withStudentName(\"Daniel Meier\")","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RussellDash332"},"content":"            .withStudentId(\"A1652533D\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"YH-15"},"content":"            .withProjectName(\"Mathematics in Games\")","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"YH-15"},"content":"            .withDeadlines(new String[]{\"game theory reading, deadline: 2022-10-06 23:59\"})","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"YH-15"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"RussellDash332"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withStudentName(\"Elle Meyer\").withStudentId(\"A1482224E\")","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"YH-15"},"content":"            .withEmail(\"werner@example.com\").withProjectName(\"AB3 in a Nutshell\")","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"YH-15"},"content":"            .withDeadlines(new String[]{\"Use cases, deadline: 2022-10-26 05:21\"}).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"RussellDash332"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withStudentName(\"Fiona Kunz\").withStudentId(\"A1482427F\")","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"YH-15"},"content":"            .withEmail(\"lydia@example.com\").withProjectName(\"Hello World in 42 Languages\")","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"YH-15"},"content":"            .withDeadlines(new String[]{\"Duolingo, deadline: 2023-01-01 00:00\"}).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"RussellDash332"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withStudentName(\"George Best\").withStudentId(\"A1482442G\")","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"YH-15"},"content":"            .withEmail(\"anna@example.com\").withProjectName(\"Why George Best is the Best\")","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"YH-15"},"content":"            .withDeadlines(new String[]{\"Some random task, deadline: 2023-02-01 23:50\"}).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"RussellDash332"},"content":"    public static final Student HOON \u003d new StudentBuilder().withStudentName(\"Hoon Meier\").withStudentId(\"A1482424H\")","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"YH-15"},"content":"            .withEmail(\"stefan@example.com\").withProjectName(\"Robotics\")","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"RussellDash332"},"content":"            .withDeadlines(new String[]{\"Opening talk, deadline: 10-10-2022 1200\"}).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"RussellDash332"},"content":"    public static final Student IDA \u003d new StudentBuilder().withStudentName(\"Ida Mueller\").withStudentId(\"A1482131I\")","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"YH-15"},"content":"            .withEmail(\"hans@example.com\").withProjectName(\"computer network\")","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"RussellDash332"},"content":"            .withDeadlines(new String[]{\"assignments, deadline: 01-12-2022 15:15\"}).build();","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"eugenelmj"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"RussellDash332"},"content":"    public static final Student AMY \u003d new StudentBuilder().withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"RussellDash332"},"content":"            .withStudentId(VALID_STUDENT_ID_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"RussellDash332"},"content":"            .withProjectName(VALID_PROJECT_NAME_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"RussellDash332"},"content":"    public static final Student BOB \u003d new StudentBuilder().withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"RussellDash332"},"content":"            .withStudentId(VALID_STUDENT_ID_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"RussellDash332"},"content":"            .withProjectName(VALID_PROJECT_NAME_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"eugenelmj"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"RussellDash332"},"content":"     * Returns an {@code FypManager} with all the typical students.","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"RussellDash332"},"content":"    public static FypManager getTypicalFypManager() {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"RussellDash332"},"content":"        FypManager ab \u003d new FypManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"eugenelmj"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"eugenelmj"},"content":"            ab.addStudent(student);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"eugenelmj"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"eugenelmj":8,"JordanChua":2,"YH-15":14,"-":27,"RussellDash332":39}},{"path":"src/test/java/jeryl/fyp/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":34,"RussellDash332":1}},{"path":"src/test/java/jeryl/fyp/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RussellDash332"},"content":"package jeryl.fyp.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"import static jeryl.fyp.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"RussellDash332"},"content":"import jeryl.fyp.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"RussellDash332":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003c?import jeryl.fyp.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"RussellDash332":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"RussellDash332"},"content":"\u003cfx:root type\u003d\"jeryl.fyp.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"RussellDash332":1}}]
