[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F11-2/tp/actions)","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-F11-2/tp/branch/master/graph/badge.svg?token\u003dIA3TT58GTK)](https://codecov.io/gh/AY2223S1-CS2103T-F11-2/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"* This is a **brownfield project** completed by Team CS2103T-F11-2.\u003c/br\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"  * Used by NUS students who want to track the progress of assignments and tasks completed for the module ","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"  * Used by busy NUS students who want to organise their tasks for different modules","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"* The project simulates an ongoing software project for a desktop application (called _MODPRO_) used for tracking the progress of modules taken.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"* It is named `MODPRO` because it was intended to help NUS students to track the progress of the modules taken.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"* For the detailed documentation of this project, see the **[MODPRO Product Website](https://ay2223s1-cs2103t-f11-2.github.io/tp)**.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"dlimyy":9,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"### Douglas Lim","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"\u003cimg src\u003d\"images/dlimyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"[[github](https://github.com/dlimyy)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"[[portfolio](team/dlimyy.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"* Responsibilities: Integration, Deliverables and deadlines","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"### Tan Li Xin","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"\u003cimg src\u003d\"images/tlx02.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"[[github](http://github.com/tlx02)] ","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"[[portfolio](team/tlx02.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"### Phua Li Ting","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"\u003cimg src\u003d\"images/phualiting.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"[[github](http://github.com/phualiting)]","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"[[portfolio](team/phualiting.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"RachelChua"},"content":"### Rachel Chua","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"RachelChua"},"content":"\u003cimg src\u003d\"images/rachelchua.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"RachelChua"},"content":"[[github](http://github.com/RachelChua)]","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"RachelChua"},"content":"[[portfolio](team/rachelchua.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"RachelChua"},"content":"* Responsibilities: Deliverable and deadlines","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"### Samuel Pang","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"\u003cimg src\u003d\"images/sampy147.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"[[github](http://github.com/Sampy147)]","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"[[portfolio](team/sampy147.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"* Responsibilities: Documentation and Code quality","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"phualiting":5,"RachelChua":5,"tlx02":5,"Sampy147":5,"dlimyy":6,"-":36}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"dlimyy"},"content":"* has a need to manage a significant number of module tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"dlimyy"},"content":"**Value proposition**: manage module tasks faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​     | I want to …​                                  | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"dlimyy"},"content":"|----------|-------------|-----------------------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"RachelChua"},"content":"| `* * *`  | NUS student | view the list of tasks I need to complete     | start implementing those tasks.                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":276,"author":{"gitId":"phualiting"},"content":"| `* * *`  | NUS student | create the tasks in the tasklist              | add the list of tasks that need to be completed         |","lastModifiedDate":"2022-09-29"},{"lineNumber":277,"author":{"gitId":"tlx02"},"content":"| `* * *`  | NUS student | mark a task as complete                       | have a better idea of what I have completed.            |","lastModifiedDate":"2022-09-29"},{"lineNumber":278,"author":{"gitId":"dlimyy"},"content":"| `* *`    | NUS student | tag the priority of the tasks in the tasklist | prioritise the task that I would like to complete first |","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"Sampy147"},"content":"| `* * *`  | NUS student | delete the tasks in my tasklist               | remove them if added wrongly.                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"dlimyy"},"content":"(For all use cases below, the **System** is the `MODPRO` and the **Actor** is the `NUS student`, unless specified otherwise)","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"dlimyy"},"content":"**Use case: Add a task into task list**","lastModifiedDate":"2022-09-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"phualiting"},"content":"1. User requests to add a task","lastModifiedDate":"2022-09-29"},{"lineNumber":295,"author":{"gitId":"phualiting"},"content":"2. MODPRO shows the task added","lastModifiedDate":"2022-09-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"phualiting"},"content":"* 1a. The given description is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"phualiting"},"content":"    * 1a1. MODPRO shows an error message.","lastModifiedDate":"2022-09-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"phualiting"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"RachelChua"},"content":"**Use case: List tasks in task list**","lastModifiedDate":"2022-09-29"},{"lineNumber":308,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":309,"author":{"gitId":"RachelChua"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":310,"author":{"gitId":"RachelChua"},"content":"1. User requests to view tasks in the task list","lastModifiedDate":"2022-09-29"},{"lineNumber":311,"author":{"gitId":"RachelChua"},"content":"2. MODPRO displays the list of tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":312,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":313,"author":{"gitId":"RachelChua"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":315,"author":{"gitId":"tlx02"},"content":"**Use case: Mark a task as complete**","lastModifiedDate":"2022-09-29"},{"lineNumber":316,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":317,"author":{"gitId":"tlx02"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":318,"author":{"gitId":"tlx02"},"content":"1. User requests to mark a specific task as complete","lastModifiedDate":"2022-09-29"},{"lineNumber":319,"author":{"gitId":"tlx02"},"content":"2. MODPRO marks the task","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"tlx02"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":323,"author":{"gitId":"tlx02"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":325,"author":{"gitId":"tlx02"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":327,"author":{"gitId":"tlx02"},"content":"    * 1a1. MODPRO shows an error message..","lastModifiedDate":"2022-09-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":329,"author":{"gitId":"tlx02"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":330,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"dlimyy"},"content":"**Use Case: Tag the priority to complete task**","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":333,"author":{"gitId":"dlimyy"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":334,"author":{"gitId":"dlimyy"},"content":"1. NUS student requests to tag the priority of task in task list","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"dlimyy"},"content":"2. MODPRO adds the tag to the task in the task list","lastModifiedDate":"2022-09-29"},{"lineNumber":336,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":337,"author":{"gitId":"dlimyy"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":338,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":339,"author":{"gitId":"dlimyy"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":340,"author":{"gitId":"dlimyy"},"content":"* 1a. The given priority status for the task is invalid","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"dlimyy"},"content":"    * 1a1. MODPRO shows an error message \u003c/br\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":342,"author":{"gitId":"dlimyy"},"content":"      Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":343,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":344,"author":{"gitId":"Sampy147"},"content":"**Use case: Delete a task from the task list**","lastModifiedDate":"2022-09-30"},{"lineNumber":345,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"Sampy147"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"Sampy147"},"content":"1. User requests to delete a specific task in the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"Sampy147"},"content":"2. MODPRO deletes the task","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"Sampy147"},"content":"   Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":352,"author":{"gitId":"Sampy147"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"Sampy147"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"Sampy147"},"content":"    * 1a1. MODPRO shows an error message. \u003c/br\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"Sampy147"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"dlimyy"},"content":"2.  Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"phualiting":6,"RachelChua":8,"tlx02":14,"Sampy147":13,"dlimyy":21,"-":359}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"MODPRO is a desktop application which helps NUS students in tracking the progress of their modules. It is highly optimised for students who prefer Command Line Interface (CLI) by allowing those who type fast to key in commands to track their modules. It also provides a Graphic User interface(GUI) for those who prefer it.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"## Table of Contents","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"  - [Adding task functions](#adding-task-functions-coming-soon-in-v12)","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"  - [Tagging priority of task](#tagging-priority-of-task-coming-soon-in-v12)","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"  - [List](#list-coming-soon-in-v12)","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"  - [Marking a task as complete](#marking-a-task-as-complete-coming-soon-in-v12)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"  - [Deleting task function](#deleting-task-function-coming-soon-in-v12)","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start ","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"2. Download the latest `modpro.jar` from [here](https://github.com/AY2223S1-CS2103T-F11-2/tp).","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for MODPRO.","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. \u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"5. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"### Adding task functions [Coming Soon in v1.2]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"Adds task into task list","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"Format: `add TASK`","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"* Adds a task to the end of the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"* Task refers to the task description to be shown","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"* If the task description is empty, an error message will be displayed to inform the user to enter a description","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"`add CS2105 Assignment 1` adds CS2105 Assignment 1 task into task list","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"`add CS2103T Quiz` adds CS2103T Quiz task into task list","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"### Tagging priority of task [Coming Soon in v1.2]","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"Tags the priority to complete task ","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"Format: `tag TASK /p PRIORITY_STATUS`","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"* Tags one of three priorities(\"high\", \"medium\", \"low\") to the task","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"* If the priority status is not \"high\", \"medium\" or \"low\", an error message will appear to inform the user to key in a valid priority status","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"`tag CS2105 Quiz /p high` tags CS2105 Quiz as high priority task to complete","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"`tag CS2103T Quiz /p low` tags CS2103T Quiz as low priority task to complete","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"RachelChua"},"content":"### List [Coming Soon in v1.2]","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"RachelChua"},"content":"List tasks stored in task list","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"RachelChua"},"content":"Format: `list`","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"RachelChua"},"content":"* Display tasks that are stored in the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"RachelChua"},"content":"`list` displays tasks that are stored in the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"tlx02"},"content":"### Marking a task as complete [Coming Soon in v1.2]","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"Marks the specified task as complete","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"tlx02"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"tlx02"},"content":"* Marks the task at the specified INDEX as complete. ","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"tlx02"},"content":"* The index refers to the index number shown in the task list. ","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"tlx02"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"tlx02"},"content":"* If the index is non-positive or more than the number of tasks in the list, an error message will be displayed.","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"tlx02"},"content":"`mark 1` marks the first task in the list as complete.","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"tlx02"},"content":"`mark 3` marks the third task in the list as complete.","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"### Deleting task function [Coming Soon in v1.2]","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"Deletes the specified task according to the index given","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"* Deletes the task at the specified index from the storage","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"* The index refers to the index number shown in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"* If the task list is empty and the user inputs any number, an error message will be displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"* If the index is non-positive or more than the number of tasks in the list, an error message will be displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"`delete 1` deletes the first task in the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"`delete 3` deletes the first task in the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"dlimyy"},"content":"## Summary of Commands","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"dlimyy"},"content":"| Command    | Format and Examples                                                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"dlimyy"},"content":"|------------|---------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"phualiting"},"content":"| **Add**    | **Format**: `add TASK`\u003cbr/\u003e **Example**: `add CS2105 Assignment 1`                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"dlimyy"},"content":"| **Tag**    | **Format**: `tag TASK /p PRIORITY_STATUS`\u003cbr/\u003e **Example**: `tag CS2105 Quiz /p high` |","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"RachelChua"},"content":"| **List**   | **Format**: `list`\u003cbr/\u003e **Example**:`list`                                            |","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"Sampy147"},"content":"| **Mark**   | **Format**: `mark INDEX`\u003cbr/\u003e **Example**:`mark 1`                                    |","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"Sampy147"},"content":"| **Delete** | **Format**: `delete INDEX`\u003cbr/\u003e **Example**:`delete 1`                                |","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"phualiting":10,"RachelChua":6,"tlx02":9,"Sampy147":11,"dlimyy":24,"-":58}},{"path":"docs/team/dlimyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"title: Douglas Lim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"### Project: MODPRO","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"MODPRO is a desktop application which helps NUS students in tracking the progress of their modules. It is highly optimised for students who prefer Command Line Interface (CLI) by allowing those who type fast to key in commands to track their modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddlimyy)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"dlimyy":34}},{"path":"docs/team/phualiting.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"title: Phua Li Ting\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"### Project: MODPRO","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"MODPRO is a desktop application which helps NUS students in tracking the progress of their modules. It is highly optimised for students who prefer Command Line Interface (CLI) by allowing those who type fast to key in commands to track their modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dphualiting\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"        * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"        * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"phualiting":34}},{"path":"docs/team/rachelchua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"title: Rachel Chua\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"### Project: MODPRO","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":"MODPRO is a desktop application which helps NUS students in tracking the progress of their modules. It is highly optimised for students who prefer Command Line Interface (CLI) by allowing those who type fast to key in commands to track their modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drachelchua)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"        * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"        * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"RachelChua"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"RachelChua"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"RachelChua"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"RachelChua"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"RachelChua":34}},{"path":"docs/team/sampy147.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"title: Samuel Pang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"### Project: MODPRO","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"MODPRO is a desktop application which helps NUS students in tracking the progress of their modules. It is highly optimised for students who prefer Command Line Interface (CLI) by allowing those who type fast to key in commands to track their modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsampy147\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    * To be added soon","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Sampy147":34}},{"path":"docs/team/tlx02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"title: Tan Li Xin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"### Project: MODPRO","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"MODPRO is a desktop application which helps NUS students in tracking the progress of their modules. It is highly optimised for students who prefer Command Line Interface (CLI) by allowing those who type fast to key in commands to track their modules. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dtlx02\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"    * To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"  * PRs reviewed (with non-trivial review comments): To be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"  * To be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"tlx02":31}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_INVALID_MODULE_DISPLAYED_INDEX \u003d \"The module index provided is invalid\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_INVALID_MODULE_DELETION_AS_TIED_WITH_TASK \u003d \"The module\"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"            + \"cannot be deleted as it is tied with an existing task\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_INVALID_MODULE_EDIT_AS_TIED_WITH_TASK \u003d \"The module\"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"            + \"cannot be edited as it is tied with an existing task\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_INVALID_MODULE_CLEAR \u003d \"The modules cannot be cleared as task list is not empty\";","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_MODULE_NOT_FOUND \u003d \"This module does not exist\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the module list\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phualiting":1,"RachelChua":1,"tlx02":3,"Sampy147":6,"-":12}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"RachelChua"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"RachelChua"},"content":"     * Returns true if {@code sentence} contains the {@code partialWord}.","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"RachelChua"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"RachelChua"},"content":"     * @param partialWord cannot be null, cannot be empty","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"RachelChua"},"content":"     * @return true if {@code sentence} contains the {@code partialWord}, otherwise false","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"RachelChua"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"RachelChua"},"content":"    public static boolean containsPartialWord(String sentence, String partialWord) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"RachelChua"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"RachelChua"},"content":"        requireNonNull(partialWord);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"RachelChua"},"content":"        String preppedWord \u003d partialWord.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"RachelChua"},"content":"        return sentence.contains(preppedWord);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RachelChua":13,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"RachelChua"},"content":"    /** Returns an unmodifiable view of the filtered list of modules */","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"RachelChua"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RachelChua":2,"dlimyy":6,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"dlimyy"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dlimyy":12,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" * AddModuleCommand class represents an AddModuleCommand which adds the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    public static final String COMMAND_WORD \u003d \"addmod\";","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": adds a module to the module list.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"            + \"parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"            + PREFIX_MOD_CODE + \"MODULE_CODE\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    public static final String MODULE_ADDED_SUCCESS \u003d \"Module has been added successfully!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    public static final String DUPLICATE_MODULE_DETECTED \u003d \"This module code already exists!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    private final Module moduleAdded;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the AddModuleCommand class which","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * helps to add a module.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * @param moduleAdded","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    public AddModuleCommand(Module moduleAdded) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(moduleAdded);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"        this.moduleAdded \u003d moduleAdded;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        if (model.hasModule(moduleAdded)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"            throw new CommandException(DUPLICATE_MODULE_DETECTED);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        model.addModule(moduleAdded);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"        return new CommandResult(MODULE_ADDED_SUCCESS);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    public boolean equals(Object otherAddCommand) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        return otherAddCommand \u003d\u003d this","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"                || (otherAddCommand instanceof AddModuleCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"                \u0026\u0026 moduleAdded.equals(((AddModuleCommand) otherAddCommand).moduleAdded));","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":51}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY_STATUS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":" * AddTagCommand represents a command which adds a tag to the existing task.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": tags a task in the task list.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"            + \"parameters: INDEX \" + PREFIX_PRIORITY_STATUS + \"PRIORITY_STATUS\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    public static final String TAG_ADDED_SUCCESS \u003d \"The tag has been added successfully\";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    public static final String PRIORITY_TAG_ALREADY_EXIST \u003d \"The priority tag already exists\";","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    private final PriorityTag priorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    private final Index index;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the AddTagCommand. Sets the Priority tag and","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * the index to add the tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     * @param priorityTag The priority tag to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * @param index The index of the tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    public AddTagCommand(PriorityTag priorityTag, Index index) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        Task taggedTask \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"        List\u003cTask\u003e taskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        if (index.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"        Task currentTask \u003d taskList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"        if (priorityTag !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"            if (currentTask.hasPriorityTag()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"                throw new CommandException(PRIORITY_TAG_ALREADY_EXIST);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"            taggedTask \u003d currentTask.setPriorityTag(priorityTag);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"        model.setTask(currentTask, taggedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"        return new CommandResult(TAG_ADDED_SUCCESS);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dlimyy":62}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MODULE_NOT_FOUND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":" * Adds a task to the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"            + PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"            + PREFIX_MODULE + \"CS2103T \"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"            + PREFIX_DESCRIPTION + \"lecture quiz\";","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"     * Creates a AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"phualiting"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"        if (!model.hasModule(toAdd.getModule())) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"        } else if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"phualiting"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"phualiting"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"phualiting"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"phualiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"phualiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"phualiting"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"phualiting"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"phualiting":58,"tlx02":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearModulesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MODULE_CLEAR;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":" * Clears the module list.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"public class ClearModulesCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    public static final String COMMAND_WORD \u003d \"clearmodules\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_SUCCESSS \u003d \"Module list has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"        if (!model.getAddressBook().getTaskList().isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"            throw new CommandException(MESSAGE_INVALID_MODULE_CLEAR);","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"        return new CommandResult(MESSAGE_SUCCESSS);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"phualiting":29}},{"path":"src/main/java/seedu/address/logic/commands/ClearTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":" * Clears the task list","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"public class ClearTasksCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    public static final String COMMAND_WORD \u003d \"cleartasks\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_SUCCESSS \u003d \"Task list has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"        ObservableList\u003cModule\u003e moduleList \u003d model.getAddressBook().getModuleList();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"        AddressBook newAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"        newAddressBook.setModules(moduleList);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"        model.setAddressBook(newAddressBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"        return new CommandResult(MESSAGE_SUCCESSS);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"phualiting":30}},{"path":"src/main/java/seedu/address/logic/commands/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public static final String COMMAND_WORD \u003d \"deletemodule\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"            + \": Deletes the module identified by the index number used in the displayed module list.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Deleted Module: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    public DeleteModuleCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        Module moduleToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        if (model.hasTaskWithModule(moduleToDelete)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DELETION_AS_TIED_WITH_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        model.deleteModule(moduleToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"                || (other instanceof DeleteModuleCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteModuleCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":53}},{"path":"src/main/java/seedu/address/logic/commands/EditModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":" * Edits the task with the specified index number in the displayed task list.","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"public class EditModuleCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"    public static final String COMMAND_WORD \u003d \"editmodule\";","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the module code of the module identified \"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"            + \"by the index number used in the displayed module list. \"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"            + \"[\" + PREFIX_MOD_CODE + \"MODULE CODE] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"            + PREFIX_MOD_CODE + \"cs2040 \";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_EDIT_MODULE_SUCCESS \u003d \"Edited Module: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_MODULE_NOT_EDITED \u003d \"The provided fields are the same as the current module\";","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"    public static final String MESSAGE_NO_FIELDS_PROVIDED \u003d \"At module name to edit must be provided.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"    private final Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"    private final EditModuleDescriptor editModuleDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"     * @param index of the task in the filtered module list to edit","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"     * @param editModuleDescriptor details to edit the module with","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"    public EditModuleCommand(Index index, EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"        requireAllNonNull(index, editModuleDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"        this.editModuleDescriptor \u003d editModuleDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"        Module moduleToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"        Module editedModule \u003d moduleToEdit.edit(editModuleDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"        if (model.hasTaskWithModule(moduleToEdit)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_EDIT_AS_TIED_WITH_TASK);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"        if (moduleToEdit.isSameModuleCode(editedModule)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_EDITED);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"            model.replaceModule(moduleToEdit, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"        } catch (DuplicateModuleException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MODULE_SUCCESS, editedModule));","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"        if (!(other instanceof EditModuleCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"        EditModuleCommand e \u003d (EditModuleCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"                \u0026\u0026 editModuleDescriptor.equals(e.editModuleDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"     * Stores the name to edit the module with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"    public static class EditModuleDescriptor {","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"Sampy147"},"content":"        private ModuleCode moduleCode;","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"        /**","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"         */","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Sampy147"},"content":"            return CollectionUtil.isAnyNonNull(moduleCode);","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"Sampy147"},"content":"        public void setModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"Sampy147"},"content":"            this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Sampy147"},"content":"        public Optional\u003cModuleCode\u003e getModuleCode() {","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"Sampy147"},"content":"            return Optional.ofNullable(moduleCode);","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"Sampy147"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"Sampy147"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"Sampy147"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"Sampy147"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Sampy147"},"content":"                return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"Sampy147"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"Sampy147"},"content":"            if (!(other instanceof EditModuleDescriptor)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"Sampy147"},"content":"                return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"Sampy147"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"Sampy147"},"content":"            // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"Sampy147"},"content":"            EditModuleDescriptor e \u003d (EditModuleDescriptor) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"Sampy147"},"content":"            return moduleCode.equals(e.moduleCode);","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Sampy147":142}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_TASK;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MODULE_NOT_FOUND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":" * Edits the task with the specified index number in the displayed task list.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"    public static final String COMMAND_WORD \u003d \"edittask\";","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"        + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"        + \"[\" + PREFIX_MOD_CODE + \"MODULE CODE] \"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"        + PREFIX_MOD_CODE + \"cs2040 \"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"        + PREFIX_DESCRIPTION + \"task 3\";","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_TASK_NOT_EDITED \u003d \"The provided fields are the same as the current task\";","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_NO_FIELDS_PROVIDED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"    private final Index index;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"tlx02"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"tlx02"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"tlx02"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(index, editTaskDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"tlx02"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"tlx02"},"content":"        this.editTaskDescriptor \u003d editTaskDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"tlx02"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"tlx02"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"tlx02"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"tlx02"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"        if (editTaskDescriptor.getModule().isPresent() \u0026\u0026 !model.hasModule(editTaskDescriptor.module)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"tlx02"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"tlx02"},"content":"        Task editedTask \u003d taskToEdit.edit(editTaskDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"tlx02"},"content":"        if (taskToEdit.isSameTask(editedTask)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(MESSAGE_TASK_NOT_EDITED);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"tlx02"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"tlx02"},"content":"            model.replaceTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"tlx02"},"content":"        } catch (DuplicateTaskException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"tlx02"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"tlx02"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"tlx02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"tlx02"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"tlx02"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"tlx02"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"tlx02"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"tlx02"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"tlx02"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"tlx02"},"content":"        // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"tlx02"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"tlx02"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"tlx02"},"content":"            \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"tlx02"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"tlx02"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"tlx02"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"tlx02"},"content":"        private Module module;","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"tlx02"},"content":"        private TaskDescription description;","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"tlx02"},"content":"        public EditTaskDescriptor() {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"tlx02"},"content":"        /**","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"tlx02"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"tlx02"},"content":"         */","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"tlx02"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"tlx02"},"content":"            return CollectionUtil.isAnyNonNull(module, description);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"tlx02"},"content":"        public void setModule(Module module) {","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"tlx02"},"content":"            this.module \u003d module;","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"tlx02"},"content":"        public Optional\u003cModule\u003e getModule() {","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"tlx02"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"tlx02"},"content":"        public void setDescription(TaskDescription description) {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"tlx02"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"tlx02"},"content":"        public Optional\u003cTaskDescription\u003e getDescription() {","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"tlx02"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"tlx02"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"tlx02"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"tlx02"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"tlx02"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"tlx02"},"content":"                return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"tlx02"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"tlx02"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"tlx02"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"tlx02"},"content":"                return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"tlx02"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"tlx02"},"content":"            // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"tlx02"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"tlx02"},"content":"            return module.equals(e.module)","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"tlx02"},"content":"                \u0026\u0026 description.equals(e.description);","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"tlx02":160}},{"path":"src/main/java/seedu/address/logic/commands/FilterTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MODULE_NOT_FOUND;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.FilterPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":" * Filters the task list by module and completion status.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"public class FilterTasksCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"            + \": Filters the task list by module and/or completion status. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"            + PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"            + PREFIX_STATUS + \"STATUS\";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks with following constraints:%1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_NO_RESULTS \u003d \"No tasks found with following constraints:%1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"    private final FilterPredicate predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"     * Constructor of the FilterTaskCommand class which filters the task list by the given constraints.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"     * @param predicate conditions to check for each task","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"    public FilterTasksCommand(FilterPredicate predicate) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"        if (predicate.hasModuleToCheck() \u0026\u0026 !model.hasModule(predicate.getModuleToCheck())) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"phualiting"},"content":"        if (model.getFilteredTaskList().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"phualiting"},"content":"            return new CommandResult(String.format(MESSAGE_NO_RESULTS, predicate));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, predicate));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"phualiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"phualiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"phualiting"},"content":"                || (other instanceof FilterTasksCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"phualiting"},"content":"                \u0026\u0026 predicate.equals(((FilterTasksCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"phualiting":61,"tlx02":2}},{"path":"src/main/java/seedu/address/logic/commands/FindTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"import seedu.address.model.task.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":" * Finds and lists all tasks in the task list whose description contains any of the argument keywords.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"public class FindTasksCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"    public static final String COMMAND_WORD \u003d \"findtasks\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names \"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"            + \"contain partially or fully any of \"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"            + \"Example: \" + COMMAND_WORD + \" task\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"    private final DescriptionContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"    public FindTasksCommand(DescriptionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"RachelChua"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"RachelChua"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"RachelChua"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"RachelChua"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"RachelChua"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"RachelChua"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"RachelChua"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"RachelChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"RachelChua"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"RachelChua"},"content":"                || (other instanceof FindTasksCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"RachelChua"},"content":"                \u0026\u0026 predicate.equals(((FindTasksCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"RachelChua"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":43}},{"path":"src/main/java/seedu/address/logic/commands/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":" * Lists all tasks in the task list to the user.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":"    public static final String COMMAND_WORD \u003d \"listtasks\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"    public static final String EMPTY_LIST \u003d \"No tasks in list\";","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"        if (model.getFilteredTaskList().size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"            return new CommandResult(EMPTY_LIST);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":28}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":" * Mark a task identified using it\u0027s displayed index from the task list as complete.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"        + \": Marks the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"        Task markedTask \u003d taskToMark.mark();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"        model.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, taskToMark));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"tlx02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"tlx02"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"tlx02"},"content":"            || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"tlx02"},"content":"            \u0026\u0026 targetIndex.equals(((MarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"tlx02":55}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":" * Unmark (label as incomplete) a task identified using it\u0027s displayed index from the task list.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"        + \": Unmark the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"    public UnmarkCommand(Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"        Task unmarkedTask \u003d taskToUnmark.unmark();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"        model.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, taskToUnmark));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"tlx02"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"tlx02"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"tlx02"},"content":"            || (other instanceof UnmarkCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"tlx02"},"content":"            \u0026\u0026 targetIndex.equals(((UnmarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"tlx02":55}},{"path":"src/main/java/seedu/address/logic/parser/AddModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":" * Parses arguments to create a new AddModuleCommand Object.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"public class AddModuleCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MOD_CODE);","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MOD_CODE)","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"                    AddModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        ModuleCode modCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MOD_CODE)","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"                .orElseThrow(NullPointerException::new));","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"        Module module \u003d new Module(modCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        return new AddModuleCommand(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":40}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY_STATUS;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":" * AddTagCommandParser parses the arguments and supplies these arguments","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":" * to the AddTagCommand.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"public class AddTagCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"        String[] indexWithTags \u003d args.strip().split(\" \", 2);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        if (indexWithTags.length !\u003d 2) {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"                    AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        Index index \u003d ParserUtil.parseIndex(indexWithTags[0]);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        String tags \u003d \" \" + indexWithTags[1];","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(tags, PREFIX_PRIORITY_STATUS);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        if (!areAnyPrefixesPresent(argMultiMap, PREFIX_PRIORITY_STATUS)","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"                || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"                    AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        PriorityTag priorityTag \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"        String priorityStatus \u003d argMultiMap.getValue(PREFIX_PRIORITY_STATUS).orElse(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        if (priorityStatus !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            priorityTag \u003d ParserUtil.parsePriorityTag(priorityStatus);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        return new AddTagCommand(priorityTag, index);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dlimyy":45}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":" * Parses arguments to create a new AddTaskCommand Object.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_DESCRIPTION);","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MODULE, PREFIX_DESCRIPTION)","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"        Module module \u003d ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"        TaskDescription description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"        Task task \u003d new Task(module, description);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"phualiting"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"phualiting"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"phualiting":48}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.ClearModulesCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.ClearTasksCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.EditModuleCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.FilterTasksCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"import seedu.address.logic.commands.FindTasksCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":29,"author":{"gitId":"RachelChua"},"content":"import seedu.address.logic.commands.ListTasksCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"tlx02"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"        case EditModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"            return new EditModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"tlx02"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"tlx02"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"tlx02"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"dlimyy"},"content":"        case AddModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"dlimyy"},"content":"            return new AddModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"RachelChua"},"content":"        case ListTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"RachelChua"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"RachelChua"},"content":"        case FindTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"RachelChua"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"phualiting"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"phualiting"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"Sampy147"},"content":"        case DeleteModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"Sampy147"},"content":"            return new DeleteModuleCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"phualiting"},"content":"        case ClearTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"phualiting"},"content":"            return new ClearTasksCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"phualiting"},"content":"        case ClearModulesCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"phualiting"},"content":"            return new ClearModulesCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"dlimyy"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"dlimyy"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"phualiting"},"content":"        case FilterTasksCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"phualiting"},"content":"            return new FilterTasksCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"phualiting":16,"RachelChua":7,"tlx02":12,"Sampy147":12,"dlimyy":8,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    public static final Prefix PREFIX_MOD_CODE \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    public static final Prefix PREFIX_PRIORITY_STATUS \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"phualiting":3,"dlimyy":2,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/DeleteModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.DeleteModuleCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" * Parses input arguments and creates a new DeleteModuleCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"public class DeleteModuleCommandParser implements Parser\u003cDeleteModuleCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteModuleCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * and returns a DeleteModuleCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public DeleteModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"            return new DeleteModuleCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":29}},{"path":"src/main/java/seedu/address/logic/parser/EditModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_NO_FIELDS_PROVIDED;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.EditModuleCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":" * Parses input arguments and creates a new EditModuleCommand object.","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"public class EditModuleCommandParser implements Parser\u003cEditModuleCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"     * Parses the given {@code String} of arguments in the context of the EditModuleCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"     * and returns an EditModuleCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    public EditModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MOD_CODE);","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"                    EditModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"        EditModuleCommand.EditModuleDescriptor editModuleDescriptor \u003d new EditModuleCommand.EditModuleDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"        if (argMultimap.getValue(PREFIX_MOD_CODE).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"            ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MOD_CODE).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"            editModuleDescriptor.setModuleCode(moduleCode);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        if (!editModuleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"            throw new ParseException(MESSAGE_NO_FIELDS_PROVIDED);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"        return new EditModuleCommand(index, editModuleDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Sampy147":51}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import static seedu.address.logic.commands.EditTaskCommand.MESSAGE_NO_FIELDS_PROVIDED;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":" * Parses input arguments and creates a new EditTaskCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_MOD_CODE, PREFIX_DESCRIPTION);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"        Index index;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"        EditTaskCommand.EditTaskDescriptor editTaskDescriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"        if (argMultimap.getValue(PREFIX_MOD_CODE).isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"            ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MOD_CODE).get());","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"            editTaskDescriptor.setModule(new Module(moduleCode));","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"            editTaskDescriptor.setDescription(","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"                ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"tlx02"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"tlx02"},"content":"            throw new ParseException(MESSAGE_NO_FIELDS_PROVIDED);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"tlx02"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"tlx02":56}},{"path":"src/main/java/seedu/address/logic/parser/FilterTasksCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.commands.FilterTasksCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.FilterPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.TaskStatus;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":" * Parses input arguments and creates a new FilterTasksCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"public class FilterTasksCommandParser implements Parser\u003cFilterTasksCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterTasksCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"     * and returns a FilterTasksCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"    public FilterTasksCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"        Optional\u003cModule\u003e module \u003d Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"        Optional\u003cTaskStatus\u003e status \u003d Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_STATUS);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"        if (!isPrefixPresent(argMultimap, PREFIX_MODULE, PREFIX_STATUS) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTasksCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"        if (hasPrefix(argMultimap, PREFIX_MODULE)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"            module \u003d Optional.of(ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"        if (hasPrefix(argMultimap, PREFIX_STATUS)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"            status \u003d Optional.of(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"        return new FilterTasksCommand(new FilterPredicate(module, status));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"     * Returns true if at least one prefix is not empty {@code Optional} values in the given","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"phualiting"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"phualiting"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"phualiting"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"phualiting"},"content":"     * Returns true if the prefix is not empty {@code Optional} values in the given","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"phualiting"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"phualiting"},"content":"    private static boolean hasPrefix(ArgumentMultimap argumentMultimap, Prefix prefix) {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"phualiting"},"content":"        return argumentMultimap.getValue(prefix).isPresent();","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"phualiting":62}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"import seedu.address.logic.commands.FindTasksCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":"import seedu.address.model.task.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":" * Parses input arguments and creates a new FindTaskCommand object","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTasksCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTaskCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"    public FindTasksCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTasksCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"        return new FindTasksCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(trimmedArgs)));","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":28}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":" * Parses input arguments and creates a new MarkCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"tlx02":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.TaskModule;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.TaskStatus;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"dlimyy"},"content":"     * Parses the {@code moduleCode} String into a {@code ModuleCode} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"dlimyy"},"content":"     * @param moduleCode The module code of the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"dlimyy"},"content":"     * @return The ModuleCode object created from the moduleCode string.","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"dlimyy"},"content":"     * @throws ParseException if the given {@code moduleCode} is not valid.","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"dlimyy"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"dlimyy"},"content":"        String trimmedModuleCode \u003d moduleCode.strip();","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"dlimyy"},"content":"            throw new ParseException(ModuleCode.MODULE_CODE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"dlimyy"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"dlimyy"},"content":"     * Parses the priority status into a PriorityTag.","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"dlimyy"},"content":"     * @param priorityTag The priority status added to the tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"dlimyy"},"content":"     * @return The priorityTag object containing the priority status.","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"dlimyy"},"content":"     * @throws ParseException if the priority status is not valid.","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"dlimyy"},"content":"    public static PriorityTag parsePriorityTag(String priorityTag) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(priorityTag);","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"dlimyy"},"content":"        String trimmedPriorityStatus \u003d priorityTag.strip();","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"dlimyy"},"content":"        if (!PriorityTag.isValidTag(priorityTag)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"dlimyy"},"content":"            throw new ParseException(PriorityTag.PRIORITY_TAG_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"dlimyy"},"content":"        return new PriorityTag(trimmedPriorityStatus);","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"phualiting"},"content":"     * Parses a {@code String module} into a {@code Module}.","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"phualiting"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"phualiting"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"phualiting"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"phualiting"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"phualiting"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"phualiting"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"phualiting"},"content":"        if (!TaskModule.isValidModule(trimmedModule)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"phualiting"},"content":"            throw new ParseException(TaskModule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"phualiting"},"content":"        return new Module(new ModuleCode(trimmedModule));","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"phualiting"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"phualiting"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"phualiting"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"phualiting"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"phualiting"},"content":"    public static TaskDescription parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"phualiting"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"phualiting"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"phualiting"},"content":"        if (!TaskDescription.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"phualiting"},"content":"            throw new ParseException(TaskDescription.DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"phualiting"},"content":"        return new TaskDescription(trimmedDescription);","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"phualiting"},"content":"     * Parses a {@code String status} into a {@code TaskStatus}.","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"phualiting"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"phualiting"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"phualiting"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"phualiting"},"content":"    public static TaskStatus parseStatus(String status) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"phualiting"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"phualiting"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"phualiting"},"content":"        if (!TaskStatus.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"phualiting"},"content":"            throw new ParseException(TaskStatus.STATUS_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"phualiting"},"content":"        return TaskStatus.of(trimmedStatus);","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"phualiting":49,"dlimyy":34,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":" * Parses input arguments and creates a new UnmarkCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"     * and returns an UnmarkCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"tlx02":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.DistinctModuleList;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.DistinctTaskList;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    private final DistinctModuleList modules;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    private final DistinctTaskList tasks;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        modules \u003d new DistinctModuleList();","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        tasks \u003d new DistinctTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"dlimyy"},"content":"    public void addModule(Module mod) {","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"dlimyy"},"content":"        modules.addModule(mod);","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"phualiting"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"phualiting"},"content":"     * Returns true if a task with the same module and description as {@code task} exists in the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"phualiting"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"phualiting"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"phualiting"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"Sampy147"},"content":"    public boolean hasTaskWithModule(Module module) {","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"Sampy147"},"content":"        return tasks.containsModule(module);","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"phualiting"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"phualiting"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"dlimyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"dlimyy"},"content":"        tasks.addTask(task);","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"tlx02"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"tlx02"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"tlx02"},"content":"     * The task identity of {@code editedTask} must be the same as task identity of {@code target}.","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"tlx02"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"tlx02"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"tlx02"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"tlx02"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"tlx02"},"content":"     * @throws DuplicateTaskException if task identity of {@code editedTask} is the same as another task","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"tlx02"},"content":"     *     in the list (other than {@code target}).","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"tlx02"},"content":"    public void replaceTask(Task target, Task editedTask) throws DuplicateTaskException {","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"tlx02"},"content":"        tasks.replaceTask(target, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"phualiting"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"phualiting"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"Sampy147"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"Sampy147"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"Sampy147"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"Sampy147"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"dlimyy"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"dlimyy"},"content":"                + \"\\n\" + modules.getUnmodifiableModuleList().size() + \" modules\";","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":187,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the module list contains the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"dlimyy"},"content":"     * @param module The module that is being checked.","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"dlimyy"},"content":"     * @return true if the module list contains the module; else returns false.","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"dlimyy"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"dlimyy"},"content":"        return modules.containsModule(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"Sampy147"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"Sampy147"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"Sampy147"},"content":"     * {@code key} must not be tied to any tasks in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"Sampy147"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"Sampy147"},"content":"        modules.remove(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"dlimyy"},"content":"        return modules.getUnmodifiableModuleList();","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"Sampy147"},"content":"     * Replaces the given Module {@code target} with {@code editedModule}.","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"Sampy147"},"content":"     * {@code target} must exist in the module list.","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"Sampy147"},"content":"     * @throws DuplicateModuleException if module identity of {@code editedModule} is the same as another module","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"Sampy147"},"content":"     *     in the list (other than {@code target}).","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"Sampy147"},"content":"    public void replaceModule(Module target, Module editedModule) throws DuplicateModuleException {","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"Sampy147"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":221,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":222,"author":{"gitId":"Sampy147"},"content":"        modules.replaceModule(target, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":225,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"phualiting"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"dlimyy"},"content":"        return tasks.getUnmodifiableTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phualiting":25,"RachelChua":1,"tlx02":26,"Sampy147":36,"dlimyy":35,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"dlimyy"},"content":"    void addModule(Module module);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"dlimyy"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"phualiting"},"content":"     * Returns true if a task with the same description and module as {@code task} exists in the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"phualiting"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"     * Returns true if a task with {@code module} exists in the task list.","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"Sampy147"},"content":"    boolean hasTaskWithModule(Module module);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"phualiting"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"phualiting"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"phualiting"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"tlx02"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"tlx02"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"tlx02"},"content":"     * The task identity of {@code editedTask} must be the same as task identity of {@code target}.","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"tlx02"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"tlx02"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"tlx02"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"tlx02"},"content":"     * @throws DuplicateTaskException if task identity of {@code editedTask} is the same as another task","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"tlx02"},"content":"     *     in the list (other than {@code target}).","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"tlx02"},"content":"    void replaceTask(Task target, Task editedTask) throws DuplicateTaskException;","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"phualiting"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"phualiting"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"phualiting"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"Sampy147"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"Sampy147"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"Sampy147"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"Sampy147"},"content":"     * Deletes the given module.","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"Sampy147"},"content":"     * The module must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"Sampy147"},"content":"    void deleteModule(Module target);","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"Sampy147"},"content":"    void replaceModule(Module target, Module editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"RachelChua"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"phualiting"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"phualiting"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"Sampy147"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"phualiting":25,"RachelChua":1,"tlx02":17,"Sampy147":24,"dlimyy":5,"-":88}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    private final FilteredList\u003cModule\u003e moduleFilteredList;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    private final FilteredList\u003cTask\u003e taskFilteredList;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        moduleFilteredList \u003d new FilteredList\u003c\u003e(this.addressBook.getModuleList());","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        taskFilteredList \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"phualiting"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task List \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"phualiting"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"phualiting"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"phualiting"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"Sampy147"},"content":"    public boolean hasTaskWithModule(Module module) {","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"Sampy147"},"content":"        return addressBook.hasTaskWithModule(module);","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"phualiting"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"phualiting"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"phualiting"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"tlx02"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"tlx02"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"tlx02"},"content":"    public void replaceTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"tlx02"},"content":"        addressBook.replaceTask(target, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"Sampy147"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"Sampy147"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"dlimyy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dModule Commands\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"dlimyy"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"dlimyy"},"content":"        addressBook.addModule(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"dlimyy"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"dlimyy"},"content":"        return addressBook.hasModule(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"dlimyy"},"content":"        return moduleFilteredList;","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"Sampy147"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"Sampy147"},"content":"        moduleFilteredList.setPredicate(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"Sampy147"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"Sampy147"},"content":"    public void deleteModule(Module target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"Sampy147"},"content":"        addressBook.removeModule(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":210,"author":{"gitId":"Sampy147"},"content":"    public void replaceModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"Sampy147"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"Sampy147"},"content":"        addressBook.replaceModule(target, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"dlimyy"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dTask Commands\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":218,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":219,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"dlimyy"},"content":"        return taskFilteredList;","lastModifiedDate":"2022-10-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"phualiting"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"phualiting"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"phualiting"},"content":"        taskFilteredList.setPredicate(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phualiting":25,"RachelChua":1,"tlx02":14,"Sampy147":28,"dlimyy":19,"-":141}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"phualiting":7,"dlimyy":3,"-":17}},{"path":"src/main/java/seedu/address/model/module/DistinctModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":" * This class represents a list which contains Module objects which are distinct from","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":" * each other. Module Objects are distinct from each other when they have different module","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":" * codes.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"public class DistinctModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    private final ObservableList\u003cModule\u003e moduleList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    private final ObservableList\u003cModule\u003e unmodifiableModuleList \u003d FXCollections","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"            .unmodifiableObservableList(moduleList);","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the moduleList contains a Module with the same module code.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     * @param module The Module object being compared against.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * @return true if the Module object has the same module code as one of the","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     *         Module objects in the list; else return false","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    public boolean containsModule(Module module) {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        return moduleList.stream().anyMatch(module::isSameModuleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * Adds modules to the moduleList.","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     * @param moduleAdded The module which is being added.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    public void addModule(Module moduleAdded) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(moduleAdded);","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        if (containsModule(moduleAdded)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        moduleList.add(moduleAdded);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"        moduleList.setAll(modules);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"     * Removes the equivalent module from the module list.","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"     * The module must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"        if (!moduleList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"     * Replaces the given task {@code target} with {@code editedModule}.","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"     * {@code target} must exist in the module list.","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"     * @throws DuplicateModuleException if module identity of {@code editedModule} is the same as another module","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"     *     in the list (other than {@code target}).","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"    public void replaceModule(Module target, Module editedModule) throws DuplicateModuleException {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"        int index \u003d moduleList.indexOf(target);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"        if (containsModule(editedModule) \u0026\u0026 !editedModule.isSameModuleCode(target)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"        moduleList.set(index, editedModule);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"dlimyy"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"dlimyy"},"content":"        return moduleList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"dlimyy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"dlimyy"},"content":"        return moduleList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"dlimyy"},"content":"    public boolean equals(Object otherMod) {","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"dlimyy"},"content":"        return otherMod \u003d\u003d this","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"                || (otherMod instanceof DistinctModuleList","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"dlimyy"},"content":"                \u0026\u0026 moduleList.equals(((DistinctModuleList) otherMod).moduleList));","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cModule\u003e getUnmodifiableModuleList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"dlimyy"},"content":"        return unmodifiableModuleList;","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Sampy147":32,"dlimyy":74}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import seedu.address.logic.commands.EditModuleCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * Module class represents a Module being taken.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"public class Module {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the Module class.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * Module code must be present.","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * @param moduleCode The module code of the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    public Module(ModuleCode moduleCode) {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * Checks whether two modules have the same module code.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     * @param otherModule The other module being compared against.","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"     * @return true if the two Module objects have the same module code;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"     *         else return false","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    public boolean isSameModuleCode(Module otherModule) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        if (otherModule \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        return otherModule \u003d\u003d this || otherModule.moduleCode.equals(this.moduleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"     * Creates and returns a {@code Module} with the details of {@code this}","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"     * edited with {@code editModuleDescriptor}.","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"    public Module edit(EditModuleCommand.EditModuleDescriptor editModuleDescriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(editModuleDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"        ModuleCode updatedModuleCode \u003d editModuleDescriptor.getModuleCode().orElse(this.moduleCode);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"        return new Module(updatedModuleCode);","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"phualiting"},"content":"    public boolean equals(Object otherModule) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"phualiting"},"content":"        return otherModule \u003d\u003d this || (otherModule instanceof Module","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"phualiting"},"content":"                \u0026\u0026 isSameModuleCode((Module) otherModule));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"phualiting"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"phualiting"},"content":"        return getModuleCode().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"phualiting":11,"Sampy147":14,"dlimyy":40}},{"path":"src/main/java/seedu/address/model/module/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * ModuleCode represents the module code of the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class ModuleCode {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    public static final String MODULE_CODE_CONSTRAINTS \u003d \"Module code should be at least 6 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"            + \"characters long, with first two characters \"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"            + \"being alphabetic characters\";","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z]{2}[A-Za-z0-9]*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     * The constructor of the ModuleCode class which stores","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * the module code of the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     * @param moduleCode The module code of the module.","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"        checkArgument(isValidModuleCode(moduleCode), MODULE_CODE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    public static boolean isValidModuleCode(String testModuleCode) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        return testModuleCode.matches(VALIDATION_REGEX) \u0026\u0026 testModuleCode.length() \u003e\u003d 6;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"        return obj \u003d\u003d this || (obj instanceof ModuleCode","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"                \u0026\u0026 moduleCode.equalsIgnoreCase((((ModuleCode) obj).moduleCode)));","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":49}},{"path":"src/main/java/seedu/address/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":" * DuplicateModuleException class represents an exception that there","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":" * are duplicate modules being added.","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"        super(\"This would result in duplicate modules being added.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":11}},{"path":"src/main/java/seedu/address/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":" * Signals that the operation is unable to find the specified module.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"public class ModuleNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":6}},{"path":"src/main/java/seedu/address/model/tag/PriorityTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * Priority Tag represents a tag which contains the priority status of the task.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class PriorityTag {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    public static final String PRIORITY_TAG_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"            \"Priority status of tag should only be HIGH, MEDIUM or LOW\";","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"    public static final String VALIDATION_REGEX \u003d \"high|low|medium\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    public final String status;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the priority tag. Sets the priority","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * status to the tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param status The priority status of the tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public PriorityTag(String status) {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        checkArgument(isValidTag(status), PRIORITY_TAG_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     * Checks whether the priority status in the tag is valid.","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @param testTag The tag that is being checked.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     * @return true if the priority status is valid; else return false.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    public static boolean isValidTag(String testTag) {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        if (testTag \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        String testTagStatus \u003d testTag.toLowerCase();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        return testTagStatus.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    public boolean equals(Object otherTag) {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        return otherTag \u003d\u003d this || (otherTag instanceof PriorityTag","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"                \u0026\u0026 status.equalsIgnoreCase((((PriorityTag) otherTag).status)));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        return status;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"        return status.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dlimyy":56}},{"path":"src/main/java/seedu/address/model/tag/exceptions/PriorityTagAlreadyExistsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":" * PriorityTagAlreadyExistsException is an exception which is","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":" * thrown when the task already contains the priority status.","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"public class PriorityTagAlreadyExistsException extends RuntimeException {","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    public PriorityTagAlreadyExistsException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"        super(\"The priority status already exists for the task.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dlimyy":11}},{"path":"src/main/java/seedu/address/model/task/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":" * Tests that a {@code Task}\u0027s {@code TaskDescription} matches any of the keywords given.","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsPartialWord(task.getDescription().description, keyword));","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"                || (other instanceof DescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"                \u0026\u0026 keywords.equals(((DescriptionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"RachelChua"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"RachelChua"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":30}},{"path":"src/main/java/seedu/address/model/task/DistinctTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.exceptions.TaskIdentityModifiedException;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":" * This class represents a list which contains Tasks objects which are distinct from","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":" * each other. Tasks are distinct from each other when they have different descriptions and","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":" * module codes.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"public class DistinctTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    public final ObservableList\u003cTask\u003e taskList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    public final ObservableList\u003cTask\u003e unmodifiableTaskList \u003d FXCollections","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"            .unmodifiableObservableList(taskList);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"        return taskList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"     * Returns true if the list contains a task with an equivalent module as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"    public boolean containsModule(Module toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"        return taskList.stream().map(Task::getModule).anyMatch(toCheck::isSameModuleCode);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     * Adds the task to the taskList.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"phualiting"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"     * @param taskAdded The task to be added.","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"    public void addTask(Task taskAdded) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(taskAdded);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"        //Might have to add address book as param to check if addressBook already has module","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"phualiting"},"content":"        if (contains(taskAdded)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"        taskList.add(taskAdded);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"tlx02"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"tlx02"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"tlx02"},"content":"     * The task identity of {@code editedTask} should be the same as task identity of {@code target}.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"tlx02"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"tlx02"},"content":"        int index \u003d taskList.indexOf(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"tlx02"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"tlx02"},"content":"        if (!target.isSameTask(editedTask)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"tlx02"},"content":"            throw new TaskIdentityModifiedException();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"tlx02"},"content":"        taskList.set(index, editedTask);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"tlx02"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"tlx02"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"tlx02"},"content":"     * @throws DuplicateTaskException if task identity of {@code editedTask} is the same as another task","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"tlx02"},"content":"     *     in the list (other than {@code target}).","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"tlx02"},"content":"    public void replaceTask(Task target, Task editedTask) throws DuplicateTaskException {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"tlx02"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"tlx02"},"content":"        int index \u003d taskList.indexOf(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"tlx02"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"tlx02"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"tlx02"},"content":"        if (contains(editedTask) \u0026\u0026 !editedTask.isSameTask(target)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"tlx02"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"tlx02"},"content":"        taskList.set(index, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"     * Removes the equivalent task from the tasklist.","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"Sampy147"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"Sampy147"},"content":"        if (!taskList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"Sampy147"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"dlimyy"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"dlimyy"},"content":"        return taskList.iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"dlimyy"},"content":"    public boolean equals(Object otherTask) {","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"dlimyy"},"content":"        return otherTask \u003d\u003d this","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"dlimyy"},"content":"                || (otherTask instanceof DistinctTaskList","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"dlimyy"},"content":"                \u0026\u0026 taskList.equals(((DistinctTaskList) otherTask).taskList));","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"dlimyy"},"content":"    public ObservableList\u003cTask\u003e getUnmodifiableTaskList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"dlimyy"},"content":"        return unmodifiableTaskList;","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"dlimyy"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(tasks);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"dlimyy"},"content":"        taskList.setAll(tasks);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"phualiting":13,"tlx02":42,"Sampy147":20,"dlimyy":54}},{"path":"src/main/java/seedu/address/model/task/FilterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":" * Tests that a {@code Task} fulfils the given predicate.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"public class FilterPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"    private final Optional\u003cModule\u003e moduleToCheck;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"    private final Optional\u003cTaskStatus\u003e statusToCheck;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"     * Tests that a {@code Task} matches all the module and status constraints given.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"     * @param module check if task has same module code.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"     * @param status check if task has same status.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"    public FilterPredicate(Optional\u003cModule\u003e module, Optional\u003cTaskStatus\u003e status) {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"        this.moduleToCheck \u003d module;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"        this.statusToCheck \u003d status;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"    public Module getModuleToCheck() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"        return moduleToCheck.get();","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"    public boolean hasModuleToCheck() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"        return moduleToCheck.isPresent();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"phualiting"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"        if (moduleToCheck.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"            result \u0026\u003d task.getModule().equals(moduleToCheck.get());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"        if (statusToCheck.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"            result \u0026\u003d task.getStatus().equals(statusToCheck.get());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"        return result;","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"phualiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"                || (other instanceof FilterPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"phualiting"},"content":"                \u0026\u0026 moduleToCheck.equals(((FilterPredicate) other).moduleToCheck)","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"phualiting"},"content":"                \u0026\u0026 statusToCheck.equals(((FilterPredicate) other).statusToCheck)); // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"phualiting"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"phualiting"},"content":"        if (moduleToCheck.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"phualiting"},"content":"            result +\u003d \" Module: \" + moduleToCheck.get();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"phualiting"},"content":"        if (statusToCheck.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"phualiting"},"content":"            result +\u003d \" Status: \" + statusToCheck.get();","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"phualiting"},"content":"        return result;","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"phualiting":64}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.tag.exceptions.PriorityTagAlreadyExistsException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" * Task class represents a task which stores the module code and the","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":" * description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"public class Task {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"    private final Module module;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    private final TaskDescription description;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    private final PriorityTag priorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    private final TaskStatus status;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     * The constructor of the Task class. Sets the module and","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * @param module The module being added.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    public Task(Module module, TaskDescription description) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"        this.status \u003d TaskStatus.INCOMPLETE;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        priorityTag \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"     * The constructor of the Task class. Sets the module and","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"     * description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"     * @param module The module being added.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"    public Task(Module module, TaskDescription description, TaskStatus status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        priorityTag \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"     * The constructor of the Task class. Sets the module, description,","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * completion status and the priority status of the task.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     * @param module The module being set.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     * @param description The description being set.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"     * @param status The completion status of the task.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"     * @param priorityTag The tag marking the priority status of the task.","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"    public Task(Module module, TaskDescription description, TaskStatus status, PriorityTag priorityTag) {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"        this.priorityTag \u003d priorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"phualiting"},"content":"        return description;","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"    public Module getModule() {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"        return module;","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"tlx02"},"content":"    public TaskStatus getStatus() {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"tlx02"},"content":"        return status;","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"phualiting"},"content":"     * Returns true if both tasks have the same data fields.","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"phualiting"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"phualiting"},"content":"        return this.equals(otherTask);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"tlx02"},"content":"     * Returns true if task is complete.","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"tlx02"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"tlx02"},"content":"        return this.status.isComplete();","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"tlx02"},"content":"     * Marks the task as complete","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"tlx02"},"content":"     * and returns the task.","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"tlx02"},"content":"    public Task mark() {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"dlimyy"},"content":"        return new Task(module, description, TaskStatus.COMPLETE, priorityTag);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"dlimyy"},"content":"    public Task setPriorityTag(PriorityTag tag) {","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"dlimyy"},"content":"        if (priorityTag !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"dlimyy"},"content":"            throw new PriorityTagAlreadyExistsException();","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"dlimyy"},"content":"        return new Task(module, description, status, tag);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"dlimyy"},"content":"    public boolean hasPriorityTag() {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"dlimyy"},"content":"        return priorityTag !\u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"dlimyy"},"content":"    public PriorityTag getPriorityTag() {","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"dlimyy"},"content":"        return priorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"tlx02"},"content":"     * Unmarks (labels as incomplete) the task","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"tlx02"},"content":"     * and returns the task.","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"tlx02"},"content":"    public Task unmark() {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"tlx02"},"content":"        return new Task(module, description, TaskStatus.INCOMPLETE);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"tlx02"},"content":"     * Creates and returns a {@code Task} with the details of {@code this}","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"tlx02"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"tlx02"},"content":"    public Task edit(EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"tlx02"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"tlx02"},"content":"        Module updatedModule \u003d editTaskDescriptor.getModule().orElse(module);","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"tlx02"},"content":"        TaskDescription updatedDescription \u003d editTaskDescriptor.getDescription().orElse(description);","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"tlx02"},"content":"        return new Task(updatedModule, updatedDescription, status);","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"phualiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"phualiting"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"phualiting"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"phualiting"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"phualiting"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"phualiting"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"phualiting"},"content":"        return otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"tlx02"},"content":"                \u0026\u0026 otherTask.getModule().equals(getModule());","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"phualiting"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"phualiting"},"content":"        return Objects.hash(description, module);","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"phualiting"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"phualiting"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"phualiting"},"content":"        builder.append(getModule())","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"phualiting"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"phualiting"},"content":"                .append(getDescription());","lastModifiedDate":"2022-10-06"},{"lineNumber":162,"author":{"gitId":"phualiting"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"phualiting":53,"tlx02":56,"dlimyy":55}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":" * TaskDescription class represents the description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"public class TaskDescription {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"    public static final String DESCRIPTION_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"            \"The description of the task should not be empty\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    public final String description;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"     * The constructor of the TaskDescription class. Sets the","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"     * description of the class.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"     * @param description The description of the class.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        checkArgument(isValidDescription(description), DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"    public static boolean isValidDescription(String description) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        return description.length() \u003e 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    public boolean equals(Object otherDescription) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        return otherDescription \u003d\u003d this || (otherDescription instanceof TaskDescription","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"                \u0026\u0026 description.equalsIgnoreCase((((TaskDescription) otherDescription).description)));","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        return description.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        return description;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"dlimyy":48}},{"path":"src/main/java/seedu/address/model/task/TaskModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":" * TaskModule class represents the module of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"public class TaskModule {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"            \"Module code should be at least 6 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"                    + \"characters long, with first two characters \"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"                    + \"being alphabetic characters\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z]{2}[A-Za-z0-9]*\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"     * @param module A valid module.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"    public TaskModule(String module) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"phualiting"},"content":"        moduleCode \u003d module;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"phualiting"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"phualiting"},"content":"     * Returns true if a given string is a valid module.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"phualiting"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"phualiting"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003e\u003d 6;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"phualiting"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"phualiting"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"phualiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"phualiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"phualiting"},"content":"                || (other instanceof TaskModule // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"phualiting"},"content":"                \u0026\u0026 moduleCode.equals(((TaskModule) other).moduleCode)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"phualiting"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"phualiting"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"phualiting":57}},{"path":"src/main/java/seedu/address/model/task/TaskStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":" * TaskStatus class represents the status of the task - whether it is complete.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"public class TaskStatus {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"    private static final String COMPLETE_STRING \u003d \"complete\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":"    private static final String INCOMPLETE_STRING \u003d \"incomplete\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"    public static final TaskStatus COMPLETE \u003d new TaskStatus(COMPLETE_STRING);","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"    public static final TaskStatus INCOMPLETE \u003d new TaskStatus(INCOMPLETE_STRING);","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"    public static final String STATUS_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"        \"The status of the task should be \" + COMPLETE + \" or \" + INCOMPLETE;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    public final String status;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"    private TaskStatus(String status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"        requireNonNull(status);","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"        checkArgument(isValidStatus(status), STATUS_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"     * Constructs a {@code TaskStatus}.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"     * It is either complete or incomplete.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"     * @param status A valid status.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"    public static TaskStatus of(String status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"        if (status.equals(COMPLETE_STRING)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"            return COMPLETE;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"            return INCOMPLETE;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"     * Returns true if the given string is a valid status,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"     * false otherwise.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"     * @param status string representation of a status.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"     * @return true if the given string is a valid status, false otherwise.","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"tlx02"},"content":"    public static boolean isValidStatus(String status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"tlx02"},"content":"        return status.equals(COMPLETE_STRING) || status.equals(INCOMPLETE_STRING);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"tlx02"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"tlx02"},"content":"     * Returns true if task status is \"complete\",","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"tlx02"},"content":"     * false otherwise.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"tlx02"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"tlx02"},"content":"     * @return true if task status is \"complete\".","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"tlx02"},"content":"    public boolean isComplete() {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"tlx02"},"content":"        return status.equals(COMPLETE_STRING);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"tlx02"},"content":"    public boolean equals(Object otherStatus) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"tlx02"},"content":"        return otherStatus \u003d\u003d this || (otherStatus instanceof TaskStatus","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"tlx02"},"content":"            \u0026\u0026 status.equalsIgnoreCase((((TaskStatus) otherStatus).status)));","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"tlx02"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"tlx02"},"content":"        return status.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"tlx02"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"tlx02"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"        return status;","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"tlx02":79}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"phualiting"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":" * Signals that the operation will result in duplicate Task (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":" * module and description).","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"phualiting":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskIdentityModifiedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":" * Signals that the operation will modify the identity of the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"public class TaskIdentityModifiedException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"    public TaskIdentityModifiedException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"        super(\"Operation would change task identity\");","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"tlx02":10}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"tlx02":7,"Sampy147":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" * This class represents a Jackson friendly version of {@link Module}.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"public class JsonAdaptedModule {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    public static final String MISSING_MODULE_MESSAGE_FORMAT \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"            \"Module\u0027s code field is not present\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    public JsonAdaptedModule(@JsonProperty(\"modCode\") String moduleCode) {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    public JsonAdaptedModule(Module mod) {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"        moduleCode \u003d mod.getModuleCode().moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * Converts this Jackson-friendly module object into a Module Object.","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"     * @return The Module Object which is created.","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"     * @throws IllegalValueException If moduleCode is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"            throw new IllegalValueException(MISSING_MODULE_MESSAGE_FORMAT);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            throw new IllegalValueException(ModuleCode.MODULE_CODE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"        final ModuleCode modCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"        return new Module(modCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":42}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.tag.PriorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.task.TaskStatus;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":" * This class represents a Jackson friendly version of the Task.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    public static final String MISSING_TASK_DESCRIPTION \u003d \"Task description is not present\";","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    private final String description;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"    private final String status;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    private final String priority;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * Builds a {@code JsonAdaptedTask} with the description and module code.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * @param description The description of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     * @param moduleCode The module code of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    public JsonAdaptedTask(@JsonProperty(\"description\") String description,","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"            @JsonProperty(\"modCode\") String moduleCode, @JsonProperty(\"status\") String status,","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"            @JsonProperty(\"priority\") String priority) {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     * Converts an existing task into {@code JsonAdaptedTask} object","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     * @param task The task object being converted.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"    public JsonAdaptedTask(Task task) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        description \u003d task.getDescription().description;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        moduleCode \u003d task.getModule().getModuleCode().moduleCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"        status \u003d task.getStatus().status;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"        priority \u003d task.getPriorityTag() \u003d\u003d null ? null : task.getPriorityTag().status;","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"     * Converts this Jackson-friendly task object into a Task object for the model.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"     * @return The Task object which has been created.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"     * @throws IllegalValueException if the task has invalid fields.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"tlx02"},"content":"        if (description \u003d\u003d null || moduleCode \u003d\u003d null || status \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"            throw new IllegalValueException(MISSING_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"        if (!TaskDescription.isValidDescription(description)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"            throw new IllegalValueException(TaskDescription.DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"dlimyy"},"content":"        if (!ModuleCode.isValidModuleCode(moduleCode)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"            throw new IllegalValueException(ModuleCode.MODULE_CODE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"tlx02"},"content":"        if (!TaskStatus.isValidStatus(status)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"            throw new IllegalValueException(TaskStatus.STATUS_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"        if (!PriorityTag.isValidTag(priority)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"            throw new IllegalValueException(PriorityTag.PRIORITY_TAG_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"dlimyy"},"content":"        final TaskDescription taskDescription \u003d new TaskDescription(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"dlimyy"},"content":"        final ModuleCode modCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"dlimyy"},"content":"        final Module module \u003d new Module(modCode);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"        final TaskStatus taskStatus \u003d TaskStatus.of(status);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"dlimyy"},"content":"        final PriorityTag priorityTag \u003d priority \u003d\u003d null ? null : new PriorityTag(priority);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"dlimyy"},"content":"        return new Task(module, taskDescription, taskStatus, priorityTag);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"tlx02":10,"dlimyy":71}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    public static final String MESSAGE_MODULE_NOT_PRESENT \u003d \"This module does not exist\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"There are duplicate module(s) \"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"            + \"present in the module list\";","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"            @JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules) {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"        for (JsonAdaptedModule jsonAdaptedModule: modules) {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"            if (addressBook.hasModule(module)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"dlimyy"},"content":"            addressBook.addModule(module);","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"        for (JsonAdaptedTask jsonAdaptedTask: tasks) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"dlimyy"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"            if (!addressBook.hasModule(task.getModule())) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"dlimyy"},"content":"                throw new IllegalValueException(MESSAGE_MODULE_NOT_PRESENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"dlimyy"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dlimyy":26,"-":50}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"    private StackPane moduleListPanelPlaceholder;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"dlimyy"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"dlimyy"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"dlimyy"},"content":"        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"dlimyy"},"content":"        moduleListPanelPlaceholder.getChildren().add(moduleListPanel.getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"dlimyy":13,"-":190}},{"path":"src/main/java/seedu/address/ui/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":" * ModuleCard class represents a module card which contains the details of","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":" * the module card.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"    private static final String FXML \u003d \"ModuleListCard.fxml\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"    private Label id;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * The constructor of ModuleCard. Sets the id and module","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     * code fields with their values.","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     * @param module The module whose module code is being set.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"     * @param position The position of the module in the module list.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    public ModuleCard(Module module, int position) {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        super(FXML);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"        id.setText(position + \". \");","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"        moduleCode.setText(module.getModuleCode().moduleCode);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":33}},{"path":"src/main/java/seedu/address/ui/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" * ModuleListPanel class represents a panel which contains a list of all","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" * the module card.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    private static final String FXML \u003d \"ModuleListPanel.fxml\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    private ListView\u003cModule\u003e moduleListView;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     * The constructor of the ModuleListPanel. Sets the list of modules","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * to the ListView.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * @param moduleList","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        super(FXML);","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    static class ModuleListViewCell extends ListCell\u003cModule\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        protected void updateItem(Module module, boolean empty) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"                setText(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"            } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"                setGraphic(new ModuleCard(module, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":46}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import javafx.scene.control.CheckBox;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" * TaskCard represents a Task Card which contains details of the Task and the position in the","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" * listView.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"    public final Task task;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    private Label id;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"    private Label description;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"    private CheckBox isComplete;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    private Button priorityTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the TaskCard. Sets the task and the position.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"     * @param task The task being set.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     * @param position The position of the task in the listView.","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"    public TaskCard(Task task, int position) {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"        super(FXML);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        id.setText(position + \". \");","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"        moduleCode.setText(task.getModule().getModuleCode().moduleCode);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"        isComplete.setSelected(task.isComplete());","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"        if (task.getPriorityTag() !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dlimyy"},"content":"            priorityTag.setText(task.getPriorityTag().status);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"            priorityTag.setVisible(true);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"tlx02":9,"dlimyy":43}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":" * TaskListPanel is a panel which represents the list of tasks.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"     * Constructor of the TaskListPanel. Sets the list of tasks","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     * to the ListView","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"     * @param tasks The list of tasks which will be set.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"        super(FXML);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"        taskListView.setItems(tasks);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"    static class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"                setText(null);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"dlimyy"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"dlimyy"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"dlimyy":45}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"         title\u003d\"Address App\" minWidth\u003d\"900\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"dlimyy"},"content":"        \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"350\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"dlimyy"},"content":"            \u003cInsets top\u003d\"15\" right\u003d\"7\" bottom\u003d\"15\" left\u003d\"7\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"dlimyy"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"dlimyy"},"content":"          \u003cVBox fx:id\u003d\"moduleList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"350\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"dlimyy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"              \u003cInsets top\u003d\"15\" right\u003d\"7\" bottom\u003d\"15\" left\u003d\"7\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"dlimyy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"            \u003cStackPane fx:id\u003d\"moduleListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"dlimyy"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"dlimyy"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"dlimyy":12,"-":56}},{"path":"src/main/resources/view/ModuleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" style\u003d\"-fx-background-color:         #6cd2d2; -fx-border-color:black; \" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dlimyy"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"7\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"                \u003cLabel fx:id\u003d\"moduleCode\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$module\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"dlimyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":29}},{"path":"src/main/resources/view/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"    \u003cListView fx:id\u003d\"moduleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dlimyy":9}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"\u003c?import javafx.scene.control.CheckBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"            \u003cCheckBox fx:id\u003d\"completed\" alignment\u003d\"CENTER\" contentDisplay\u003d\"GRAPHIC_ONLY\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"18.0\" prefWidth\u003d\"16.0\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"            \u003c/CheckBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tlx02":14,"-":32}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"dlimyy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"dlimyy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"dlimyy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" style\u003d\"-fx-background-color: #ADD3FF; -fx-border-color: black;\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"dlimyy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"dlimyy"},"content":"            \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dlimyy"},"content":"                \u003cButton fx:id\u003d\"priorityTag\" focusTraversable\u003d\"false\" mouseTransparent\u003d\"true\" style\u003d\"-fx-background-color: #D0F4FF; -fx-border-color: black; -fx-border-radius: 5; -fx-text-fill: black; -fx-background-radius: 5;\" textFill\u003d\"black\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"dlimyy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"dlimyy"},"content":"                    \u003cInsets top\u003d\"5\" left\u003d\"5\" right\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"dlimyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"            \u003cHBox alignment\u003d\"CENTER_RIGHT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dlimyy"},"content":"                \u003cCheckBox fx:id\u003d\"isComplete\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"18.0\" prefWidth\u003d\"7.0\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"dlimyy"},"content":"                    \u003cInsets top\u003d\"15\" left\u003d\"5\" right\u003d\"25\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dlimyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"7\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"dlimyy"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"dlimyy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"dlimyy"},"content":"                \u003cLabel fx:id\u003d\"description\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"dlimyy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"dlimyy"},"content":"            \u003cLabel fx:id\u003d\"moduleCode\" text\u003d\"\\$modCode\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"dlimyy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"tlx02":5,"dlimyy":37}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dlimyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"dlimyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"dlimyy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"dlimyy"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"dlimyy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"dlimyy":9}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"phualiting"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"phualiting"},"content":"    */","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"phualiting"},"content":"    */","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"phualiting":14,"-":152}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"phualiting"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"phualiting":5,"dlimyy":1,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":98,"author":{"gitId":"phualiting"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"dlimyy"},"content":"            throw new AssertionError(\"This method should not even be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"dlimyy"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"dlimyy"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"phualiting"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"Sampy147"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"Sampy147"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"Sampy147"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"dlimyy"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"dlimyy"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"dlimyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"phualiting"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"phualiting"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"phualiting"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"phualiting"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"phualiting"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"phualiting"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"phualiting"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"phualiting"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"phualiting"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"tlx02"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"tlx02"},"content":"        public void setTask(Task task, Task editedTask) {","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"tlx02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"Sampy147"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"Sampy147"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"Sampy147"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"Sampy147"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"Sampy147"},"content":"        public void deleteModule(Module target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"Sampy147"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"Sampy147"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"Sampy147"},"content":"        public boolean hasTaskWithModule(Module module) {","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"Sampy147"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"tlx02"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"tlx02"},"content":"        public void replaceTask(Task task, Task editedTask) {","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"tlx02"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"tlx02"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"Sampy147"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"Sampy147"},"content":"        public void replaceModule(Module module, Module editedModule) {","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"Sampy147"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"Sampy147"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"phualiting"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"phualiting":17,"tlx02":11,"Sampy147":24,"dlimyy":9,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"//    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"phualiting"},"content":"//    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"phualiting"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"phualiting"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"phualiting"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"phualiting"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"//    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"phualiting"},"content":"//    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"phualiting"},"content":"//        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"phualiting"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"//        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"phualiting"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"phualiting"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"phualiting"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"phualiting":25,"-":7}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"RachelChua"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"RachelChua"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RachelChua":2,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dlimyy":6,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":" * {@code DeleteModuleCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"public class DeleteModuleCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"        Module moduleToDelete \u003d model.getFilteredModuleList().get(INDEX_FIRST_MODULE.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"        DeleteModuleCommand deleteModuleCommand \u003d new DeleteModuleCommand(INDEX_FIRST_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"        String expectedMessage \u003d String.format(DeleteModuleCommand.MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"        expectedModel.deleteModule(moduleToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"        assertCommandSuccess(deleteModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredModuleList().size() + 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"        DeleteModuleCommand deleteModuleCommand \u003d new DeleteModuleCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"        assertCommandFailure(deleteModuleCommand, model, Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"        showModuleAtIndex(model, INDEX_FIRST_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MODULE;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getModuleList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"        DeleteModuleCommand deleteModuleCommand \u003d new DeleteModuleCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"        assertCommandFailure(deleteModuleCommand, model, Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"        DeleteModuleCommand deleteModuleFirstCommand \u003d new DeleteModuleCommand(INDEX_FIRST_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"        DeleteModuleCommand deleteModuleSecondCommand \u003d new DeleteModuleCommand(INDEX_SECOND_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"        assertTrue(deleteModuleFirstCommand.equals(deleteModuleFirstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"        DeleteModuleCommand deleteModuleFirstCommandCopy \u003d new DeleteModuleCommand(INDEX_FIRST_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"        assertTrue(deleteModuleFirstCommand.equals(deleteModuleFirstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"        assertFalse(deleteModuleFirstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"        assertFalse(deleteModuleFirstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"        assertFalse(deleteModuleFirstCommand.equals(deleteModuleSecondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"    */","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"        model.updateFilteredModuleList(p -\u003e false);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"        assertTrue(model.getFilteredModuleList().isEmpty());","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"    */","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":102}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Sampy147"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Sampy147"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Sampy147"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Sampy147"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Sampy147"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Sampy147"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Sampy147"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Sampy147"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Sampy147"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Sampy147"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Sampy147"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Sampy147"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Sampy147"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Sampy147"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Sampy147"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Sampy147"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Sampy147"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Sampy147"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Sampy147"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Sampy147"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Sampy147"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Sampy147"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Sampy147"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Sampy147"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Sampy147"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Sampy147"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"Sampy147"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Sampy147"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Sampy147"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Sampy147"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"Sampy147"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Sampy147"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Sampy147"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Sampy147"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Sampy147"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Sampy147"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Sampy147"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Sampy147"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Sampy147"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"Sampy147"},"content":"        DeleteTaskCommand deleteTaskFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Sampy147"},"content":"        DeleteTaskCommand deleteTaskSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Sampy147"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Sampy147"},"content":"        assertTrue(deleteTaskFirstCommand.equals(deleteTaskFirstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"Sampy147"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Sampy147"},"content":"        DeleteTaskCommand deleteTaskFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Sampy147"},"content":"        assertTrue(deleteTaskFirstCommand.equals(deleteTaskFirstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Sampy147"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Sampy147"},"content":"        assertFalse(deleteTaskFirstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"Sampy147"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"Sampy147"},"content":"        assertFalse(deleteTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Sampy147"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"Sampy147"},"content":"        assertFalse(deleteTaskFirstCommand.equals(deleteTaskSecondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"Sampy147"},"content":"    */","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"Sampy147"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"Sampy147"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"Sampy147"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"Sampy147"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"Sampy147"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"Sampy147"},"content":"    */","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"Sampy147"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"Sampy147"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Sampy147":100}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"dlimyy":14,"-":166}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"phualiting":6,"-":16}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"RachelChua"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"RachelChua"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":5,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/FindTasksCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.task.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"///**","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"// */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"//public class FindTasksCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"//    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"//    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"RachelChua"},"content":"//        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"RachelChua"},"content":"//                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"RachelChua"},"content":"//        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"RachelChua"},"content":"//                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"RachelChua"},"content":"//        FindTasksCommand findTaskFirstCommand \u003d new FindTasksCommand(firstPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"RachelChua"},"content":"//        FindTasksCommand findTaskSecondCommand \u003d new FindTasksCommand(secondPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"RachelChua"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"RachelChua"},"content":"//        assertTrue(findTaskFirstCommand.equals(findTaskFirstCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"RachelChua"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"RachelChua"},"content":"//        FindTasksCommand findTaskFirstCommandCopy \u003d new FindTasksCommand(firstPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"RachelChua"},"content":"//        assertTrue(findTaskFirstCommand.equals(findTaskFirstCommandCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"RachelChua"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"RachelChua"},"content":"//        assertFalse(findTaskFirstCommand.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"RachelChua"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"RachelChua"},"content":"//        assertFalse(findTaskFirstCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"RachelChua"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"RachelChua"},"content":"//        assertFalse(findTaskFirstCommand.equals(findTaskSecondCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"RachelChua"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"RachelChua"},"content":"//    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"RachelChua"},"content":"//    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"RachelChua"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"RachelChua"},"content":"//        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"RachelChua"},"content":"//        FindTasksCommand command \u003d new FindTasksCommand(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"RachelChua"},"content":"//        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"RachelChua"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"RachelChua"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"RachelChua"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"RachelChua"},"content":"//    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"RachelChua"},"content":"//     * Parses {@code userInput} into a {@code DescriptionContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"RachelChua"},"content":"//     */","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"RachelChua"},"content":"//    private DescriptionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"RachelChua"},"content":"//        return new DescriptionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"RachelChua"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"RachelChua"},"content":"//}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":72}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"phualiting"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"phualiting"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"phualiting"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"phualiting":6,"-":16}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"phualiting"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"phualiting"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"phualiting":3,"dlimyy":1,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ListTasksCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RachelChua"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"RachelChua"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"RachelChua"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"RachelChua"},"content":"////import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"RachelChua"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"RachelChua"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"RachelChua"},"content":"///**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"RachelChua"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListTaskCommand.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"RachelChua"},"content":"// */","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"RachelChua"},"content":"//public class ListTasksCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"RachelChua"},"content":"//    private Model model;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"RachelChua"},"content":"//    private Model expectedModel;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"RachelChua"},"content":"//    @BeforeEach","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"RachelChua"},"content":"//    public void setUp() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"RachelChua"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"RachelChua"},"content":"//        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"RachelChua"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"RachelChua"},"content":"//    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"RachelChua"},"content":"//    public void execute_listTaskIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"RachelChua"},"content":"//        assertCommandSuccess(new ListTasksCommand(), model, ListTasksCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"RachelChua"},"content":"//    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"RachelChua"},"content":"//","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"RachelChua"},"content":"//}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"RachelChua":33}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tlx02"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"tlx02"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"tlx02"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"tlx02"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"tlx02"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"tlx02"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"tlx02"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"tlx02"},"content":"class MarkCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"tlx02"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"tlx02"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"tlx02"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"tlx02"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"tlx02"},"content":"        Task taskToMark \u003d model.getFilteredTaskList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"tlx02"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"tlx02"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_TASK_SUCCESS, taskToMark);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"tlx02"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"tlx02"},"content":"        Task editedTaskToMark \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"tlx02"},"content":"        editedTaskToMark.mark();","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"tlx02"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"tlx02"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"tlx02"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"tlx02"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"tlx02"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"tlx02"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"tlx02"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"tlx02"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"tlx02"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"tlx02"},"content":"        Person personToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"tlx02"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"tlx02"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_TASK_SUCCESS, personToMark);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"tlx02"},"content":"        ModelManager expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"tlx02"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"tlx02"},"content":"        Person editedPersonToMark \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"tlx02"},"content":"        editedPersonToMark.mark();","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"tlx02"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"tlx02"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"tlx02"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"tlx02"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"tlx02"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"tlx02"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"tlx02"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"tlx02"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"tlx02"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"tlx02"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"tlx02"},"content":"    public void equals() {","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"tlx02"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"tlx02"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"tlx02"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"tlx02"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"tlx02"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"tlx02"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"tlx02"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"tlx02"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"tlx02"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"tlx02"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"tlx02"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"tlx02"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"tlx02"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"tlx02"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"tlx02"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"tlx02"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"tlx02"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"tlx02":92}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"phualiting"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"phualiting"},"content":"//import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"phualiting"},"content":"//import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"dlimyy"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"phualiting"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"phualiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"phualiting"},"content":"@@ -54,6 +54,7 @@ public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"dlimyy"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"dlimyy"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"dlimyy"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"dlimyy"},"content":"            return modules;","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"dlimyy"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"phualiting"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"phualiting"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"phualiting"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"dlimyy"},"content":"            return null;","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"phualiting"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"phualiting":10,"dlimyy":11,"-":82}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":91,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"dlimyy":2,"-":127}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dlimyy":2,"-":105}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"dlimyy"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"dlimyy"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dlimyy":6,"-":37}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"dlimyy"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"dlimyy"},"content":"        /*","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"dlimyy"},"content":"         */","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dlimyy":3,"-":65}}]
