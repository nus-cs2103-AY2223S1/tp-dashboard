[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003dLJBYLUBLCM)](https://codecov.io/gh/AY2223S1-CS2103T-T13-4/tp)","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"# TaskBook","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"* This is project by Software Engineering (SE) students designed for anyone to efficiently manage contacts and tasks.\u003cbr\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"  - View and manage contacts","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"  - Record tasks assigned to you by others","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"  - Record tasks you have assigned to others","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"  * This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"* For the detailed documentation of this project, see the **[TaskBook Product Website](https://ay2223s1-cs2103t-t13-4.github.io/tp/)**.","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"-":6,"xiaobill8":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"mainClassName \u003d \u0027taskbook.Main\u0027","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"run {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"    archiveFileName \u003d \u0027taskbook.jar\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":70,"seetohjinwei":5,"xiaobill8":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"## Tjan Eng Ger, Kevin","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"\u003cimg src\u003d\"images/nephelite.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"[[github](https://github.com/Nephelite)]","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"[[portfolio](team/nephelite.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"* Role: Team Leader, Gradle Expert, Agenda Maker, Developer","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"* Responsibilities: UI, Logic","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"### See Toh Jin Wei","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"\u003cimg src\u003d\"images/seetohjinwei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"[[github](https://github.com/seetohjinwei)]","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"[[portfolio](team/seetohjinwei.md)]","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"* Responsibilities: Integration, Logic, Commons","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"### Humphrey","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"\u003cimg src\u003d\"images/bananamonkey4655.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"[[github](http://github.com/bananamonkey4655)]","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"[[portfolio](team/bananamonkey4655.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"* Responsibilities: Deliverables and Deadlines, Model, UI","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"### Bill","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"\u003cimg src\u003d\"images/xiaobill8.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"[[github](http://github.com/xiaobill8)]","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"[[portfolio](team/xiaobill8.md)]","lastModifiedDate":"2022-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-21"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"* Responsibilities: Testing, Model, Storage","lastModifiedDate":"2022-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"### Sim Choon Hong Dexter","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"\u003cimg src\u003d\"images/dexter-sim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"[[github](http://github.com/dexter-sim)]","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"[[portfolio](team/dexter-sim.md)]","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"* Responsibilities: Code Quality, Scheduling and Tracking, Logic, Storage","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"dexter-sim":6,"Nephelite":2,"bananamonkey4655":8,"-":34,"seetohjinwei":5,"xiaobill8":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003dLJBYLUBLCM)](https://codecov.io/gh/AY2223S1-CS2103T-T13-4/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/taskbook/MainApp.java).","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":78,"seetohjinwei":1,"xiaobill8":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"## Welcome to TaskBook!","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"TaskBook is a **desktop app for managing contacts and tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TaskBook can get your contact and task management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"This developer\u0027s guide consists of the following sections. Note that TaskBook is developed with Java 11.","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"* The use of SortedList in ModelManager was inspired by [Harmonia](https://github.com/AY2122S2-CS2103T-T09-1/tp), a project also based on AddressBook-Level3.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"* Third party libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5).","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/ui/Ui.java)","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/logic/Logic.java)","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"1. When `Logic` is called upon to execute a command, it uses the `TaskBookParser` class to parse the user command.","lastModifiedDate":"2022-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ContactDeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"* When called upon to parse a user command, the `TaskBookParser` class detects the category that the command belongs to and calls upon the appropriate Category Parser (`ContactCategoryParser`, `TaskCategoryParser`, `CategorylessParser`).","lastModifiedDate":"2022-09-23"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"* The Category Parser creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `ContactAddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `ContactAddCommand`) which results in the `TaskBookParser` returning a `Command` object.","lastModifiedDate":"2022-09-23"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"* All `XYZCommandParser` classes (e.g., `ContactAddCommandParser`, `ContactDeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-09-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/model/Model.java)","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"xiaobill8"},"content":"* stores the task book data i.e., all `Person` objects which are contained in a `UniquePersonList` object, as well as `Task` objects which are contained in a `TaskList` a object.","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"* stores a subset of `Person` objects in the `UniquePersonList` (according to user filter query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"xiaobill8"},"content":"* stores a subset of `Task` objects in the `TaskList` (according to user filter query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027.","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"* stores the `Task` objects in the _filtered_ list above (according to user sort query) as a _sorted_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027.","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-T13-4/tp/tree/master/src/main/java/taskbook/storage/Storage.java)","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"* can save both task book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"* inherits from both `TaskBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"xiaobill8"},"content":"Classes used by multiple components are in the `taskbook.commons` package.","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"### Command History Navigation","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"seetohjinwei"},"content":"#### Implementation","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"The command history navigation mechanism is facilitated by `CommandHistoryManager`. It implements `CommandHistory`, stored internally as a `commandsList` and `pointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"* `CommandHistory#getPreviousCommmand()` — Retrieves the previous command from its history.","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"* `CommandHistory#getNextCommmand()` — Retrieves the next command from its history.","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"* `CommandHistory#addCommand(String command)` — Adds a new command into its history.","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"The methods will handle cases where the command history is empty, full and when there are no more previous or next commands to navigate to.","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"seetohjinwei"},"content":"`CommandHistoryManager` can be instantiated with an optional capacity, the default is as explained in the design considerations below. When the size of the command history exceeds double the allocated capacity, the older half of the history is pruned.","lastModifiedDate":"2022-10-18"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"`LogicManager` will store an instance of a `CommandHistoryManager`.","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"seetohjinwei"},"content":"* Set the `setOnKeyPressed` for the `commandTextField` to detect key presses `UP` and `DOWN` arrow keys and call `CommandHistory#getPreviousCommmand()` and `CommandHistory#getNextCommmand()` respectively and update the text displayed.","lastModifiedDate":"2022-10-18"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"* Call `CommandHistory#addCommand(commandText)` with the `commandText` in `CommandBox#handleCommandEntered()` when handling user input to save the user\u0027s input into the command history. Even if the commands are invalid, save them into the history. This allows the user to fix the wrong commands and re-execute them.","lastModifiedDate":"2022-10-18"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":180,"author":{"gitId":"seetohjinwei"},"content":"![CommandHistoryActivityDiagram](images/CommandHistoryActivityDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"seetohjinwei"},"content":"Note: Some interim steps are omitted for simplicity. Full details are in the sequence diagram below.","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"seetohjinwei"},"content":"Given below is an example usage scenario and how the command history mechanism behaves at each step.","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"seetohjinwei"},"content":"Step 1. The user launches the application for the first time. `CommandHistoryManager` will be initialized in `CommandBox`. The internal `commandsHistoryList` will be empty and the `commandsHistoryPointer` will point to the `0`th element.","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":188,"author":{"gitId":"seetohjinwei"},"content":"Step 2. The user executes a few commands. It does not matter if these commands are invalid. Each of these inputs will fire `CommandHistory#addCommand` once with their respective command texts.","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"seetohjinwei"},"content":"Step 3. The user decides to navigate to a previous command by clicking the `UP` arrow key. `CommandHistory#getPreviousCommmand()` will be called.","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"seetohjinwei"},"content":"Step 4. The user decides to navigate to a next command by clicking the `DOWN` arrow key. `CommandHistory#getNextCommmand()` will be called.","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"seetohjinwei"},"content":"The following sequence diagram shows how the next command history navigation works, if there is a next command to navigate to:","lastModifiedDate":"2022-10-18"},{"lineNumber":195,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":196,"author":{"gitId":"seetohjinwei"},"content":"![NextCommandHistorySequenceDiagram](images/NextCommandHistorySequenceDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":197,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":198,"author":{"gitId":"seetohjinwei"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-18"},{"lineNumber":199,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":200,"author":{"gitId":"seetohjinwei"},"content":"**Aspect: Saving invalid commands:**","lastModifiedDate":"2022-10-18"},{"lineNumber":201,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":202,"author":{"gitId":"seetohjinwei"},"content":"* **Alternative 1 (chosen choice):** Invalid commands are saved in the command history.","lastModifiedDate":"2022-10-18"},{"lineNumber":203,"author":{"gitId":"seetohjinwei"},"content":"    * Pros: Allows the user to navigate to an invalid command and modify it, before re-executing it.","lastModifiedDate":"2022-10-18"},{"lineNumber":204,"author":{"gitId":"seetohjinwei"},"content":"    * Cons: May clutter the command history.","lastModifiedDate":"2022-10-18"},{"lineNumber":205,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":206,"author":{"gitId":"seetohjinwei"},"content":"* **Alternative 2:** Invalid commands are not saved in the command history, only valid commands are saved.","lastModifiedDate":"2022-10-18"},{"lineNumber":207,"author":{"gitId":"seetohjinwei"},"content":"    * Pros: Will use less memory.","lastModifiedDate":"2022-10-18"},{"lineNumber":208,"author":{"gitId":"seetohjinwei"},"content":"    * Cons: Does not allow the user to modify an incorrect command.","lastModifiedDate":"2022-10-18"},{"lineNumber":209,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":210,"author":{"gitId":"seetohjinwei"},"content":"**Aspect: Saving empty commands:**","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"seetohjinwei"},"content":"* **Current choice:** Empty commands are not saved in the command history.","lastModifiedDate":"2022-10-18"},{"lineNumber":213,"author":{"gitId":"seetohjinwei"},"content":"    * Rationale: Does not clutter the command history.","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":215,"author":{"gitId":"seetohjinwei"},"content":"**Aspect: How many commands to be supported:**","lastModifiedDate":"2022-10-18"},{"lineNumber":216,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":217,"author":{"gitId":"seetohjinwei"},"content":"* **Current choice:** 1000 commands.","lastModifiedDate":"2022-10-18"},{"lineNumber":218,"author":{"gitId":"seetohjinwei"},"content":"    * Rationale: To keep memory usage low, minimise the number of commands saved in the history. 1000 commands is a reasonably large enough number of commands to store and is sufficient for even advanced users.","lastModifiedDate":"2022-10-18"},{"lineNumber":219,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":220,"author":{"gitId":"Nephelite"},"content":"### Sorting Task List","lastModifiedDate":"2022-10-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":222,"author":{"gitId":"Nephelite"},"content":"#### Sorting Implementation","lastModifiedDate":"2022-10-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":224,"author":{"gitId":"Nephelite"},"content":"This section details how the sorting of the tasks is implemented. The sorting of contacts is a slightly simplified version.","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":226,"author":{"gitId":"Nephelite"},"content":"The sorting of task list is facilitated by `ModelManager`. It implements `Model`, and contains a `filteredTasks` list which is the task list of TaskBook in a `FilteredList` \u0027wrapper\u0027 from `javafc.collections.transformation`.","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":228,"author":{"gitId":"Nephelite"},"content":"A second field, `sortedTasks`, then stores `filteredTasks` wrapped in a `SortedList` from `javafx.collections.transformation`. Operations done on `filteredTasks` will be reflected in `sortedTasks` as the latter is the former with a `SortedList` wrapper.","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":230,"author":{"gitId":"Nephelite"},"content":"`SortedList` has the method `SortedList#setComparator(Comparator\u003c? super E\u003e comparator)` that will take in a comparator to sort the task list with. We thus implement the method `ModelManager#updateSortedTaskList(Comparator\u003cTask\u003e comparator)` to allow for setting of a comparator in `sortedTasks`.","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"Nephelite"},"content":"When the comparator is null, `sortedTasks` will be of the same order as `filteredTasks`. The default list order is chronological, by date and time the tasks were added.","lastModifiedDate":"2022-10-26"},{"lineNumber":233,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"Nephelite"},"content":"The `Ui` displays the `sortedTasks` version of the task list by default on the right side panel.","lastModifiedDate":"2022-10-26"},{"lineNumber":235,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":236,"author":{"gitId":"Nephelite"},"content":"#### Sorting Execution","lastModifiedDate":"2022-10-18"},{"lineNumber":237,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":238,"author":{"gitId":"Nephelite"},"content":"When you enter `task sort s/SORT_TYPE`, the `Ui` sends the command to `Logic`. `Logic` then identifies the correct type `TaskSortCommand` that you entered, and creates an instance of it. Each `TaskSortCommand` contains a `comparator` to set in `sortedTasks` in the `Model`. `Logic` finally executes the command, which then correctly sets the comparator in `sortedTasks` in `Model`.","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"Nephelite"},"content":"There is one sort command specifically for you to set the comparator to null. Do not directly set the comparator to null in other ways.","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":242,"author":{"gitId":"Nephelite"},"content":"#### Example Usage","lastModifiedDate":"2022-10-18"},{"lineNumber":243,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":244,"author":{"gitId":"Nephelite"},"content":"Given below is an example usage scenario and how the sorting mechanism behaves at each step.","lastModifiedDate":"2022-10-18"},{"lineNumber":245,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":246,"author":{"gitId":"Nephelite"},"content":"Step 1: The user launches the application, which already contains a task list from previous usage. `sortedList` will be initialized in `ModelManager`. The initial `comparator` in `sortedList` will be null, so the tasks are sorted by the date and time they were added.","lastModifiedDate":"2022-10-18"},{"lineNumber":247,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"Nephelite"},"content":"Step 2: The user executes `task sort s/a` command to sort the tasks descriptions in alphabetical order. The `TaskSortCommandParser` uses `s/a` to determine that the command is a `TaskSortDescriptionAlphabeticalCommand`. This command calls `Model#updateSortedTaskList(Comparator\u003cTask\u003e comparator)`, which sets the comparator in `sortedTasks` to one that compares the strings of tasks, and the `Ui` displays the new ordering of the tasks given by `sortedTasks`, where tasks are alphabetically ordered by their descriptions.","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"Nephelite"},"content":"Step 3: The user executes `task sort s/ca` command to sort the tasks by when they were added in task book. The `TaskSortCommandParser` uses `s/ca` to determine that the command is a `TaskSortAddedChronologicalCommand`. This command calls `Model#resetSortedTaskList()`, which sets the comparator in `sortedTasks` to null, and the `Ui` displays the new ordering of the tasks given by `sortedTasks`, which will be the same ordering as the one that would be given by `filteredTasks`.","lastModifiedDate":"2022-10-26"},{"lineNumber":251,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":252,"author":{"gitId":"Nephelite"},"content":"The following sequence diagram shows how a sort by description alphabetical command is executed:","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"Nephelite"},"content":"![SortDescriptionAlphabeticalSequenceDiagram.png](images/SortDescriptionAlphabeticalSequenceDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":256,"author":{"gitId":"Nephelite"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"Nephelite"},"content":"#### Aspect: Sorting command structure:","lastModifiedDate":"2022-10-18"},{"lineNumber":259,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"Nephelite"},"content":"* **Alternative 1 (current choice):** Have an abstract sort command from which all other sort commands must inherit from.","lastModifiedDate":"2022-10-18"},{"lineNumber":261,"author":{"gitId":"Nephelite"},"content":"    * Pros: Follows Open-Closed Principle","lastModifiedDate":"2022-10-18"},{"lineNumber":262,"author":{"gitId":"Nephelite"},"content":"    * Cons: More code required","lastModifiedDate":"2022-10-18"},{"lineNumber":263,"author":{"gitId":"Nephelite"},"content":"* **Alternative 2:** Have only 1 sort command that has multiple methods, and the parser will choose which to execute.","lastModifiedDate":"2022-10-18"},{"lineNumber":264,"author":{"gitId":"Nephelite"},"content":"    * Pros: Less code required","lastModifiedDate":"2022-10-18"},{"lineNumber":265,"author":{"gitId":"Nephelite"},"content":"    * Cons: Violates Open-Closed Principle","lastModifiedDate":"2022-10-18"},{"lineNumber":266,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":267,"author":{"gitId":"Nephelite"},"content":"#### Aspect: Sorted List structure:","lastModifiedDate":"2022-10-18"},{"lineNumber":268,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":269,"author":{"gitId":"Nephelite"},"content":"* **Current choice:** Wrap the task list with a `FilteredList`, and the `FilteredList` with a `SortedList`.","lastModifiedDate":"2022-10-18"},{"lineNumber":270,"author":{"gitId":"Nephelite"},"content":"    * Rationale: Commands on the filtered list will also affect the sorted list. This means that the `Ui` can be guaranteed that `sortedTasks` is the list that the user wishes to be shown, which can combine both filters and a particular sorting order.","lastModifiedDate":"2022-10-26"},{"lineNumber":271,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":272,"author":{"gitId":"seetohjinwei"},"content":"### Undo/redo feature","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"seetohjinwei"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"seetohjinwei"},"content":"The undo/redo mechanism is facilitated by `VersionedTaskBook`. It stores various `TaskBook` states with an undo/redo history, stored internally as an `taskBookStateList` and `pointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"seetohjinwei"},"content":"* `VersionedTaskBook#commit(TaskBook)` — Saves the current task book state in its history, if there are any changes in the state.","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"seetohjinwei"},"content":"* `VersionedTaskBook#undo()` — Restores the previous task book state from its history.","lastModifiedDate":"2022-10-16"},{"lineNumber":280,"author":{"gitId":"seetohjinwei"},"content":"* `VersionedTaskBook#redo()` — Restores a previously undone task book state from its history.","lastModifiedDate":"2022-10-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"seetohjinwei"},"content":"`VersionedTaskBook` can be instantiated with an optional capacity, the default is as explained in the design considerations below. When the size of the version history exceeds double the allocated capacity, the older half of the history is pruned.","lastModifiedDate":"2022-10-19"},{"lineNumber":283,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":284,"author":{"gitId":"seetohjinwei"},"content":"These operations are exposed in the `Model` interface as `Model#commitTaskBook()`, `Model#undoTaskBook()` and `Model#redoTaskBook()` respectively.","lastModifiedDate":"2022-10-16"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"seetohjinwei"},"content":"Step 1. The user launches the application for the first time. The `VersionedTaskBook` will be initialized with the initial task book state, and the `pointer` pointing to that single task book state.","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"seetohjinwei"},"content":"Step 2. The user executes `contact delete i/5` command to delete the 5th person in the task book. The `contact delete i/5` command calls `Model#commitTaskBook()`, causing the modified state of the task book after the `contact delete i/5` command executes to be saved in the `taskBookStateList`, and the `pointer` is shifted to the newly inserted task book state.","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"seetohjinwei"},"content":"Step 3. The user executes `contact add n/David …​` to add a new person. The `add` command also calls `Model#commitTaskBook()`, causing another modified task book state to be saved into the `taskBookStateList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"seetohjinwei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitTaskBook()`, so the task book state will not be saved into the `taskBookStateList`.","lastModifiedDate":"2022-10-16"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"seetohjinwei"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoTaskBook()`, which will shift the `pointer` once to the left, pointing it to the previous task book state, and restores the task book to that state.","lastModifiedDate":"2022-10-20"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"seetohjinwei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `pointer` is at index 0, pointing to the initial TaskBook state, then there are no previous TaskBook states to restore. The `undo` command uses `Model#canUndoTaskBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-10-20"},{"lineNumber":309,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"seetohjinwei"},"content":"The `redo` command does the opposite — it calls `Model#redoTaskBook()`, which shifts the `pointer` once to the right, pointing to the previously undone state, and restores the task book to that state.","lastModifiedDate":"2022-10-20"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"seetohjinwei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `pointer` is at index `taskBookStateList.size() - 1`, pointing to the latest task book state, then there are no undone TaskBook states to restore. The `redo` command uses `Model#canRedoTaskBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-10-20"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"seetohjinwei"},"content":"Step 5. The user then decides to execute the command `task sort s/a`. Commands that do not modify the task book, such as `task sort s/a`, will usually not call `Model#undoTaskBook()` or `Model#redoTaskBook()`. Thus, the `taskBookStateList` remains unchanged.","lastModifiedDate":"2022-10-20"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"seetohjinwei"},"content":"Step 6. The user executes `task delete i/1`, which calls `Model#commitTaskBook()`. Since the `pointer` is not pointing at the end of the `taskBookStateList`, all task book states after the `pointer` will be purged. Reason: It no longer makes sense to redo the `contact add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-10-20"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"seetohjinwei"},"content":"* **Alternative 1 (current choice):** Saves the entire task book.","lastModifiedDate":"2022-10-16"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"seetohjinwei"},"content":"**Aspect: How many undo operations to be supported:**","lastModifiedDate":"2022-10-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"seetohjinwei"},"content":"* **Current choice:** 15 commands.","lastModifiedDate":"2022-10-18"},{"lineNumber":355,"author":{"gitId":"seetohjinwei"},"content":"  * Rationale: With the current choice of execution, would have to store `x` copies of the task book for `x` operations supported. Thus, the number of operations is kept low to ensure that memory usage remains low.","lastModifiedDate":"2022-10-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"seetohjinwei"},"content":"**Aspect: How many redo operations to be supported:**","lastModifiedDate":"2022-10-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"seetohjinwei"},"content":"* **Current choice:** 15 commands.","lastModifiedDate":"2022-10-18"},{"lineNumber":360,"author":{"gitId":"seetohjinwei"},"content":"    * Rationale: Since the current choice of undo operations to be supported is 15, the number of redo operations supported is also 15.","lastModifiedDate":"2022-10-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"seetohjinwei"},"content":"**Aspect: Invalid undo/redo operation:**","lastModifiedDate":"2022-10-20"},{"lineNumber":363,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":364,"author":{"gitId":"seetohjinwei"},"content":"* **Current choice:** Show an error to the user in the UI.","lastModifiedDate":"2022-10-20"},{"lineNumber":365,"author":{"gitId":"seetohjinwei"},"content":"    * Rationale: Alert the user of the invalid action, stemming from a lack of actions to undo/redo, so that the user is aware that the command is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":366,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":367,"author":{"gitId":"dexter-sim"},"content":"### Mark/Unmark Task Command","lastModifiedDate":"2022-10-27"},{"lineNumber":368,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":369,"author":{"gitId":"dexter-sim"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":370,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":371,"author":{"gitId":"dexter-sim"},"content":"The mark and unmark task command mechanism is facilitated by `TaskMarkCommand` and `TaskUnmarkCommand` which extend `Command`, `TaskMarkCommandParser`, `TaskUnmarkCommandParser` and `EditTaskDescriptor`. ","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":373,"author":{"gitId":"dexter-sim"},"content":"Additionally, it implements the following operations:","lastModifiedDate":"2022-10-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":375,"author":{"gitId":"dexter-sim"},"content":"* `MarkTaskCommand#execute()` — Executes the chain of instructions to change the status of the task to done.","lastModifiedDate":"2022-10-18"},{"lineNumber":376,"author":{"gitId":"dexter-sim"},"content":"* `MarkTaskCommandParser#parse()` — Parses user input and creates a TaskMarkCommand object.","lastModifiedDate":"2022-10-18"},{"lineNumber":377,"author":{"gitId":"dexter-sim"},"content":"* `UnmarkTaskCommand#execute()` — Executes the chain of instructions to change the status of the task to undone.","lastModifiedDate":"2022-10-18"},{"lineNumber":378,"author":{"gitId":"dexter-sim"},"content":"* `UnmarkTaskCommandParser#parse()` — Parses user input and creates a TaskUnmarkCommand object.","lastModifiedDate":"2022-10-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":380,"author":{"gitId":"dexter-sim"},"content":"The methods will handle cases where the index from the user input is out of bounds. ","lastModifiedDate":"2022-10-18"},{"lineNumber":381,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":382,"author":{"gitId":"dexter-sim"},"content":"Note: Some interim steps are omitted for simplicity. Full details are in the sequence diagram below.","lastModifiedDate":"2022-10-18"},{"lineNumber":383,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":384,"author":{"gitId":"dexter-sim"},"content":"Given below is an example usage scenario for how the task mark command mechanism behaves at each step.","lastModifiedDate":"2022-10-18"},{"lineNumber":385,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":386,"author":{"gitId":"dexter-sim"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2022-10-18"},{"lineNumber":387,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":388,"author":{"gitId":"dexter-sim"},"content":"Step 2: The user adds a task.","lastModifiedDate":"2022-10-18"},{"lineNumber":389,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":390,"author":{"gitId":"dexter-sim"},"content":"Step 3. The user executes the task mark command on the first task.","lastModifiedDate":"2022-10-18"},{"lineNumber":391,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":392,"author":{"gitId":"dexter-sim"},"content":"The steps can be applied to task unmark command in the same way.","lastModifiedDate":"2022-10-18"},{"lineNumber":393,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":394,"author":{"gitId":"dexter-sim"},"content":"The following sequence diagram shows how the task mark command works:","lastModifiedDate":"2022-10-18"},{"lineNumber":395,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":396,"author":{"gitId":"dexter-sim"},"content":"![TaskMarkCommandSequenceDiagram](images/TaskMarkCommandSequenceDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":397,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":398,"author":{"gitId":"dexter-sim"},"content":"The task unmark command follows a similar sequence diagram.","lastModifiedDate":"2022-10-18"},{"lineNumber":399,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":400,"author":{"gitId":"dexter-sim"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-18"},{"lineNumber":401,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":402,"author":{"gitId":"dexter-sim"},"content":"**Aspect: Mutability of boolean isDone field:**","lastModifiedDate":"2022-10-18"},{"lineNumber":403,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":404,"author":{"gitId":"dexter-sim"},"content":"* **Alternative 1 (current choice):** Immutable isDone field in Task object.","lastModifiedDate":"2022-10-18"},{"lineNumber":405,"author":{"gitId":"dexter-sim"},"content":"    * Pros: Reuse the same component from task edit command, reducing chance of breaking.","lastModifiedDate":"2022-10-18"},{"lineNumber":406,"author":{"gitId":"dexter-sim"},"content":"    * Cons: Extra overhead as a new task is created when the user marks it as done.","lastModifiedDate":"2022-10-18"},{"lineNumber":407,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":408,"author":{"gitId":"dexter-sim"},"content":"* **Alternative 2:** Mutable isDone field in the Task object.","lastModifiedDate":"2022-10-18"},{"lineNumber":409,"author":{"gitId":"dexter-sim"},"content":"    * Pros: Less overhead as it will only involve changing the isDone field in the object.","lastModifiedDate":"2022-10-18"},{"lineNumber":410,"author":{"gitId":"dexter-sim"},"content":"    * Cons: Mutable field may result in regression with other components such as Storage and UI.","lastModifiedDate":"2022-10-18"},{"lineNumber":411,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":412,"author":{"gitId":"bananamonkey4655"},"content":"### \\[Proposed\\] Tagging/Untagging tasks","lastModifiedDate":"2022-10-19"},{"lineNumber":413,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":414,"author":{"gitId":"bananamonkey4655"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":415,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":416,"author":{"gitId":"bananamonkey4655"},"content":"The tag and untag task mechanism is facilitated by `TaskTagCommand`, which extends from `Command`.","lastModifiedDate":"2022-10-19"},{"lineNumber":417,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":418,"author":{"gitId":"bananamonkey4655"},"content":"It implements the following operations:","lastModifiedDate":"2022-10-19"},{"lineNumber":419,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":420,"author":{"gitId":"bananamonkey4655"},"content":"* `TaskTagCommand#execute()` — Executes and coordinates the necessary objects and methods to tag a task.","lastModifiedDate":"2022-10-19"},{"lineNumber":421,"author":{"gitId":"bananamonkey4655"},"content":"* `TaskTagCommandParser#parse()` — Parses user input from UI and initializes a TaskTagCommand object.","lastModifiedDate":"2022-10-19"},{"lineNumber":422,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":423,"author":{"gitId":"bananamonkey4655"},"content":"Cases such as where the index from the user input is out of bounds, are handled by the methods.","lastModifiedDate":"2022-10-19"},{"lineNumber":424,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":425,"author":{"gitId":"bananamonkey4655"},"content":"Given below is an example usage scenario for how the `TaskTagCommand` mechanism behaves at each step.","lastModifiedDate":"2022-10-19"},{"lineNumber":426,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":427,"author":{"gitId":"bananamonkey4655"},"content":"Step 1. The user launches the application for the first time. ","lastModifiedDate":"2022-10-19"},{"lineNumber":428,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":429,"author":{"gitId":"bananamonkey4655"},"content":"Step 2: The user adds a task.","lastModifiedDate":"2022-10-19"},{"lineNumber":430,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":431,"author":{"gitId":"bananamonkey4655"},"content":"Step 3. The user tags their task with the command `task tag i/1 t/work`. ","lastModifiedDate":"2022-10-19"},{"lineNumber":432,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":433,"author":{"gitId":"bananamonkey4655"},"content":"The following sequence diagram shows how the `TaskTagCommand` works:","lastModifiedDate":"2022-10-19"},{"lineNumber":434,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":435,"author":{"gitId":"bananamonkey4655"},"content":"![TagTaskSequenceDiagram](images/TagTaskSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":436,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":437,"author":{"gitId":"bananamonkey4655"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-19"},{"lineNumber":438,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":439,"author":{"gitId":"bananamonkey4655"},"content":"**Aspect: Untagging tasks:**","lastModifiedDate":"2022-10-19"},{"lineNumber":440,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":441,"author":{"gitId":"bananamonkey4655"},"content":"* **Current choice:** Use the same command to untag a task but without the `t/` modifier, i.e. `task tag i/1`.","lastModifiedDate":"2022-10-19"},{"lineNumber":442,"author":{"gitId":"bananamonkey4655"},"content":"    * Rationale: Reduce unnecessary number of commands for both user and developer\u0027s mental health.","lastModifiedDate":"2022-10-19"},{"lineNumber":443,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":444,"author":{"gitId":"bananamonkey4655"},"content":"**Aspect: Saving empty tags:**","lastModifiedDate":"2022-10-19"},{"lineNumber":445,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":446,"author":{"gitId":"bananamonkey4655"},"content":"* **Current choice:** Empty tags are not saved.","lastModifiedDate":"2022-10-19"},{"lineNumber":447,"author":{"gitId":"bananamonkey4655"},"content":"    * Rationale: Does not unnecessarily clutter the number of tags saved to a task.","lastModifiedDate":"2022-10-19"},{"lineNumber":448,"author":{"gitId":"bananamonkey4655"},"content":"  ","lastModifiedDate":"2022-10-19"},{"lineNumber":449,"author":{"gitId":"dexter-sim"},"content":"### ToDo/Deadline/Event Task types","lastModifiedDate":"2022-10-27"},{"lineNumber":450,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":451,"author":{"gitId":"dexter-sim"},"content":"#### Implementation","lastModifiedDate":"2022-10-27"},{"lineNumber":452,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":453,"author":{"gitId":"dexter-sim"},"content":"The Todo, Deadline and Event task types is facilitated by `TaskList`. It extends `Task` with 3 specific task types. Additional features of each task type:","lastModifiedDate":"2022-10-27"},{"lineNumber":454,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":455,"author":{"gitId":"xiaobill8"},"content":"- ToDo: Nil","lastModifiedDate":"2022-10-22"},{"lineNumber":456,"author":{"gitId":"xiaobill8"},"content":"- Event: Event Date","lastModifiedDate":"2022-10-22"},{"lineNumber":457,"author":{"gitId":"xiaobill8"},"content":"- Deadline: Deadline Date","lastModifiedDate":"2022-10-22"},{"lineNumber":458,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":459,"author":{"gitId":"xiaobill8"},"content":"#### Design Considerations:","lastModifiedDate":"2022-10-22"},{"lineNumber":460,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":461,"author":{"gitId":"xiaobill8"},"content":"**Aspect: `Task` superclass implementation**","lastModifiedDate":"2022-10-22"},{"lineNumber":462,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":463,"author":{"gitId":"xiaobill8"},"content":"* **Current choice:** Implement `Task` as an abstract class.","lastModifiedDate":"2022-10-22"},{"lineNumber":464,"author":{"gitId":"xiaobill8"},"content":"    * Rationale: Having the specific task types extend from `Task` allows `TaskList` to store them homogeneously. `Task` is made abstract as `ToDo` Task type models a basic task without a concept of time.","lastModifiedDate":"2022-10-22"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"Nephelite"},"content":"* has a need to manage a significant number of contacts and task assignments to and from these contacts","lastModifiedDate":"2022-09-22"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":488,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"Nephelite"},"content":"**Value proposition**: manage contacts and task assignments to and from contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-22"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"| Priority | As a …​                  | I want to …​                                                   | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"Nephelite"},"content":"|----------|--------------------------|----------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2022-09-23"},{"lineNumber":499,"author":{"gitId":"Nephelite"},"content":"| `* *`    | new user                 | see usage instructions                                         | refer to instructions when I forget how to use the App                    |","lastModifiedDate":"2022-09-22"},{"lineNumber":500,"author":{"gitId":"Nephelite"},"content":"| `*`      | new user                 | view a tutorial for how to use the app                         | understand how to use the app and get started quickly                     |","lastModifiedDate":"2022-09-22"},{"lineNumber":501,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | add a new contact using a single command                       | add contacts without using a GUI                                          |","lastModifiedDate":"2022-09-22"},{"lineNumber":502,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | delete a contact                                               | remove entries that I no longer need without using a GUI                  |","lastModifiedDate":"2022-09-22"},{"lineNumber":503,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | view all contacts                                              | view all details of added contacts in 1 place                             |","lastModifiedDate":"2022-09-23"},{"lineNumber":504,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | add my contact\u0027s phone number                                  | find their contact number without having to remember it                   |","lastModifiedDate":"2022-09-23"},{"lineNumber":505,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | add my contact\u0027s email                                         | find their contact email without having to remember it                    |","lastModifiedDate":"2022-09-23"},{"lineNumber":506,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | add my contact\u0027s address                                       | find their address without having to remember it                          |","lastModifiedDate":"2022-09-23"},{"lineNumber":507,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | add tags to my contacts                                        | categorise my contacts                                                    |","lastModifiedDate":"2022-09-23"},{"lineNumber":508,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user with many contacts  | sort my contacts by different parameters                       | view my contacts in my desired organisation order                         |","lastModifiedDate":"2022-09-23"},{"lineNumber":509,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | find a person by name                                          | locate details of persons without having to go through the entire list    |","lastModifiedDate":"2022-09-22"},{"lineNumber":510,"author":{"gitId":"-"},"content":"| `* *`    | user                     | hide private contact details                                   | minimize chance of someone else seeing them by accident                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | edit my contact\u0027s information                                  | keep their information up to date                                         |","lastModifiedDate":"2022-09-22"},{"lineNumber":512,"author":{"gitId":"Nephelite"},"content":"| `* *`    | forgetful user           | know if I accidentally add duplicate contacts                  | avoid adding the same contact again                                       |","lastModifiedDate":"2022-09-23"},{"lineNumber":513,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user with many contacts  | search within contact groups                                   | find related contacts easily                                              |","lastModifiedDate":"2022-09-22"},{"lineNumber":514,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | search contacts using keywords                                 | easily find a specific contact                                            |","lastModifiedDate":"2022-09-23"},{"lineNumber":515,"author":{"gitId":"Nephelite"},"content":"| `*`      | user                     | add a profile picture for each of my contacts                  | easily distinguish all my contacts, especially those with similar names   |","lastModifiedDate":"2022-09-23"},{"lineNumber":516,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | add a task                                                     | remember what to do (assign myself)                                       |","lastModifiedDate":"2022-09-23"},{"lineNumber":517,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | view all tasks                                                 | see all my task assignments in 1 place                                    |","lastModifiedDate":"2022-09-23"},{"lineNumber":518,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | delete a task                                                  | remove tasks I no longer want to record                                   |","lastModifiedDate":"2022-09-23"},{"lineNumber":519,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | add a deadline to a task                                       | record when a task needs to be completed by                               |","lastModifiedDate":"2022-09-23"},{"lineNumber":520,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | assign a task to a contact                                     | remember what I told someone else to do                                   |","lastModifiedDate":"2022-09-23"},{"lineNumber":521,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | use a contact to assign myself a task                          | remember what I was told by someone else to do                            |","lastModifiedDate":"2022-09-23"},{"lineNumber":522,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | tag my tasks                                                   | remember what the task is associated with                                 |","lastModifiedDate":"2022-09-23"},{"lineNumber":523,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | see the task with the earliest pending deadline                | know what task is the most important to prioritise                        |","lastModifiedDate":"2022-09-23"},{"lineNumber":524,"author":{"gitId":"Nephelite"},"content":"| `* *`    | forgetful user           | know if I accidentally add duplicate tasks                     | avoid adding the same task again                                          |","lastModifiedDate":"2022-09-23"},{"lineNumber":525,"author":{"gitId":"Nephelite"},"content":"| `* *`    | expert user              | create shortcuts for tasks                                     | save time on creating frequent tasks                                      |","lastModifiedDate":"2022-09-23"},{"lineNumber":526,"author":{"gitId":"Nephelite"},"content":"| `* *`    | adept user               | view all tasks assigned to other contacts with 1 command       | easily see what I told others to do                                       |","lastModifiedDate":"2022-09-23"},{"lineNumber":527,"author":{"gitId":"Nephelite"},"content":"| `* *`    | adept user               | view all tasks assigned to me by other contacts with 1 command | easily see what others told me to do                                      |","lastModifiedDate":"2022-09-23"},{"lineNumber":528,"author":{"gitId":"Nephelite"},"content":"| `* *`    | adept user               | create custom lists of tasks and/or contacts                   | fine-tune task priorities for myself                                      |","lastModifiedDate":"2022-09-23"},{"lineNumber":529,"author":{"gitId":"Nephelite"},"content":"| `* *`    | expert user              | tag tasks                                                      | easily find tasks associated with the tag                                 |","lastModifiedDate":"2022-09-23"},{"lineNumber":530,"author":{"gitId":"Nephelite"},"content":"| `* *`    | expert user              | delete multiple completed tasks with 1 command                 | easily keep my tasks organised and reduce clutter                         |","lastModifiedDate":"2022-09-23"},{"lineNumber":531,"author":{"gitId":"Nephelite"},"content":"| `*`      | user                     | sort the order of tasks by date, size, etc                     | view tasks in whatever prioriity is most important to me at the time      |","lastModifiedDate":"2022-09-23"},{"lineNumber":532,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | user                     | close the app with a command                                   | close the app safely                                                      |","lastModifiedDate":"2022-09-23"},{"lineNumber":533,"author":{"gitId":"Nephelite"},"content":"| `* * *`  | forgetful user           | automatically save my progress after every command             | stop worrying about potentially closing the app without saving            |","lastModifiedDate":"2022-09-23"},{"lineNumber":534,"author":{"gitId":"Nephelite"},"content":"| `* *`    | careless user            | undo commands I have keyed in wrongly                          | effortlessly correct any blunders in commands that I notice               |","lastModifiedDate":"2022-09-22"},{"lineNumber":535,"author":{"gitId":"seetohjinwei"},"content":"| `* *`    | expert user              | redo commands                                                  | revert back to a previously undone state                                  |","lastModifiedDate":"2022-10-22"},{"lineNumber":536,"author":{"gitId":"Nephelite"},"content":"| `* *`    | forgetful user           | navigate my command history to look at previous commands       | remember what actions I had taken recently                                |","lastModifiedDate":"2022-09-23"},{"lineNumber":537,"author":{"gitId":"Nephelite"},"content":"| `* *`    | lazy user                | handle all my tasks and contacts in 1 place                    |                                                                           |","lastModifiedDate":"2022-09-22"},{"lineNumber":538,"author":{"gitId":"Nephelite"},"content":"| `* *`    | user                     | use my preferred date format in commands                       | use the date format I am used to and not memorise a specific other format |","lastModifiedDate":"2022-09-23"},{"lineNumber":539,"author":{"gitId":"Nephelite"},"content":"| `*`      | user unfamiliar with CLI | use GUI components to enter commands instead                   | use the app without needing to be fast at typing                          |","lastModifiedDate":"2022-09-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"dexter-sim"},"content":"(For all use cases below, the **System** is the `TaskBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-22"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"dexter-sim"},"content":"**Use case: Add a contact**","lastModifiedDate":"2022-09-22"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":548,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":550,"author":{"gitId":"dexter-sim"},"content":"1. User requests to add a person in the list","lastModifiedDate":"2022-09-22"},{"lineNumber":551,"author":{"gitId":"dexter-sim"},"content":"2. TaskBook adds the person","lastModifiedDate":"2022-09-22"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":555,"author":{"gitId":"dexter-sim"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2022-09-22"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"1. User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"dexter-sim"},"content":"2. TaskBook shows a list of persons","lastModifiedDate":"2022-09-22"},{"lineNumber":561,"author":{"gitId":"-"},"content":"3. User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"dexter-sim"},"content":"4. TaskBook deletes the person","lastModifiedDate":"2022-09-22"},{"lineNumber":563,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":564,"author":{"gitId":"dexter-sim"},"content":"    Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":565,"author":{"gitId":"dexter-sim"},"content":"   ","lastModifiedDate":"2022-09-22"},{"lineNumber":566,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-22"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":568,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-22"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":570,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-22"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":574,"author":{"gitId":"dexter-sim"},"content":"    * 3a1. TaskBook shows an error message.","lastModifiedDate":"2022-09-22"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-22"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":578,"author":{"gitId":"dexter-sim"},"content":"**Use case: Add a task**","lastModifiedDate":"2022-09-22"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":580,"author":{"gitId":"dexter-sim"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":581,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":582,"author":{"gitId":"dexter-sim"},"content":"1. User requests to list persons","lastModifiedDate":"2022-09-22"},{"lineNumber":583,"author":{"gitId":"dexter-sim"},"content":"2. TaskBook shows a list of persons","lastModifiedDate":"2022-09-22"},{"lineNumber":584,"author":{"gitId":"dexter-sim"},"content":"3. User requests to add a task to a person in the list","lastModifiedDate":"2022-09-22"},{"lineNumber":585,"author":{"gitId":"dexter-sim"},"content":"4. TaskBook adds the task","lastModifiedDate":"2022-09-22"},{"lineNumber":586,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":587,"author":{"gitId":"dexter-sim"},"content":"   Use case ends.","lastModifiedDate":"2022-09-22"},{"lineNumber":588,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":589,"author":{"gitId":"dexter-sim"},"content":"**Use case: Delete a task**","lastModifiedDate":"2022-09-22"},{"lineNumber":590,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":591,"author":{"gitId":"dexter-sim"},"content":"**MSS**","lastModifiedDate":"2022-09-22"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":593,"author":{"gitId":"dexter-sim"},"content":"1.  User requests to list tasks","lastModifiedDate":"2022-09-22"},{"lineNumber":594,"author":{"gitId":"dexter-sim"},"content":"2.  TaskBook shows a list of tasks","lastModifiedDate":"2022-09-22"},{"lineNumber":595,"author":{"gitId":"dexter-sim"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2022-09-22"},{"lineNumber":596,"author":{"gitId":"dexter-sim"},"content":"4.  TaskBook deletes the task","lastModifiedDate":"2022-09-22"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"dexter-sim"},"content":"    * 3a1. TaskBook shows an error message.","lastModifiedDate":"2022-09-22"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"xiaobill8"},"content":"1. Should work on any _mainstream OS_, on both 32-bit and 64-bit systems as long as it has Java `11` or above installed.","lastModifiedDate":"2022-09-22"},{"lineNumber":615,"author":{"gitId":"xiaobill8"},"content":"2. Should be able to hold up to 1000 persons and 5000 tasks without a _noticeable sluggishness_ in performance for typical usage.","lastModifiedDate":"2022-09-22"},{"lineNumber":616,"author":{"gitId":"xiaobill8"},"content":"3. Should be responsive to any command within 2 seconds.","lastModifiedDate":"2022-09-22"},{"lineNumber":617,"author":{"gitId":"xiaobill8"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-22"},{"lineNumber":618,"author":{"gitId":"xiaobill8"},"content":"5. The product’s stored data should be backwards compatible with all previous versions.","lastModifiedDate":"2022-09-22"},{"lineNumber":619,"author":{"gitId":"xiaobill8"},"content":"6. The product’s data storage file should be human-editable.","lastModifiedDate":"2022-09-22"},{"lineNumber":620,"author":{"gitId":"xiaobill8"},"content":"7. The product should not cause data corruption on unexpected crashes.","lastModifiedDate":"2022-09-22"},{"lineNumber":621,"author":{"gitId":"xiaobill8"},"content":"8. The product should be reliable and work as expected most of the time.","lastModifiedDate":"2022-09-22"},{"lineNumber":622,"author":{"gitId":"xiaobill8"},"content":"9. The user interface should be intuitive enough to be usable by a novice with little experience but works more efficiently for an experienced user.","lastModifiedDate":"2022-09-22"},{"lineNumber":623,"author":{"gitId":"xiaobill8"},"content":"10. The product is offered as a free downloadable offline application without requiring the use of an installer.","lastModifiedDate":"2022-09-22"},{"lineNumber":624,"author":{"gitId":"xiaobill8"},"content":"11. The product should work offline.","lastModifiedDate":"2022-09-22"},{"lineNumber":625,"author":{"gitId":"xiaobill8"},"content":"12. The product’s GUI should work well for most standard screen resolutions or higher.","lastModifiedDate":"2022-09-22"},{"lineNumber":626,"author":{"gitId":"xiaobill8"},"content":"13. The product should be packaged into a single JAR file with a maximum size of 100MB.","lastModifiedDate":"2022-09-22"},{"lineNumber":627,"author":{"gitId":"xiaobill8"},"content":"14. The system’s data should be portable to allow the user to export their data.","lastModifiedDate":"2022-09-22"},{"lineNumber":628,"author":{"gitId":"xiaobill8"},"content":"15. The product should be easy to test, with appropriate manual testing instructions and automated tests.","lastModifiedDate":"2022-09-22"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"seetohjinwei"},"content":"### UI for Command History Navigation","lastModifiedDate":"2022-10-18"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":678,"author":{"gitId":"seetohjinwei"},"content":"1. Execute a few commands, preferably distinct ones. They need not be valid commands. Take note of the order of execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":680,"author":{"gitId":"seetohjinwei"},"content":"   * A quick way to test is to execute `1`, `12`, `123`, etc...","lastModifiedDate":"2022-10-18"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":682,"author":{"gitId":"seetohjinwei"},"content":"1. Ensure that the input field is selected and in focus. Press `UP` and `DOWN` arrow keys and ensure that the command history displayed is per the order of execution.","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"dexter-sim":74,"Nephelite":98,"bananamonkey4655":38,"-":329,"seetohjinwei":110,"xiaobill8":33}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"   1. Run the `Main` and try a few commands.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"xiaobill8":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"   e.g. `taskbook.commons.StringUtilTest`","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"   e.g. `StorageManagerTest`","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"   e.g. `LogicManagerTest`","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"-":33,"xiaobill8":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"## Welcome to TaskBook!","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"In this user guide, you will find instructions on how to install TaskBook and use its many feature to manage your tasks.","lastModifiedDate":"2022-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"Choose a topic from the table of contents below to find out how to manage your apps using Task Book!","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"## Table of Contents","lastModifiedDate":"2022-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-30"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"## Introduction","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"\u003cfigure\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"\u003cimg src\u003d\"images/Ui.png\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"\u003cfigcaption align \u003d \"center\"\u003e\u003cb\u003eGUI you see on start-up may be slightly different due to different data - the illustration you see is for reference only.\u003c/b\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"\u003c/figcaption\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"\u003c/figure\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"TaskBook is a **desktop app for managing contacts and tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TaskBook can get your contact and task management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"TaskBook is designed to be used by NUS Students to manage all their tasks, from project-related, to module-related, to even daily personal tasks!","lastModifiedDate":"2022-10-30"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"## Useful Notations","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"While reading this user guide, these symbols will inform you if there is some important information you need to know.","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"| Symbol               | Meaning                                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"|----------------------|------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"| :information_source: | Important information                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"| :alarm_clock:        | Reminder                                                         |","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"| :bulb:               | Bonus information that is not important to the usage of TaskBook |","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"2. Download the latest `taskbook.jar` from [here](https://github.com/AY2223S1-CS2103T-T13-4/tp/releases).","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TaskBook.","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"4. Double-click the file to start the app. The GUI similar to the one below should appear in a few seconds, containing sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"\u003cfigure\u003e   ","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"\u003cimg src\u003d\"images/Ui.png\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"\u003cfigcaption align \u003d \"center\"\u003e\u003cb\u003eGUI you see on start-up may be slightly different due to different data - the illustration you see is for reference only.\u003c/b\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"\u003c/figcaption\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"\u003c/figure\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"5. Type the command in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    * `contact list` : Lists all contacts, including ones hidden by a previous command.","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    * `contact add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the contact list.","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    * `contact delete i/3` : Deletes the 3rd contact currently shown in the displayed contact list.","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    * `task list` : Lists all tasks, including ones hidden by a previous command.","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    * `task todo m/John Doe d/Finish user guide` : Adds a todo with the description `Finish user guide` to the task list.","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"    * `task delete i/3` : Deletes the 3rd task currently shown in the displayed task list.","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2022-10-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"* Commands, parameters and arguments are case-sensitive, unless otherwise specified.","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"* Flags consisting of a character and `/` specify the type of parameter to be supplied.","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"  e.g. in `n/NAME`, `n/` is the flag for the `NAME` parameter.","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"  e.g. in `n/NAME`, `NAME` is a parameter which can be used as `n/John Doe`.","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"  e.g. `n/NAME [#/TAG]` can be used as `n/John Doe #/friend` or as `n/John Doe`.","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Nephelite"},"content":"* Diamond brackets mean that at least 1 item inside them must be supplied by the user. \u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"Nephelite"},"content":"  e.g. `task find \u003cq/QUERY a/ASSIGNMENT x/DONE\u003e` can be used as `task find q/John` or as `task find a/FROM x/X`, but not just `task find`.","lastModifiedDate":"2022-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"  e.g. `[#/TAG]…​` can be used as ` ` (i.e. 0 times), `#/friend`, `#/friend #/family` etc.","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `task list`, `contact list` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":"### Accepted Date Formats","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"The following date formats are accepted:","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"Nephelite"},"content":"* yyyy-MM-dd (2022-10-31)","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"* MMM dd yyyy (Oct 31 2022)","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"* MM dd yyyy (10 31 2022)","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"Nephelite"},"content":"* dd MMM yyyy (31 Oct 2022)","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"Nephelite"},"content":"Shows you either the list of commands available or information about a particular command.","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"Format: `help [c/COMMAND]`","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"Examples:","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"* `help` shows the list of commands available.","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"* `help c/contact delete` shows the information about the `command delete` command.","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Nephelite"},"content":"### Listing","lastModifiedDate":"2022-10-30"},{"lineNumber":135,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":136,"author":{"gitId":"Nephelite"},"content":"#### Listing all Contacts : `contact list`","lastModifiedDate":"2022-10-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Nephelite"},"content":"Shows you a list of all contacts in your task book in the order they were added.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"Nephelite"},"content":"Format: `contact list`","lastModifiedDate":"2022-09-20"},{"lineNumber":141,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":142,"author":{"gitId":"Nephelite"},"content":"#### Listing all Tasks : `task list`","lastModifiedDate":"2022-10-30"},{"lineNumber":143,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":144,"author":{"gitId":"Nephelite"},"content":"Shows you a list of all assigned tasks in your task book in the order they were added.\u003cbr\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":146,"author":{"gitId":"Nephelite"},"content":"Format: `task list`","lastModifiedDate":"2022-09-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Nephelite"},"content":"### Adding","lastModifiedDate":"2022-10-30"},{"lineNumber":149,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":150,"author":{"gitId":"Nephelite"},"content":"#### Adding a contact : `contact add`","lastModifiedDate":"2022-10-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"Nephelite"},"content":"Adds a contact to your task book.","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"bananamonkey4655"},"content":"Format: `contact add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [#/TAG]…`","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"dexter-sim"},"content":"* `contact add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-09-22"},{"lineNumber":158,"author":{"gitId":"bananamonkey4655"},"content":"* `contact add n/Betsy Crowe #/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 #/criminal`","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Nephelite"},"content":"#### Adding a todo : `task todo`","lastModifiedDate":"2022-10-30"},{"lineNumber":161,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":162,"author":{"gitId":"Nephelite"},"content":"Adds a task of type todo into your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"xiaobill8"},"content":"**Assigned by** Format:  `task todo m/NAME d/DESCRIPTION [#/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"xiaobill8"},"content":"**Assigned to** Format:  `task todo o/NAME d/DESCRIPTION [#/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"xiaobill8"},"content":"**Self-assigned** Format:  `task todo d/DESCRIPTION`","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":170,"author":{"gitId":"xiaobill8"},"content":"* Adds a todo assigned by (`m/`) or assigned to (`o/`) a contact with a description. Optional to include tags.","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"Nephelite"},"content":"* Input \"Myself\" or omit the `m/` and `o/` flags to assign yourself a todo.","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"xiaobill8"},"content":"    * Self-assignment defaults to `m/Myself` when `m/` and `o/` flags are omitted.","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"bananamonkey4655"},"content":"Examples:","lastModifiedDate":"2022-09-19"},{"lineNumber":175,"author":{"gitId":"Nephelite"},"content":"* `task todo m/John d/Finish user guide` adds a todo called “Finish user guide” assigned by John to you.","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"bananamonkey4655"},"content":"* `task todo o/Sam d/Finish the assignment #/cs2103` adds a todo called “Finish the assignment” tagged as \"cs2103\" and assigned to Sam.","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"Nephelite"},"content":"* `task todo o/Myself d/Upload slides` adds a todo called “Upload slides” which is self-assigned by you.","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"Nephelite"},"content":"* `task todo d/Finish essay` adds a todo called \"Finish essay\" which you assign to yourself.","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":180,"author":{"gitId":"Nephelite"},"content":"#### Adding a deadline : `task deadline`","lastModifiedDate":"2022-10-30"},{"lineNumber":181,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":182,"author":{"gitId":"dexter-sim"},"content":"Adds a task of type deadline into the task list.","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":184,"author":{"gitId":"xiaobill8"},"content":"**Assigned by** Format: `task deadline m/NAME d/DESCRIPTION t/DATE [#/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":186,"author":{"gitId":"xiaobill8"},"content":"**Assigned to** Format: `task deadline o/Name d/DESCRIPTION t/DATE [#/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"xiaobill8"},"content":"**Self-assigned** Format: `task deadline d/DESCRIPTION t/DATE`","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"xiaobill8"},"content":"* Adds a deadline assigned by (`m/`) or assigned to (`o/`) a contact with a description and a deadline date. Optional to include tags.","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"Nephelite"},"content":"* Input \"Myself\" or omit the `m/` and `o/` flags to assign yourself the deadline.","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"xiaobill8"},"content":"    * Self-assignment defaults to `m/Myself` when `m/` and `o/` flags are omitted.","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"xiaobill8"},"content":"* For more information on `DATE` formats, scroll down to \"Accepted Date Formats\"","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":195,"author":{"gitId":"dexter-sim"},"content":"Examples:","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"Nephelite"},"content":"* `task deadline m/John d/Finish user guide t/2022-12-31` adds a deadline called “Finish user guide” assigned by John to you.","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"bananamonkey4655"},"content":"* `task deadline o/Sam d/Finish the assignment t/Jan 31 2022 #/cs2103` adds a deadline called “Finish the assignment” and tagged as \"cs2103\" which is assigned to Sam.","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"Nephelite"},"content":"* `task deadline o/Myself d/Upload slides t/2022-12-31` adds a deadline called “Upload Slides” which self-assigned by you.","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"Nephelite"},"content":"* `task deadline d/Finish essay t/Jan 31 2022` adds a deadline called “Finish essay” which you assign to yourself.","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"Nephelite"},"content":"#### Adding an event : `task event`","lastModifiedDate":"2022-10-30"},{"lineNumber":202,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"Nephelite"},"content":"Adds a task of type event into your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"xiaobill8"},"content":"**Assigned by** Format: `task event m/NAME d/DESCRIPTION t/DATE [#/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"xiaobill8"},"content":"**Assigned to** Format: `task event o/NAME d/DESCRIPTION t/DATE [#/TAG]…`","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"xiaobill8"},"content":"**Self-assigned** Format: `task event d/DESCRIPTION t/DATE`","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"xiaobill8"},"content":"* Adds an event assigned by (`m/`) or assigned to (`o/`) a contact with a description and an event date. Optional to include tags.","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"Nephelite"},"content":"    * Self-assignment defaults to `m/Myself` when `m/` and `o/` flags are omitted.","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"Nephelite"},"content":"* For more information on `DATE` formats, scroll down to \"Accepted Date Formats\"","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":215,"author":{"gitId":"xiaobill8"},"content":"Examples:","lastModifiedDate":"2022-09-22"},{"lineNumber":216,"author":{"gitId":"Nephelite"},"content":"* `task event m/John d/Finish user guide t/2022-12-31` adds an event called “Finish user guide” assigned by John to you.","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"bananamonkey4655"},"content":"* `task event o/Sam d/Finish the assignment t/Jan 31 2022 #/cs2103` adds an event called “Finish the assignment” tagged as \"cs2103\" which is assigned to Sam.","lastModifiedDate":"2022-10-24"},{"lineNumber":218,"author":{"gitId":"Nephelite"},"content":"* `task event o/Myself d/Upload Slides t/Jan 31 2022` adds an event called “Upload Slides” which is self-assigned by you.","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"Nephelite"},"content":"* `task event d/Finish essay t/Jan 31 2022` adds an event called “Finish essay” which you assigned to yourself.","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":221,"author":{"gitId":"Nephelite"},"content":"### Editing","lastModifiedDate":"2022-10-30"},{"lineNumber":222,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":223,"author":{"gitId":"Nephelite"},"content":"#### Editing a contact : `contact edit`","lastModifiedDate":"2022-10-30"},{"lineNumber":224,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":225,"author":{"gitId":"Nephelite"},"content":"Edits the specified contact in your contact list.","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"Nephelite"},"content":"Format: `contact edit i/INDEX \u003cn/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS #/TAG…\u003e`","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":229,"author":{"gitId":"seetohjinwei"},"content":"* Edits the contact at the specified `INDEX` with the parameters provided.","lastModifiedDate":"2022-10-13"},{"lineNumber":230,"author":{"gitId":"seetohjinwei"},"content":"* The index refers to the index number shown in the displayed contact list.","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"seetohjinwei"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-13"},{"lineNumber":232,"author":{"gitId":"Nephelite"},"content":"* Include only the parameters you wish to be edited, however all included parameters **must** be changed from the original.","lastModifiedDate":"2022-10-30"},{"lineNumber":233,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":234,"author":{"gitId":"Nephelite"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":235,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":236,"author":{"gitId":"Nephelite"},"content":"**:alarm_clock: Reminder:**\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":237,"author":{"gitId":"Nephelite"},"content":"* From the parameters within `\u003c\u003e` in the command format, **at least one** valid parameter must be provided!","lastModifiedDate":"2022-10-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":239,"author":{"gitId":"Nephelite"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":240,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":241,"author":{"gitId":"seetohjinwei"},"content":"Examples:","lastModifiedDate":"2022-10-13"},{"lineNumber":242,"author":{"gitId":"seetohjinwei"},"content":"* `contact edit i/1 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-10-13"},{"lineNumber":243,"author":{"gitId":"bananamonkey4655"},"content":"* `contact edit i/2 p/98765433 #/friend`","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":245,"author":{"gitId":"Nephelite"},"content":"#### Editing a task : `task edit`","lastModifiedDate":"2022-10-30"},{"lineNumber":246,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":247,"author":{"gitId":"Nephelite"},"content":"Edits the specified task in your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":249,"author":{"gitId":"Nephelite"},"content":"Format: `task edit i/INDEX \u003cm/NAME o/NAME d/DESCRIPTION t/DATE #/TAG…\u003e`","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":251,"author":{"gitId":"seetohjinwei"},"content":"* Edits the task at the specified `INDEX` with the parameters provided.","lastModifiedDate":"2022-10-30"},{"lineNumber":252,"author":{"gitId":"seetohjinwei"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-30"},{"lineNumber":253,"author":{"gitId":"seetohjinwei"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-14"},{"lineNumber":254,"author":{"gitId":"Nephelite"},"content":"* Include only the parameters you wish to be edited, however you include within the `\u003c\u003e` **must** be changed from the original.","lastModifiedDate":"2022-10-30"},{"lineNumber":255,"author":{"gitId":"seetohjinwei"},"content":"* Only one of assignor `m/` or assignee `o/` can be specified.","lastModifiedDate":"2022-10-14"},{"lineNumber":256,"author":{"gitId":"xiaobill8"},"content":"    * A task can be **re-assigned to** \"Person Y\" by providing parameter `o/Person Y`.","lastModifiedDate":"2022-10-25"},{"lineNumber":257,"author":{"gitId":"xiaobill8"},"content":"    * A task can be **re-assigned by** \"Person X\" by providing parameter `m/Person X`.","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"seetohjinwei"},"content":"    * If neither `m/` or `o/` is specified, the current **assignor** or **assignee** will not be changed.","lastModifiedDate":"2022-10-14"},{"lineNumber":259,"author":{"gitId":"seetohjinwei"},"content":"* Dates `t/` can only be edited if the task is a **deadline** or **event**.","lastModifiedDate":"2022-10-30"},{"lineNumber":260,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":261,"author":{"gitId":"Nephelite"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":262,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":263,"author":{"gitId":"Nephelite"},"content":"**:alarm_clock: Reminder:**\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":264,"author":{"gitId":"Nephelite"},"content":"* From the parameters within `\u003c\u003e` in the command format, **at least one** valid parameter must be provided!","lastModifiedDate":"2022-10-30"},{"lineNumber":265,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":266,"author":{"gitId":"Nephelite"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":267,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":268,"author":{"gitId":"seetohjinwei"},"content":"Examples:","lastModifiedDate":"2022-10-14"},{"lineNumber":269,"author":{"gitId":"seetohjinwei"},"content":"* `task edit i/1 m/Jackie Chan d/Practice kick 10000 times`","lastModifiedDate":"2022-10-14"},{"lineNumber":270,"author":{"gitId":"seetohjinwei"},"content":"* `task edit i/2 o/James Lee`","lastModifiedDate":"2022-10-14"},{"lineNumber":271,"author":{"gitId":"seetohjinwei"},"content":"* `task edit i/3 t/2023-12-31`","lastModifiedDate":"2022-10-14"},{"lineNumber":272,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":273,"author":{"gitId":"Nephelite"},"content":"### Deleting","lastModifiedDate":"2022-10-30"},{"lineNumber":274,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":275,"author":{"gitId":"Nephelite"},"content":"#### Deleting a contact : `contact delete`","lastModifiedDate":"2022-10-30"},{"lineNumber":276,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":277,"author":{"gitId":"Nephelite"},"content":"Deletes the specified contact from your contact list.","lastModifiedDate":"2022-10-26"},{"lineNumber":278,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":279,"author":{"gitId":"Nephelite"},"content":"Format: `contact delete i/INDEX`","lastModifiedDate":"2022-09-23"},{"lineNumber":280,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":281,"author":{"gitId":"Nephelite"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2022-09-23"},{"lineNumber":282,"author":{"gitId":"Nephelite"},"content":"* The index refers to the index number shown in your displayed contact list.","lastModifiedDate":"2022-10-26"},{"lineNumber":283,"author":{"gitId":"Nephelite"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-23"},{"lineNumber":284,"author":{"gitId":"seetohjinwei"},"content":"* Deletion of contact is blocked if the contact has tasks associated to it.","lastModifiedDate":"2022-10-13"},{"lineNumber":285,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":286,"author":{"gitId":"Nephelite"},"content":"Examples:","lastModifiedDate":"2022-09-23"},{"lineNumber":287,"author":{"gitId":"Nephelite"},"content":"* `contact list` followed by `contact delete i/2` deletes the 2nd contact in your contact list.","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":289,"author":{"gitId":"Nephelite"},"content":"#### Deleting a task : `task delete`","lastModifiedDate":"2022-10-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Nephelite"},"content":"Deletes the specified task from your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"seetohjinwei"},"content":"Format: `task delete i/INDEX`","lastModifiedDate":"2022-09-19"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"seetohjinwei"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-09-19"},{"lineNumber":296,"author":{"gitId":"Nephelite"},"content":"* The index refers to the index number shown in your displayed task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"seetohjinwei"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-19"},{"lineNumber":298,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":299,"author":{"gitId":"seetohjinwei"},"content":"Examples:","lastModifiedDate":"2022-09-19"},{"lineNumber":300,"author":{"gitId":"Nephelite"},"content":"* `task list` followed by `task delete i/2` deletes the 2nd task in your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"Nephelite"},"content":"### Finding","lastModifiedDate":"2022-10-30"},{"lineNumber":303,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":304,"author":{"gitId":"Nephelite"},"content":"#### Finding contacts : `contact find`","lastModifiedDate":"2022-10-30"},{"lineNumber":305,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":306,"author":{"gitId":"Nephelite"},"content":"Displays all contacts matching the arguments provided by you.","lastModifiedDate":"2022-10-26"},{"lineNumber":307,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":308,"author":{"gitId":"Nephelite"},"content":"Format: `contact find q/QUERY`","lastModifiedDate":"2022-10-23"},{"lineNumber":309,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":310,"author":{"gitId":"seetohjinwei"},"content":"* QUERY is not case-sensitive.","lastModifiedDate":"2022-10-30"},{"lineNumber":311,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":312,"author":{"gitId":"Nephelite"},"content":"Examples:","lastModifiedDate":"2022-10-23"},{"lineNumber":313,"author":{"gitId":"Nephelite"},"content":"* `contact find q/ea` will change your displayed contact list to show a contact list where all contacts will have \"ea\" in their name.","lastModifiedDate":"2022-10-26"},{"lineNumber":314,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":315,"author":{"gitId":"Nephelite"},"content":"#### Finding tasks : `task find`","lastModifiedDate":"2022-10-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":317,"author":{"gitId":"Nephelite"},"content":"Displays all tasks matching the arguments provided by you.","lastModifiedDate":"2022-10-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":319,"author":{"gitId":"Nephelite"},"content":"Format: `task find \u003cq/QUERY x/DONE a/ASSIGNMENT\u003e`","lastModifiedDate":"2022-10-26"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":321,"author":{"gitId":"seetohjinwei"},"content":"* QUERY is not case-sensitive.","lastModifiedDate":"2022-10-30"},{"lineNumber":322,"author":{"gitId":"Nephelite"},"content":"* ASSIGNMENT is either FROM or TO, representing \"m/\" and \"o/\", or \u0027Assigned by\u0027 and \u0027Assigned to\u0027, respectively.","lastModifiedDate":"2022-10-23"},{"lineNumber":323,"author":{"gitId":"Nephelite"},"content":"* DONE is either X or O, representing \u0027Done\u0027 and \u0027Not done\u0027 respectively.","lastModifiedDate":"2022-10-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":325,"author":{"gitId":"Nephelite"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":327,"author":{"gitId":"Nephelite"},"content":"**:alarm_clock: Reminder:**\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":328,"author":{"gitId":"Nephelite"},"content":"* From the parameters within `\u003c\u003e` in the command format, **at least one** valid parameter must be provided!","lastModifiedDate":"2022-10-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":332,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-23"},{"lineNumber":333,"author":{"gitId":"Nephelite"},"content":"* `task find q/ea` will change the displayed task list to show a task list where all tasks will have \"ea\" in either their connected person, or their description.","lastModifiedDate":"2022-10-26"},{"lineNumber":334,"author":{"gitId":"Nephelite"},"content":"* `task find x/X` will change the displayed task list to show a task list where all tasks are marked done, with [X].","lastModifiedDate":"2022-10-26"},{"lineNumber":335,"author":{"gitId":"Nephelite"},"content":"* `task find a/FROM` will change the displayed task list to show a task list where all tasks are assigned to you by someone else.","lastModifiedDate":"2022-10-26"},{"lineNumber":336,"author":{"gitId":"Nephelite"},"content":"* `task find q/ea x/X` is equivalent to `task find x/X q/ea`.","lastModifiedDate":"2022-10-23"},{"lineNumber":337,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":338,"author":{"gitId":"Nephelite"},"content":"### Sorting","lastModifiedDate":"2022-10-30"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":340,"author":{"gitId":"Nephelite"},"content":"#### Sorting contacts : `contact sort`","lastModifiedDate":"2022-10-30"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":342,"author":{"gitId":"Nephelite"},"content":"Sorts your contact list based on the input parameter.","lastModifiedDate":"2022-10-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":344,"author":{"gitId":"Nephelite"},"content":"Format: `contact sort s/SORT`","lastModifiedDate":"2022-10-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":346,"author":{"gitId":"Nephelite"},"content":"SORT parameters:","lastModifiedDate":"2022-10-30"},{"lineNumber":347,"author":{"gitId":"Nephelite"},"content":"* ca: Chronologically sort tasks by date and time added.","lastModifiedDate":"2022-10-24"},{"lineNumber":348,"author":{"gitId":"Nephelite"},"content":"* a: Alphabetically sort contact names.","lastModifiedDate":"2022-10-24"},{"lineNumber":349,"author":{"gitId":"Nephelite"},"content":"* ra: Alphabetically sort contact names in reverse order.","lastModifiedDate":"2022-10-24"},{"lineNumber":350,"author":{"gitId":"Nephelite"},"content":"* p: Numerically sort contact phone numbers in ascending order.","lastModifiedDate":"2022-10-24"},{"lineNumber":351,"author":{"gitId":"Nephelite"},"content":"* rp: Numerically sort contact phone numbers in descending order.","lastModifiedDate":"2022-10-24"},{"lineNumber":352,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":353,"author":{"gitId":"Nephelite"},"content":"Examples:","lastModifiedDate":"2022-10-23"},{"lineNumber":354,"author":{"gitId":"Nephelite"},"content":"* `contact sort s/a` will change the displayed contact list to show a contact list where names are sorted by alphabetical order.","lastModifiedDate":"2022-10-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":356,"author":{"gitId":"Nephelite"},"content":"#### Sorting tasks : `task sort`","lastModifiedDate":"2022-10-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":358,"author":{"gitId":"Nephelite"},"content":"Sorts your task list based on the input parameter.","lastModifiedDate":"2022-10-30"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":360,"author":{"gitId":"Nephelite"},"content":"Format: `task sort s/SORT`","lastModifiedDate":"2022-10-16"},{"lineNumber":361,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":362,"author":{"gitId":"Nephelite"},"content":"SORT parameters:","lastModifiedDate":"2022-10-30"},{"lineNumber":363,"author":{"gitId":"Nephelite"},"content":"* ca: Chronologically sort tasks by date and time added.","lastModifiedDate":"2022-10-24"},{"lineNumber":364,"author":{"gitId":"Nephelite"},"content":"* a: Alphabetically sort task descriptions.","lastModifiedDate":"2022-10-24"},{"lineNumber":365,"author":{"gitId":"Nephelite"},"content":"* ra: Alphabetically sort task descriptions in reverse order.","lastModifiedDate":"2022-10-24"},{"lineNumber":366,"author":{"gitId":"Nephelite"},"content":"* cd: Chronologically sort tasks by their associated dates in ascending order. Tasks without dates are at the end of the list, in no particular order.","lastModifiedDate":"2022-10-24"},{"lineNumber":367,"author":{"gitId":"Nephelite"},"content":"* rcd: Chronologically sort tasks by their associated dates in descending order. Tasks without dates are at the end of the list, in no particular order.","lastModifiedDate":"2022-10-24"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-16"},{"lineNumber":370,"author":{"gitId":"Nephelite"},"content":"* `task sort s/a` will change the displayed task list to show a task list sorted by description alphabetical order","lastModifiedDate":"2022-10-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":372,"author":{"gitId":"dexter-sim"},"content":"### Marking a task : `task mark`","lastModifiedDate":"2022-10-21"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":374,"author":{"gitId":"Nephelite"},"content":"Marks the specified task from your task list as done.","lastModifiedDate":"2022-10-26"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":376,"author":{"gitId":"dexter-sim"},"content":"Format: `task mark i/INDEX`","lastModifiedDate":"2022-10-21"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":378,"author":{"gitId":"dexter-sim"},"content":"* Marks the task at the specified `INDEX` as done.","lastModifiedDate":"2022-10-21"},{"lineNumber":379,"author":{"gitId":"Nephelite"},"content":"* The index refers to the index number shown in your displayed task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":380,"author":{"gitId":"dexter-sim"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-21"},{"lineNumber":383,"author":{"gitId":"Nephelite"},"content":"* `task list` followed by `task mark i/2` marks the 2nd task in your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":385,"author":{"gitId":"dexter-sim"},"content":"### Unmarking a task : `task unmark`","lastModifiedDate":"2022-10-21"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":387,"author":{"gitId":"Nephelite"},"content":"Marks the specified task from your task list as not done.","lastModifiedDate":"2022-10-26"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":389,"author":{"gitId":"dexter-sim"},"content":"Format: `task unmark i/INDEX`","lastModifiedDate":"2022-10-21"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":391,"author":{"gitId":"dexter-sim"},"content":"* Marks the task at the specified `INDEX` as not done.","lastModifiedDate":"2022-10-21"},{"lineNumber":392,"author":{"gitId":"Nephelite"},"content":"* The index refers to the index number shown in your displayed task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-21"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-21"},{"lineNumber":396,"author":{"gitId":"Nephelite"},"content":"* `task list` followed by `task unmark i/2` marks the 2nd task in your task list.","lastModifiedDate":"2022-10-26"},{"lineNumber":397,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":398,"author":{"gitId":"seetohjinwei"},"content":"### Undo Command : `undo`","lastModifiedDate":"2022-10-19"},{"lineNumber":399,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":400,"author":{"gitId":"Nephelite"},"content":"Undoes the previous command and reverts your TaskBook to the previous state. A _minimum_ of 15 previous states are guaranteed to be kept in the history, if there are that many commands executed.","lastModifiedDate":"2022-10-26"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":402,"author":{"gitId":"seetohjinwei"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":403,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":404,"author":{"gitId":"seetohjinwei"},"content":"**:information_source: Notes about Undo:**\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":406,"author":{"gitId":"seetohjinwei"},"content":"* Commands that do not cause a change in state cannot be undone.","lastModifiedDate":"2022-10-30"},{"lineNumber":407,"author":{"gitId":"seetohjinwei"},"content":"* Undo does not reset the view changes caused by filter or sort. See [contact list](#listing-all-contacts--contact-list) and [task list](#listing-all-tasks--task-list) instead.","lastModifiedDate":"2022-10-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":409,"author":{"gitId":"seetohjinwei"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":411,"author":{"gitId":"seetohjinwei"},"content":"Format: `undo`","lastModifiedDate":"2022-10-19"},{"lineNumber":412,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":413,"author":{"gitId":"seetohjinwei"},"content":"Examples:","lastModifiedDate":"2022-10-19"},{"lineNumber":414,"author":{"gitId":"seetohjinwei"},"content":"* `task todo m/Bob d/Add undo feature` - some command that causes a change in state","lastModifiedDate":"2022-10-19"},{"lineNumber":415,"author":{"gitId":"seetohjinwei"},"content":"* `undo` will undo the previous command","lastModifiedDate":"2022-10-19"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":417,"author":{"gitId":"seetohjinwei"},"content":"### Redo Command : `redo`","lastModifiedDate":"2022-10-19"},{"lineNumber":418,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":419,"author":{"gitId":"Nephelite"},"content":"Redoes the previous undo action and reverts your TaskBook to a previously undone state.","lastModifiedDate":"2022-10-26"},{"lineNumber":420,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":421,"author":{"gitId":"seetohjinwei"},"content":"Format: `redo`","lastModifiedDate":"2022-10-19"},{"lineNumber":422,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":423,"author":{"gitId":"seetohjinwei"},"content":"Examples:","lastModifiedDate":"2022-10-19"},{"lineNumber":424,"author":{"gitId":"seetohjinwei"},"content":"* `task delete i/1` - some command that causes a change in state","lastModifiedDate":"2022-10-19"},{"lineNumber":425,"author":{"gitId":"seetohjinwei"},"content":"* `undo` will undo the previous command","lastModifiedDate":"2022-10-19"},{"lineNumber":426,"author":{"gitId":"seetohjinwei"},"content":"* `redo` will revert the state such that the task is deleted","lastModifiedDate":"2022-10-19"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":428,"author":{"gitId":"bananamonkey4655"},"content":"### Exiting the program : `bye`","lastModifiedDate":"2022-09-19"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"Nephelite"},"content":"Ends the application immediately.","lastModifiedDate":"2022-10-26"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"bananamonkey4655"},"content":"Format: `bye`","lastModifiedDate":"2022-09-19"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"seetohjinwei"},"content":"### Navigating Command History","lastModifiedDate":"2022-10-18"},{"lineNumber":435,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":436,"author":{"gitId":"seetohjinwei"},"content":"A _minimum_ of 1000 commands are guaranteed to be kept in the history, if there are that many commands executed. Invalid commands are also saved in the command history, to allow for editing mistyped commands.","lastModifiedDate":"2022-10-19"},{"lineNumber":437,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":438,"author":{"gitId":"seetohjinwei"},"content":"#### History: Previous Command","lastModifiedDate":"2022-10-18"},{"lineNumber":439,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":440,"author":{"gitId":"seetohjinwei"},"content":"Gets the previous command, if any.","lastModifiedDate":"2022-10-18"},{"lineNumber":441,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":442,"author":{"gitId":"seetohjinwei"},"content":"Steps:","lastModifiedDate":"2022-10-18"},{"lineNumber":443,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":444,"author":{"gitId":"seetohjinwei"},"content":"1. Ensure that the text field is selected and in focus.","lastModifiedDate":"2022-10-18"},{"lineNumber":445,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":446,"author":{"gitId":"seetohjinwei"},"content":"1. Press `UP` arrow key.","lastModifiedDate":"2022-10-18"},{"lineNumber":447,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":448,"author":{"gitId":"seetohjinwei"},"content":"#### History: Next Command","lastModifiedDate":"2022-10-18"},{"lineNumber":449,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":450,"author":{"gitId":"seetohjinwei"},"content":"Gets the next command, if any.","lastModifiedDate":"2022-10-18"},{"lineNumber":451,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":452,"author":{"gitId":"seetohjinwei"},"content":"Steps:","lastModifiedDate":"2022-10-18"},{"lineNumber":453,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":454,"author":{"gitId":"seetohjinwei"},"content":"1. Ensure that the text field is selected and in focus.","lastModifiedDate":"2022-10-18"},{"lineNumber":455,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":456,"author":{"gitId":"seetohjinwei"},"content":"1. Press `DOWN` arrow key.","lastModifiedDate":"2022-10-18"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":458,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"bananamonkey4655"},"content":"TaskBook data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-24"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":464,"author":{"gitId":"bananamonkey4655"},"content":"TaskBook data is saved as a JSON file `[JAR file location]/data/taskbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-24"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":466,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":467,"author":{"gitId":"bananamonkey4655"},"content":"If your changes to the data file makes its format invalid, TaskBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-24"},{"lineNumber":468,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":470,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"bananamonkey4655"},"content":"**Q**: How do I save my progress?\u003cbr\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":474,"author":{"gitId":"bananamonkey4655"},"content":"**A**: Your progress is automatically saved after each command.","lastModifiedDate":"2022-09-19"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"bananamonkey4655"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TaskBook home folder.","lastModifiedDate":"2022-10-24"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"Nephelite"},"content":"| Action                        | Format                                                                          | Examples                                                                         |","lastModifiedDate":"2022-10-30"},{"lineNumber":484,"author":{"gitId":"Nephelite"},"content":"|-------------------------------|---------------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-30"},{"lineNumber":485,"author":{"gitId":"Nephelite"},"content":"| **Help**                      | `help [c/COMMAND]`                                                              | `help c/help`                                                                    |","lastModifiedDate":"2022-10-30"},{"lineNumber":486,"author":{"gitId":"Nephelite"},"content":"| **View All Tasks**            | `task list`                                                                     | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":487,"author":{"gitId":"Nephelite"},"content":"| **View Contacts**             | `contact list`                                                                  | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":488,"author":{"gitId":"Nephelite"},"content":"| **Add Contact**               | `contact add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [#/TAG]…`                  | `contact add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123` |","lastModifiedDate":"2022-10-30"},{"lineNumber":489,"author":{"gitId":"Nephelite"},"content":"| **Add Todo: Assigned by**     | `task todo m/NAME d/DESCRIPTION [#/TAG]…`                                       | `task todo m/John d/Finish user guide #/cs2103 #/homework`                       |","lastModifiedDate":"2022-10-30"},{"lineNumber":490,"author":{"gitId":"Nephelite"},"content":"| **Add Todo: Assigned to**     | `task todo o/NAME d/DESCRIPTION [#/TAG]…`                                       | `task todo o/Sam d/Finish the assignment #/compulsory`                           |","lastModifiedDate":"2022-10-30"},{"lineNumber":491,"author":{"gitId":"Nephelite"},"content":"| **Add Deadline: Assigned by** | `task deadline m/NAME d/DESCRIPTION t/DATE [#/TAG]…`                            | `task deadline m/John d/Finish user guide t/2022-12-31 #/cs2103 #/homework`      |","lastModifiedDate":"2022-10-30"},{"lineNumber":492,"author":{"gitId":"Nephelite"},"content":"| **Add Deadline: Assigned to** | `task deadline o/NAME d/DESCRIPTION t/DATE [#/TAG]…`                            | `task deadline o/Sam d/Finish the assignment t/Jan 31 2022 #/compulsory`         |","lastModifiedDate":"2022-10-30"},{"lineNumber":493,"author":{"gitId":"Nephelite"},"content":"| **Add Event: Assigned by**    | `task event m/NAME d/DESCRIPTION t/DATE [#/TAG]…`                               | `task event m/John d/Finish user guide t/2022-12-31 #/cs2103 #/homework`         |","lastModifiedDate":"2022-10-30"},{"lineNumber":494,"author":{"gitId":"Nephelite"},"content":"| **Add Event: Assigned to**    | `task event o/NAME d/DESCRIPTION t/DATE [#/TAG]…`                               | `task event o/Sam d/Finish the assignment t/Jan 31 2022 #/compulsory`            |","lastModifiedDate":"2022-10-30"},{"lineNumber":495,"author":{"gitId":"Nephelite"},"content":"| **Edit Contact**              | `contact edit i/INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [#/TAG]…` | `contact edit i/2 n/James Lee e/jameslee@example.com #/friend`                   |","lastModifiedDate":"2022-10-30"},{"lineNumber":496,"author":{"gitId":"Nephelite"},"content":"| **Edit Task**                 | `task edit i/INDEX [m/NAME] [o/NAME] [d/DESCRIPTION] [t/DATE] [#/TAG]…`         | `task edit i/2 o/James Lee #/classmate`                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":497,"author":{"gitId":"Nephelite"},"content":"| **Delete Contact**            | `contact delete i/INDEX`                                                        | `contact delete i/3`                                                             |","lastModifiedDate":"2022-10-30"},{"lineNumber":498,"author":{"gitId":"Nephelite"},"content":"| **Delete Task**               | `task delete i/INDEX`                                                           | `task delete i/3`                                                                |","lastModifiedDate":"2022-10-30"},{"lineNumber":499,"author":{"gitId":"Nephelite"},"content":"| **Sort Contacts**             | `contact sort s/SORT`                                                           | `contact sort s/a`                                                               |","lastModifiedDate":"2022-10-30"},{"lineNumber":500,"author":{"gitId":"Nephelite"},"content":"| **Sort Tasks**                | `task sort s/SORT`                                                              | `task sort s/a`                                                                  |","lastModifiedDate":"2022-10-30"},{"lineNumber":501,"author":{"gitId":"Nephelite"},"content":"| **Find Contacts**             | `contact find q/QUERY`                                                          | `contact find q/ea`                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":502,"author":{"gitId":"Nephelite"},"content":"| **Find Tasks**                | `task find \u003cq/QUERY a/ASSIGNMENT x/DONE\u003e`                                       | `task find a/FROM q/ea`                                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":503,"author":{"gitId":"Nephelite"},"content":"| **Mark Task**                 | `task mark i/INDEX`                                                             | `task mark i/3`                                                                  |","lastModifiedDate":"2022-10-30"},{"lineNumber":504,"author":{"gitId":"Nephelite"},"content":"| **Unmark Task**               | `task unmark i/INDEX`                                                           | `task unmark i/3`                                                                |","lastModifiedDate":"2022-10-30"},{"lineNumber":505,"author":{"gitId":"Nephelite"},"content":"| **Undo**                      | `undo`                                                                          | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":506,"author":{"gitId":"Nephelite"},"content":"| **Redo**                      | `redo`                                                                          | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":507,"author":{"gitId":"Nephelite"},"content":"| **Exiting the program**       | `bye`                                                                           | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":508,"author":{"gitId":"Nephelite"},"content":"| **History: Previous Command** | `UP` arrow key                                                                  | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":509,"author":{"gitId":"Nephelite"},"content":"| **History: Next Command**     | `DOWN` arrow key                                                                | N/A                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":510,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"dexter-sim":16,"Nephelite":212,"bananamonkey4655":22,"-":132,"seetohjinwei":98,"xiaobill8":30}},{"path":"docs/diagrams/CommandHistoryActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":":on key press;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"\u0027 extra spaces used for formatting","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"switch ()","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"case (  [key press is \"UP\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"  :getPreviousCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"case (  [key press is \"DOWN\"])","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"    :getNextCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"case (  [else])","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    stop","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"endswitch","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":":textField:setText(command);","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"label ending","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"seetohjinwei":21}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"if () then ([command commits TaskBook])","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    :Save TaskBook to","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    taskBookStateList;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"seetohjinwei":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"participant \":ContactDeleteCommandParser\" as ContactDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"participant \"d:ContactDeleteCommand\" as ContactDeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"[-\u003e LogicManager : execute(\"contact delete i/1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"contact delete i/1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"activate TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"create ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser -\u003e ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"activate ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommandParser --\u003e TaskBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"deactivate ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser -\u003e ContactDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"activate ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"create ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommandParser -\u003e ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"activate ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommand --\u003e ContactDeleteCommandParser : d","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"deactivate ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommandParser --\u003e TaskBookParser : d","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"deactivate ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"destroy ContactDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"deactivate TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"LogicManager -\u003e ContactDeleteCommand : execute()","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"activate ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"Model --\u003e ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"CommandResult --\u003e ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"ContactDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"deactivate ContactDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"seetohjinwei":32}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"Class TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"LogicManager -right-\u003e\"1\" TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"seetohjinwei":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"skinparam lineType ortho","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaskBook\" as ReadOnlyTaskBook","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"Class TaskBook","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"Class TaskList","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"Class \"   {abstract}   \\nTask\" as Task","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"together {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"Class Todo","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"Class Event","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"Class Deadline","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"TaskBook .up.|\u003e ReadOnlyTaskBook","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"Model .left.\u003e ReadOnlyTaskBook","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"ModelManager -left-\u003e \"1\" TaskBook","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"TaskBook *-down-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"UniquePersonList -down-\u003e \"~* all\" Person","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"Person *-down-\u003e Name","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"TaskBook *-down-\u003e \"1\" TaskList","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"TaskList -down-\u003e \"~* all\" Task","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"Todo -up-|\u003e Task","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"Event -up-|\u003e Task","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"Deadline -up-|\u003e Task","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"Task -down-\u003e Name","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"ModelManager ---down-\u003e\"~* filtered\" Person","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"ModelManager --down-\u003e\"~* filtered\" Task","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"ModelManager --down-\u003e\"~* sorted\" Task","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":28,"xiaobill8":28}},{"path":"docs/diagrams/NextCommandHistorySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"!include style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"participant \"commandTextField:TextField\" as TextField UI_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"end box","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"participant \":CommandHistoryManager\" as CommandHistoryManager LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"end box","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"[-\u003e TextField : key press(\"DOWN\")","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"activate TextField","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"TextField -\u003e LogicManager : getNextCommand()","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"activate LogicManager","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"LogicManager -\u003e CommandHistoryManager : getNextCommand()","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"activate CommandHistoryManager","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"CommandHistoryManager --\u003e LogicManager : command","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"deactivate CommandHistoryManager","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"LogicManager --\u003e TextField : command","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"TextField -\u003e TextField : setText(command)","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"TextField -\u003e TextField : positionCaret(command.length())","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"[\u003c-- TextField","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"deactivate TextField","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"seetohjinwei":33}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"Class TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"HiddenOutside ..\u003e TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"seetohjinwei":4}},{"path":"docs/diagrams/TagTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"!include style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"participant \":TaskTagCommandParser\" as TaskTagCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"participant \"t:TaskTagCommand\" as TaskTagCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"[-\u003e LogicManager : execute(\"task tag i/1 t/work\")","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"activate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"task tag i/1 t/work\")","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"activate TaskBookParser","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"create TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"TaskBookParser -\u003e TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"activate TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommandParser --\u003e TaskBookParser","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"deactivate TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"TaskBookParser -\u003e TaskTagCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"activate TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"create TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommandParser -\u003e TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"activate TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommand --\u003e TaskTagCommandParser : t","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"deactivate TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommandParser --\u003e TaskBookParser : t","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"deactivate TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"bananamonkey4655"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"destroy TaskTagCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"TaskBookParser --\u003e LogicManager : t","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"deactivate TaskBookParser","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"LogicManager -\u003e TaskTagCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"bananamonkey4655"},"content":"activate TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommand -\u003e Model : tagTask(1)","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"Model --\u003e TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"bananamonkey4655"},"content":"create CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommand -\u003e CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"activate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"CommandResult --\u003e TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"TaskTagCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"deactivate TaskTagCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"bananamonkey4655":69}},{"path":"docs/diagrams/TaskMarkCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"!include style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"participant \":TaskMarkCommandParser\" as TaskMarkCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"participant \"d:TaskMarkCommand\" as TaskMarkCommand LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"participant \":EditTaskDescriptor\" as EditTaskDescriptor LOGIC_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"end box","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"end box","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"[-\u003e LogicManager : execute(\"task mark i/1\")","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"activate LogicManager","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"task mark i/1\")","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"activate TaskBookParser","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"create TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"TaskBookParser -\u003e TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"activate TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommandParser --\u003e TaskBookParser","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"deactivate TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"TaskBookParser -\u003e TaskMarkCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"activate TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"create TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommandParser -\u003e TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"activate TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommand --\u003e TaskMarkCommandParser : d","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"deactivate TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommandParser --\u003e TaskBookParser : d","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"deactivate TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"destroy TaskMarkCommandParser","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"TaskBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"deactivate TaskBookParser","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"LogicManager -\u003e TaskMarkCommand : execute()","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"activate TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"create EditTaskDescriptor","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommand -\u003e EditTaskDescriptor","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"activate EditTaskDescriptor","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"EditTaskDescriptor --\u003e TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"deactivate EditTaskDescriptor","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommand -\u003e EditTaskDescriptor : setIsDone(true)","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"activate EditTaskDescriptor","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"EditTaskDescriptor --\u003e TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"deactivate EditTaskDescriptor","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommand -\u003e Model : setTask(taskToMark, markedTask)","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"activate Model","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"Model --\u003e TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"deactivate Model","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"create CommandResult","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommand -\u003e CommandResult","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"activate CommandResult","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"CommandResult --\u003e TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"TaskMarkCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"deactivate TaskMarkCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"dexter-sim":81}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"Class TaskListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"Class TaskListCard","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"PersonListPanel --\u003e \"*\" PersonCard","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"TaskListPanel -down-\u003e \"*\" TaskListCard","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"ResultDisplay ---|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"CommandBox ---|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"PersonCard ---|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"TaskListCard ---|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"StatusBarFooter ---|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"HelpWindow ---|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"PersonCard ....\u003e Model","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"TaskListCard ....\u003e Model","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Nephelite":16,"-":53}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    class State1 as \"__tb0:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    class State2 as \"__tb1:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    class State3 as \"__tb2:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"seetohjinwei":4}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"title After command \"contact delete i/5\"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    class State1 as \"__tb0:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    class State2 as \"__tb1:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    class State3 as \"__tb2:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"seetohjinwei":5}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"title After command \"contact add n/David\"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    class State1 as \"__tb0:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    class State2 as \"__tb1:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    class State3 as \"__tb2:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":15,"seetohjinwei":5}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    class State1 as \"__tb0:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    class State2 as \"__tb1:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    class State3 as \"__tb2:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":16,"seetohjinwei":4}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"title After command \"task sort s/a\"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    class State1 as \"__tb0:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    class State2 as \"__tb1:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    class State3 as \"__tb2:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":15,"seetohjinwei":5}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"title After command \"task delete i/1\"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"    class State1 as \"__tb0:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    class State2 as \"__tb1:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    class State3 as \"__tb2:TaskBook__\"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"note right on link: State tb2 deleted.","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":15,"seetohjinwei":6}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"participant \":VersionedTaskBook\" as VersionedTaskBook MODEL_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(undo)","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"activate TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser -\u003e UndoCommand","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"UndoCommand --\u003e TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"TaskBookParser --\u003e LogicManager : u","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"deactivate TaskBookParser","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"UndoCommand -\u003e Model : undoTaskBook()","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"Model -\u003e VersionedTaskBook : undo()","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"activate VersionedTaskBook","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"VersionedTaskBook -\u003e VersionedTaskBook :resetData(ReadOnlyTaskBook)","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"VersionedTaskBook --\u003e Model :","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"deactivate VersionedTaskBook","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"seetohjinwei":14}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"Participant \":TaskBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"Participant \":ContactEditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"Participant \"command:ContactEditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":18,"seetohjinwei":3}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"title: TaskBook","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T13-4/tp/actions)","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T13-4/tp/branch/master/graph/badge.svg?token\u003dLJBYLUBLCM)](https://codecov.io/gh/AY2223S1-CS2103T-T13-4/tp)","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"**TaskBook is a desktop application for managing your contact and tasks.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"* If you are interested in using TaskBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"* If you are interested about developing TaskBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"seetohjinwei":6}},{"path":"docs/team/bananamonkey4655.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"title: Humphrey\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"### Project: TaskBook","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"TaskBook is a desktop address book and task assignment application used for efficiently managing contacts and tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"* **New Features**: [To be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"* **Code contributed**: [RepoSense link]() [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"* **Project management**:","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"    * User Guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"* **Community**:","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"* **Tools**:","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"bananamonkey4655":32}},{"path":"docs/team/dexter-sim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"title: Sim Choon Hong Dexter\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"### Project: TaskBook","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"TaskBook is a desktop address book and task assignment application used for efficiently managing contacts and tasks.","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"* **New Features**: [To be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"* **Code contributed**: [RepoSense link]() [to be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"* **Project management**:","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    * User Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"* **Community**:","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"* **Tools**:","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"dexter-sim":32}},{"path":"docs/team/nephelite.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"---","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"layout: page","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"title: Tjan Eng Ger, Kevin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"---","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"### Project: TaskBook","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"TaskBook is a desktop address book and task assignment application used for efficiently managing contacts and tasks.","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"* **New Features**: [To be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"* **Code contributed**: [RepoSense link]() [to be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"* **Project management**:","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"  * [to be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    * User Guide:","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"* **Community**:","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"* **Tools**:","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"Nephelite":32}},{"path":"docs/team/seetohjinwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"title: See Toh Jin Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"### Project: TaskBook","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"TaskBook is a desktop address book and task assignment application used for efficiently managing contacts and tasks.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"* **New Feature**: [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"* **Code contributed**: [RepoSense link](#) [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"* **Project management**:","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    * User Guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"* **Community**:","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"* **Tools**:","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"seetohjinwei":34}},{"path":"docs/team/xiaobill8.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"layout: page","lastModifiedDate":"2022-09-21"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"title: Bill\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"### Project: TaskBook","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"TaskBook is a desktop address book and task assignment application used for efficiently managing contacts and tasks.","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"* **New Features**: [To be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"* **Code contributed**: [RepoSense link]() [to be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"* **Project management**:","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    * User Guide:","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        * [to be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"* **Community**:","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"* **Tools**:","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    * [to be added soon]","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"xiaobill8":32}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/taskbook/logic/command` directory.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"import Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"xiaobill8"},"content":"Create a `RemarkCommandParser` class in the `taskbook.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"xiaobill8"},"content":"Create a new `Remark` in `taskbook.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"xiaobill8"},"content":"Simply add the following to [`PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":394,"xiaobill8":7}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"The `address` field in `Person` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":111,"xiaobill8":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"A quick look at the `Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":299,"xiaobill8":2}},{"path":"src/main/java/taskbook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.FileUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"xiaobill8":3}},{"path":"src/main/java/taskbook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"xiaobill8":1}},{"path":"src/main/java/taskbook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Config;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Version;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.LogicManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.Storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.StorageManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.TaskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"import taskbook.ui.Ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"import taskbook.ui.UiManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TaskBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        TaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(userPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        storage \u003d new StorageManager(taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s task book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"     * The data from the sample task book will be used instead if {@code storage}\u0027s task book is not found,","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"     * or an empty task book will be used instead if errors occur when reading {@code storage}\u0027s task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        Optional\u003cReadOnlyTaskBook\u003e taskBookOptional;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        ReadOnlyTaskBook initialData;","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"            taskBookOptional \u003d storage.readTaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"            if (!taskBookOptional.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskBook\");","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"            initialData \u003d taskBookOptional.orElseGet(SampleDataUtil::getSampleTaskBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskBook\");","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"            initialData \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskBook\");","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"            initialData \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"xiaobill8"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskBook\");","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"xiaobill8"},"content":"        logger.info(\"Starting TaskBook \" + MainApp.VERSION);","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"xiaobill8"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping task book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Nephelite":1,"-":139,"xiaobill8":43}},{"path":"src/main/java/taskbook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    private static final String LOG_FILE \u003d \"taskbook.log\";","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":110,"xiaobill8":2}},{"path":"src/main/java/taskbook/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_UNKNOWN_CATEGORY \u003d \"Unknown category\";","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Invalid date or incorrect date format!\";","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bananamonkey4655":1,"-":12,"seetohjinwei":2,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core.index;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"xiaobill8":2}},{"path":"src/main/java/taskbook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Config;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"xiaobill8":3}},{"path":"src/main/java/taskbook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"xiaobill8":1}},{"path":"src/main/java/taskbook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"xiaobill8":3}},{"path":"src/main/java/taskbook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"xiaobill8":2}},{"path":"src/main/java/taskbook/logic/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":" * API of the CommandHistory component.","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"public interface CommandHistory {","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the previous command in the history.","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"     * Returns null if there is no previous command.","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"     * @return Previous command or null.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    String getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the next command in the history.","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * Returns null if there is no next command.","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     * @return Next command or null.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    String getNextCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"     * Adds the given command to the history.","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"     * @param command The command to be added.","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    void addCommand(String command);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"seetohjinwei":30}},{"path":"src/main/java/taskbook/logic/CommandHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":" * Manages command history of the application.","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"public class CommandHistoryManager implements CommandHistory {","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    private static final int DEFAULT_CAPACITY \u003d 1000;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    private static final int MAXIMUM_CAPACITY \u003d Integer.MAX_VALUE / 2 - 1;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    /** When size reaches double of the {@code capacity} allocated, the older half of the history is pruned. */","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    private final int capacity;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    private int pointer;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    private ArrayList\u003cString\u003e commandsList;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     * Constructs a {@code CommandHistoryManager}.","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    public CommandHistoryManager() {","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        capacity \u003d DEFAULT_CAPACITY;","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        commandsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"     * Constructs a {@code CommandHistoryManager} with the given {@code capacity}.","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"    public CommandHistoryManager(int capacity) {","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"        // Defensively ensure that the capacity does not ensure a certain threshold.","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        if (capacity \u003e MAXIMUM_CAPACITY) {","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"            capacity \u003d MAXIMUM_CAPACITY;","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d 0;","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        commandsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"    public String getPreviousCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        assert commandsList !\u003d null;","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        if (commandsList.isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"            return null;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d Math.max(0, pointer - 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        return commandsList.get(pointer);","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    public String getNextCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        assert commandsList !\u003d null;","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        if (commandsList.isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"            return null;","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d Math.min(commandsList.size(), pointer + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        if (pointer \u003d\u003d commandsList.size()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"            // Pointer is pointing to new \"empty\" command.","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"            return \"\";","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        return commandsList.get(pointer);","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"     * Prunes the older half of the history to reach the capacity, if required.","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"    private void pruneToCapacityIfRequired() {","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        assert commandsList !\u003d null;","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        if (commandsList.size() \u003c\u003d capacity * 2) {","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        ArrayList\u003cString\u003e newList \u003d new ArrayList\u003c\u003e(capacity);","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        for (int i \u003d 0; i \u003c capacity; i++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"            String command \u003d commandsList.get(capacity + i + 1);","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"            newList.add(command);","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        commandsList \u003d newList;","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"    public void addCommand(String command) {","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        assert commandsList !\u003d null \u0026\u0026 command !\u003d null;","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        if (command.isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"        commandsList.add(command);","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        pruneToCapacityIfRequired();","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        // Set the pointer to point to the newest command.","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d commandsList.size();","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"seetohjinwei":102}},{"path":"src/main/java/taskbook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"     * Returns the TaskBook.","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"     * @see Model#getTaskBook()","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    /** Returns an unmodifiable view of the sorted list of tasks */","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    ObservableList\u003cPerson\u003e getSortedPersonList();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    /** Returns an unmodifiable view of the sorted list of tasks */","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    ObservableList\u003cTask\u003e getSortedTaskList();","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the previous command in the history.","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    String getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"     * Gets the next command in the history.","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"    String getNextCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Nephelite":10,"-":38,"seetohjinwei":10,"xiaobill8":13}},{"path":"src/main/java/taskbook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.TaskBookParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.Storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"    private final TaskBookParser taskBookParser;","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    private final CommandHistory commandHistory;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        taskBookParser \u003d new TaskBookParser();","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        commandHistory \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        commandHistory.addCommand(commandText);","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d taskBookParser.parseCommand(commandText);","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"            storage.saveTaskBook(model.getTaskBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        return model.getTaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"    public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"        return model.getSortedPersonList();","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"    public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":"        return model.getSortedTaskList();","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"        return model.getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"    public String getPreviousCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        return commandHistory.getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"    public String getNextCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        return commandHistory.getNextCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Nephelite":16,"-":61,"seetohjinwei":17,"xiaobill8":17}},{"path":"src/main/java/taskbook/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Clears the task book.","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task book has been cleared!\";","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        model.setTaskBook(new TaskBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":2,"-":17,"seetohjinwei":1,"xiaobill8":4}},{"path":"src/main/java/taskbook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":16,"xiaobill8":3}},{"path":"src/main/java/taskbook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":70,"xiaobill8":1}},{"path":"src/main/java/taskbook/logic/commands/categoryless/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.categoryless;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Task Book as requested ...\";","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Ends the application.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dexter-sim":2,"-":14,"seetohjinwei":1,"xiaobill8":4}},{"path":"src/main/java/taskbook/logic/commands/categoryless/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands.categoryless;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_HELP_COMMAND;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskDeadlineCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskEventCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskListCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"            + \"Parameters: [\" + PREFIX_HELP_COMMAND + \"COMMAND]\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"            + \"Example 1: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" \" + PREFIX_HELP_COMMAND + CommandWord.CONTACT_DELETE;","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMANDS \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        Arrays.stream(CommandWord.values())","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        .map(Enum::toString)","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        .map(s -\u003e \"\\n  * \" + s) // prefix before each command","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        .collect(Collectors.joining());","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_GENERAL_USAGE \u003d \"Use \"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        + COMMAND_WORD + \" \" + PREFIX_HELP_COMMAND + \"COMMAND to find out more about a particular command.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        + \"Available commands: \" + COMMANDS;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    private final CommandWord commandWord;","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"     * Creates a HelpCommand with the specified parameter.","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    public HelpCommand(CommandWord commandWord) {","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        if (commandWord \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"            return new CommandResult(MESSAGE_GENERAL_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"        return new CommandResult(getHelp(commandWord));","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    private String getHelp(CommandWord commandWord) {","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        case HELP:","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"            return MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        case CONTACT_LIST:","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"            return ContactListCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_LIST:","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"            return TaskListCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        case CONTACT_ADD:","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"            return ContactAddCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_TODO:","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"            return TaskTodoCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_DEADLINE:","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"            return TaskDeadlineCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_EVENT:","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"            return TaskEventCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"        case CONTACT_EDIT:","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"            return ContactEditCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_EDIT:","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"            return TaskEditCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"        case CONTACT_DELETE:","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"            return ContactDeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_DELETE:","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"            return TaskDeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"        case CONTACT_FIND:","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"            return ContactFindCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"        case TASK_FIND:","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"            return TaskFindCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"        case CONTACT_SORT:","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"            return ContactSortCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_SORT:","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"            return TaskSortCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_MARK:","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"            return TaskMarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        case TASK_UNMARK:","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"            return TaskUnmarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        case UNDO:","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"            return UndoCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        case REDO:","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"            return RedoCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        case EXIT:","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"            return ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        default:","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"            return MESSAGE_USAGE;","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"            return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        } else if (!(other instanceof HelpCommand)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand otherCommand \u003d (HelpCommand) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"        if (commandWord \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"            return otherCommand.commandWord \u003d\u003d null;","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"        return commandWord.equals(otherCommand.commandWord);","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"     * Represents the different types of command words that TaskBook supports.","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"    public enum CommandWord {","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"        HELP(COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"        CONTACT_LIST(ContactCategoryParser.CATEGORY_WORD, ContactListCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"        TASK_LIST(TaskCategoryParser.CATEGORY_WORD, TaskListCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"        CONTACT_ADD(ContactCategoryParser.CATEGORY_WORD, ContactAddCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"        TASK_TODO(TaskCategoryParser.CATEGORY_WORD, TaskTodoCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"        TASK_DEADLINE(TaskCategoryParser.CATEGORY_WORD, TaskDeadlineCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"        TASK_EVENT(TaskCategoryParser.CATEGORY_WORD, TaskEventCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"        CONTACT_EDIT(ContactCategoryParser.CATEGORY_WORD, ContactEditCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"seetohjinwei"},"content":"        TASK_EDIT(TaskCategoryParser.CATEGORY_WORD, TaskEditCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"        CONTACT_DELETE(ContactCategoryParser.CATEGORY_WORD, ContactDeleteCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"        TASK_DELETE(TaskCategoryParser.CATEGORY_WORD, TaskDeleteCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"Nephelite"},"content":"        CONTACT_FIND(ContactCategoryParser.CATEGORY_WORD, ContactFindCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"Nephelite"},"content":"        TASK_FIND(TaskCategoryParser.CATEGORY_WORD, TaskFindCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"Nephelite"},"content":"        CONTACT_SORT(ContactCategoryParser.CATEGORY_WORD, ContactSortCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"        TASK_SORT(TaskCategoryParser.CATEGORY_WORD, TaskSortCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"        TASK_MARK(TaskCategoryParser.CATEGORY_WORD, TaskMarkCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"seetohjinwei"},"content":"        TASK_UNMARK(TaskCategoryParser.CATEGORY_WORD, TaskUnmarkCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"        UNDO(UndoCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"seetohjinwei"},"content":"        REDO(RedoCommand.COMMAND_WORD),","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"        EXIT(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"seetohjinwei"},"content":"        private final String name;","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"        CommandWord(String category, String command) {","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"seetohjinwei"},"content":"            name \u003d category + \" \" + command;","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"seetohjinwei"},"content":"        CommandWord(String command) {","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"            name \u003d command;","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"        public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"            return name;","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":12,"seetohjinwei":157}},{"path":"src/main/java/taskbook/logic/commands/categoryless/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands.categoryless;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":" * Reverts to the previously undone state.","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Reverted to the previously undone state.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_INVALID_ACTION \u003d \"There are no actions left to redo.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        + \": Redoes the previous undo action and reverts the TaskBook to a previously undone state.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        if (!model.canRedoTaskBook()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(MESSAGE_INVALID_ACTION);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        model.redoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredTaskListPredicate(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Nephelite":2,"seetohjinwei":32}},{"path":"src/main/java/taskbook/logic/commands/categoryless/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands.categoryless;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":" * Reverts to the previous state.","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Reverted to the previous state.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_INVALID_ACTION \u003d \"There are no actions left to undo.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        + \": Undoes the previous command and reverts the TaskBook to the previous state.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        if (!model.canUndoTaskBook()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(MESSAGE_INVALID_ACTION);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        model.undoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredTaskListPredicate(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"Nephelite":2,"seetohjinwei":32}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":" * Adds a person to the task book.","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"public class ContactAddCommand extends Command {","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"            ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"            + \": Adds a person to the task book.\\n\"","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"            + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"            + \"[\" + CliSyntax.PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"            + \"[\" + CliSyntax.PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"            + \"[\" + CliSyntax.PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"            + \"Example: \" + ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            + CliSyntax.PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"            + CliSyntax.PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"            + CliSyntax.PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"            + CliSyntax.PREFIX_ADDRESS + \"311, Clementi Ave 2 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"            + CliSyntax.PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"            + CliSyntax.PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the task book\";","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    public ContactAddCommand(Person person) {","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"                || (other instanceof ContactAddCommand // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"                \u0026\u0026 toAdd.equals(((ContactAddCommand) other).toAdd));","lastModifiedDate":"2022-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":6,"bananamonkey4655":5,"-":39,"seetohjinwei":5,"xiaobill8":15}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":" * Deletes a person identified using it\u0027s displayed index from the task book.","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"public class ContactDeleteCommand extends Command {","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"            ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"            + \"Parameters: \" + CliSyntax.PREFIX_INDEX + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"            + \"Example: \" + ContactCategoryParser.CATEGORY_WORD + \" \"","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            + COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \"1\";","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_DELETE_PERSON_FAILURE \u003d \"Person %s cannot be deleted!\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        + \"There are still tasks associated with the person.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    public ContactDeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        if (!model.canDeletePerson(personToDelete)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(getDeletePersonFailureMessage(personToDelete));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"                || (other instanceof ContactDeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"                \u0026\u0026 targetIndex.equals(((ContactDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"     * Returns failure message for failure of deletion of person.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"     * @param person Person to be deleted.","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"     * @return Failure message.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"    public static String getDeletePersonFailureMessage(Person person) {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        return String.format(MESSAGE_DELETE_PERSON_FAILURE, person.getName());","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":4,"bananamonkey4655":1,"-":38,"seetohjinwei":24,"xiaobill8":12}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":" * Edits the details of an existing person in the task book.","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"public class ContactEditCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"        + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        + \"Parameters: \" + PREFIX_INDEX + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"        + \"Example: \" + ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1 \"","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the task book.\";","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    public ContactEditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        if (!(other instanceof ContactEditCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand e \u003d (ContactEditCommand) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"dexter-sim":2,"Nephelite":1,"bananamonkey4655":1,"seetohjinwei":14,"-":198,"xiaobill8":15}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_QUERY;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":" * Finds all contacts matching a given query exactly in their names.","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":" * Query matching is case insensitive.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"public class ContactFindCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying matching persons.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"            ContactCategoryParser","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"                    .CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"                    + \": Searches all contact names that contain the given query.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"                    + \"Parameters:\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"                    + PREFIX_QUERY + \"QUERY\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"                    + \"Only names with exact matches with QUERY will be displayed. Can be multiple words. \"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"                    + \"Case insensitive.\\n\";","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"    private Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    private String query;","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"     * Creates a ContactFindCommand to search for persons with the specified {@code Predicate\u003cPerson\u003e query}.","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"     * @param query","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    public ContactFindCommand(Predicate\u003cPerson\u003e predicate, String query) {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"                + model.getFilteredPersonList().size() + \" persons listed.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"                + \"Query: \" + query));","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        if (!(other instanceof ContactFindCommand)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        ContactFindCommand command \u003d (ContactFindCommand) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        return this.query.toUpperCase().equals(command.query.toUpperCase());","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":60}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":" * Lists all persons in the task book to the user.","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"public class ContactListCommand extends Command {","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"        + \": Shows a list of all contacts in the taskbook in alphabetical order.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":1,"Nephelite":1,"-":16,"seetohjinwei":4,"xiaobill8":4}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactSortAddedChronologicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the list of persons by the order in which they were added into Task Book.","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class ContactSortAddedChronologicalCommand extends ContactSortCommand {","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by time added into Task Book\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public ContactSortAddedChronologicalCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"        super(null, MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"        model.resetSortedPersonList();","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof ContactSortAddedChronologicalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":27}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":" * Sorts the list of persons","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"public abstract class ContactSortCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"            ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"                    + \": Sorts list of persons in some order.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"                    + \"Available sorting commands:\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"                    + \"a: sorts names of persons in alphabetical order.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"                    + \"ra: sorts names of persons in reverse alphabetical order.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"                    + \"ca: sorts persons chronologically by the time they were added into Task Book.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"                    + \"p: sorts phone numbers of persons in ascending order.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"                    + \"rp: sorts phone numbers of persons in descending order.\\n\";","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Contacts sorted\";","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    public final String messageSortType;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"     * Creates a contact sorting command.","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"     * @param comparator","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"     * @param sortType","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    public ContactSortCommand(Comparator\u003cPerson\u003e comparator, String sortType) {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        this.messageSortType \u003d sortType;","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    public Comparator\u003cPerson\u003e getComparator() {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        return comparator;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":40}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactSortNameAlphabeticalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the list of persons by the alphabetical order of their names.","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class ContactSortNameAlphabeticalCommand extends ContactSortCommand {","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by name in alphabetical order\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public ContactSortNameAlphabeticalCommand() {","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"        super((p1, p2) -\u003e p1.compareByNameAlphabeticalTo(p2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedPersonList(super.getComparator());","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof ContactSortNameAlphabeticalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":27}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactSortNameReverseAlphabeticalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the list of persons by the reverse alphabetical order of their names.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class ContactSortNameReverseAlphabeticalCommand extends ContactSortCommand {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by name in reverse alphabetical order\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public ContactSortNameReverseAlphabeticalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"        super((p1, p2) -\u003e p1.compareByNameReverseAlphabeticalTo(p2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedPersonList(super.getComparator());","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof ContactSortNameReverseAlphabeticalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":27}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactSortPhoneAscendingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts contacts by ascending phone number.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class ContactSortPhoneAscendingCommand extends ContactSortCommand {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by ascending phone number order.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"            + \"Contacts with no phone number are at the end of the list in no particular order.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"    public ContactSortPhoneAscendingCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"        super((p1, p2) -\u003e p1.compareByPhoneNumberAscendingTo(p2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedPersonList(super.getComparator());","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof ContactSortPhoneAscendingCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":28}},{"path":"src/main/java/taskbook/logic/commands/contacts/ContactSortPhoneDescendingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.contacts;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts contacts by descending phone number.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class ContactSortPhoneDescendingCommand extends ContactSortCommand {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by descending phone number order.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"            + \"Contacts with no phone number are at the end of the list in no particular order.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"    public ContactSortPhoneDescendingCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"        super((p1, p2) -\u003e p1.compareByPhoneNumberDescendingTo(p2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedPersonList(super.getComparator());","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof ContactSortPhoneDescendingCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":28}},{"path":"src/main/java/taskbook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"xiaobill8":3}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":" * Abstract command to add a general task to the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"public abstract class TaskAddCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Person not found in task book!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_DUPLICATE_TASK_FAILURE \u003d \"Task cannot be added.\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"            + \"Task already exists in task book.\";","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    private final Name name;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    private final Description description;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    private final Assignment assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskAddCommand to add a task with the specified","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"     * {@code Name name}, {@code Description description} and {@code Task.Assignment assignment}.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the new task.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     * @param assignment Represents task assigned to user or others.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    protected TaskAddCommand(Name name, Description description, Assignment assignment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        requireAllNonNull(name, description, assignment);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"     * Creates a TaskAddCommand to add a task with the specified","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Name name}, {@code Description description} and {@code Task.Assignment assignment}.","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"bananamonkey4655"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"bananamonkey4655"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"     * @param description The description for the new task.","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"     * @param assignment Represents task assigned to user or others.","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"     * @param tags Tags assigned to task.","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"    protected TaskAddCommand(Name name, Description description, Assignment assignment, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"        requireAllNonNull(name, description, assignment, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"    public Task createTodo() {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"        return new Todo(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"    public Task createDeadline(LocalDate date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        return new Deadline(name, assignment, description, isDone, date , tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"    public Task createEvent(LocalDate date) {","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"        return new Event(name, assignment, description, isDone, date , tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"     * Checks whether a person with specified name exist in the task book model,","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"     * throws an exception if no such person exist.","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"     * @param model Task book model to find person.","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"     * @throws CommandException Person not found exception thrown if no such person exist.","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"    public void checkPersonNameExist(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"        if (name.fullName.equalsIgnoreCase(Name.SELF.fullName)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"            return;","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        Person personToAddTask \u003d model.findPerson(name);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"        if (personToAddTask \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"        if (!(other instanceof TaskAddCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"        TaskAddCommand otherCommand \u003d (TaskAddCommand) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"        return otherCommand.name.equals(name)","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 otherCommand.description.equals(description)","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 otherCommand.assignment.equals(assignment)","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherCommand.isDone \u003d\u003d isDone","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherCommand.tags.equals(tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dexter-sim":87,"bananamonkey4655":28,"xiaobill8":3}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_FROM;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_TO;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":" * Adds a deadline to the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"public class TaskDeadlineCommand extends TaskAddCommand {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"                    + \": Adds a deadline to the task book.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"                    + \"Parameters:\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"                    + PREFIX_ASSIGN_FROM + \"NAME \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"                    + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"                    + PREFIX_ASSIGN_TO + \"NAME \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"                    + \"[\" + PREFIX_TAG + \"TAG]...\\n\";","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New deadline added: %1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskDeadlineCommand to add a task with the specified","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"     * {@code Name name}, {@code Description description},","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"     * {@code Task.Assignment assignment} and {@code LocalDate date}.","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the new deadline.","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"     * @param assignment Represents deadline assigned to user or others.","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"     * @param date Represents the date for the new deadline.","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    public TaskDeadlineCommand(Name name, Description description, Assignment assignment, LocalDate date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        super(name, description, assignment);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"     * Creates a TaskDeadlineCommand to add a task with the specified","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Name name}, {@code Description description},","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Task.Assignment assignment} and {@code LocalDate date}.","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"     * @param description The description for the new deadline.","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"     * @param assignment Represents deadline assigned to user or others.","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"     * @param date Represents the date for the new deadline.","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"    public TaskDeadlineCommand(Name name, Description description, Assignment assignment,","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"                               LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, description, assignment, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"        checkPersonNameExist(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        Task newTask \u003d createDeadline(date);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"        if (model.hasTask(newTask)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK_FAILURE);","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"        model.addTask(newTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newTask));","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"        if (!(other instanceof TaskDeadlineCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand otherCommand \u003d (TaskDeadlineCommand) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"        return super.equals(other) \u0026\u0026 date.equals(otherCommand.date);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dexter-sim":79,"bananamonkey4655":26,"seetohjinwei":1}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":" * Deletes a task identified using it\u0027s displayed index from the task book.","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"public class TaskDeleteCommand extends Command {","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"            + \": Deletes the task identified by the index number.\\n\"","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"            + \"Parameters: \" + CliSyntax.PREFIX_INDEX + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"            + \"Example: \" + TaskCategoryParser.CATEGORY_WORD + \" \"","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            + COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \"1\";","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Task deleted: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskDeleteCommand to delete a task with the specified {@code Index index}.","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     * @param targetIndex Index of the Task in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public TaskDeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"                || (other instanceof TaskDeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 targetIndex.equals(((TaskDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":22,"Nephelite":1,"bananamonkey4655":18,"seetohjinwei":14,"xiaobill8":10}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":" * Edits the details of an existing task in the task book.","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"public class TaskEditCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        + \"by the index number used in the displayed task list. \\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"        + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"        + \"Parameters: \\n\" + PREFIX_INDEX + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        + \"[\" + PREFIX_ASSIGN_FROM + \"NAME] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        + \"[\" + PREFIX_ASSIGN_TO + \"NAME] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"        + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        + \"Example: \" + TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1 \"","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        + PREFIX_ASSIGN_FROM + \"Jackie Chan \"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        + PREFIX_DESCRIPTION + \"Practice kick 10000 times\";","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task book.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_ASSIGNOR_ASSIGNEE \u003d \"A task cannot have both an assignor and an assignee.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_INVALID_PARAMETER \u003d \"Invalid parameter: %s.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Person not found in task book!\";","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    private final Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"    public TaskEditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        requireAllNonNull(index, editTaskDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        Task editedTask \u003d taskToEdit.createEditedCopy(editTaskDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        if (!editedTask.isSelfAssigned()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"            Person personToFind \u003d model.findPerson(editedTask.getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"            if (personToFind \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"                throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredTaskListPredicate(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        if (!(other instanceof TaskEditCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"        TaskEditCommand e \u003d (TaskEditCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"            \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Nephelite":1,"bananamonkey4655":6,"seetohjinwei":103,"xiaobill8":2}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":" * Adds an event to the task book.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"public class TaskEventCommand extends TaskAddCommand {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"                    + \": Adds an event to the task book.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"                    + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"                    + \"Parameters:\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"                    + PREFIX_ASSIGN_FROM + \"NAME \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"                    + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"                    + PREFIX_ASSIGN_TO + \"NAME \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"                    + \"[\" + PREFIX_TAG + \"TAG]...\\n\";","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskEventCommand to add a task with the specified","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"     * {@code Name name}, {@code Description description},","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"     * {@code Task.Assignment assignment} and {@code LocalDate date}.","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the new event.","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"     * @param assignment Represents event assigned to user or others.","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"     * @param date Represents the date for the new event.","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    public TaskEventCommand(Name name, Description description, Assignment assignment, LocalDate date) {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        super(name, description, assignment);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"     * Creates a TaskEventCommand to add a task with the specified","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Name name}, {@code Description description},","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Task.Assignment assignment} and {@code LocalDate date}.","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"     * @param description The description for the new event.","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"     * @param assignment Represents event assigned to user or others.","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"     * @param date Represents the date for the new event.","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"    public TaskEventCommand(Name name, Description description, Assignment assignment, LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, description, assignment, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"        checkPersonNameExist(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"        Task newTask \u003d createEvent(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        if (model.hasTask(newTask)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK_FAILURE);","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"        model.addTask(newTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newTask));","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"        if (!(other instanceof TaskEventCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand otherCommand \u003d (TaskEventCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"        return super.equals(other) \u0026\u0026 date.equals(otherCommand.date);","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":79,"bananamonkey4655":25,"seetohjinwei":1}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_QUERY;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":" * Finds all tasks matching a given query exactly in name or description.","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":" * Query matching is case insensitive.","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"public class TaskFindCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying matching tasks.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"            + \": Searches all task descriptions and names that contain the given query.\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"            + PREFIX_QUERY + \"QUERY\\n\"","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"            + PREFIX_ASSIGNMENT + \"ASSIGNMENT\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"            + PREFIX_DONE + \"DONE\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"            + \"Only tasks with exact matches with QUERY will be displayed. Can be multiple words. Case insensitive.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"            + \"ASSIGNMENT is either FROM or TO for Assigned by or Assigned to respectively.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            + \"DONE is either X or O for done or not done respectively.\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"            + \"Parameters can be in any ordering, and only one must be present.\";","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    private String query;","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    private String assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    private String done;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"     * Creates a TaskFindCommand to search for tasks with the specified {@code Predicate\u003cTask\u003e query}.","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"     * @param query","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    public TaskFindCommand(Predicate\u003cTask\u003e predicate, String query, String asssignment, String done) {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        this.query \u003d query;","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        this.assignment \u003d asssignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    public String getFilters() {","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        if (query !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"            builder.append(\"Query: \" + query + \"\\n\");","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        if (assignment !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"            builder.append(\"Assignment: \" + assignment + \"\\n\");","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        if (done !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"            builder.append(done.equalsIgnoreCase(\"x\") ? \"Tasks are done.\" : \"Task are not done.\");","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredTaskListPredicate(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"                                + model.getFilteredTaskList().size() + \" tasks listed.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"                                + getFilters()));","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"        if (!(other instanceof TaskFindCommand)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand command \u003d (TaskFindCommand) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"        boolean sameQuery \u003d this.query \u003d\u003d null || command.query \u003d\u003d null","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"                            ? this.query \u003d\u003d command.query","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"                            : this.query.toUpperCase().equals(command.query.toUpperCase());","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"        boolean sameAssignment \u003d this.assignment \u003d\u003d null || command.assignment \u003d\u003d null","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":"                                    ? this.assignment \u003d\u003d command.assignment","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"                                    : this.assignment.equals(command.assignment);","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"        boolean sameDone \u003d this.done \u003d\u003d null || command.done \u003d\u003d null","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"                            ? this.done \u003d\u003d command.done","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"                            : this.done.equals(command.done);","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"        return sameQuery \u0026\u0026 sameAssignment \u0026\u0026 sameDone;","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Nephelite":91}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":" * Lists all tasks in the task book to the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"public class TaskListCommand extends Command {","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public static final String MESSAGE_USAGE \u003d ContactCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"        + \": Shows a list of all tasks assigned by the user to contacts in the taskbook\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"        model.updateFilteredTaskListPredicate(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":2,"bananamonkey4655":7,"seetohjinwei":13,"xiaobill8":4}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":" * Marks the completion status of an existing task in the task book.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"public class TaskMarkCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"                    + \": Marks the task identified by the index number as done.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"                    + \"Parameters: \" + CliSyntax.PREFIX_INDEX + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"                    + \"Example: \" + TaskCategoryParser.CATEGORY_WORD + \" \"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"                    + COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \"1\";","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Task marked: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskMarkCommand to mark a task with the specified {@code Index index}.","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     * @param targetIndex Index of the Task in the task book.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    public TaskMarkCommand(Index targetIndex) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        editTaskDescriptor.setIsDone(true);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        Task taskToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        Task markedTask \u003d taskToMark.createEditedCopy(editTaskDescriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        model.setTask(taskToMark, markedTask);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredTaskListPredicate(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"                || (other instanceof TaskMarkCommand // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 targetIndex.equals(((TaskMarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"dexter-sim":69,"Nephelite":1,"seetohjinwei":1}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskSortAddedChronologicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the task list in the order of the tasks were added to Task Book.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class TaskSortAddedChronologicalCommand extends TaskSortCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by time added into Task Book\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public TaskSortAddedChronologicalCommand() {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"        super(null, MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"        model.resetSortedTaskList();","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof TaskSortAddedChronologicalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Nephelite":26}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":" * Sorts the list of tasks.","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"public abstract class TaskSortCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"                    + \": Sorts list of tasks in some order.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"                    + \"Available sorting commands:\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"                    + \"a: sorts description of tasks in alphabetical order.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"                    + \"ra: sorts description of tasks in reverse alphabetical order.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"                    + \"ca: sorts chronologically, by time tasks were added.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"                    + \"cd: sorts chronologically, by dates associated with tasks. Tasks with no dates at end of list.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"                    + \"rcd: sorts reverse chronologically, by dates associated with tasks. \"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"                    + \"Tasks with no dates at end of list\";","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Tasks sorted\";","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    public final String messageSortType;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    private final Comparator\u003cTask\u003e comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"     * Creates a tasks sorting command.","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"     * @param comparator","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"     * @param sortType","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    public TaskSortCommand(Comparator\u003cTask\u003e comparator, String sortType) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        this.messageSortType \u003d sortType;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    public Comparator\u003cTask\u003e getComparator() {","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        return comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Nephelite":41}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskSortDateChronologicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the task list in chronological order of the tasks\u0027 dates.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" * Tasks without dates are left at the end of the list, and in no guaranteed order.","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"public class TaskSortDateChronologicalCommand extends TaskSortCommand {","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by ascending dates associated to tasks.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"            + \"Tasks with no date are at the end of the list in no particular order.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    public TaskSortDateChronologicalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"        super((t1, t2) -\u003e t1.compareByChronologicalDateTo(t2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedTaskList(super.getComparator());","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof TaskSortDateChronologicalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":29}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskSortDateReverseChronologicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the task list in chronological order of the tasks\u0027 dates.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" * Tasks without dates are left at the end of the list, and in no guaranteed order.","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"public class TaskSortDateReverseChronologicalCommand extends TaskSortCommand {","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by descending dates associated to tasks.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"            + \"Tasks with no date are at the end of the list in no particular order.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    public TaskSortDateReverseChronologicalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"        super((t1, t2) -\u003e t1.compareByReverseChronologicalDateTo(t2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedTaskList(super.getComparator());","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof TaskSortDateReverseChronologicalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":29}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskSortDescriptionAlphabeticalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the task list descriptions in alphabetical order.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class TaskSortDescriptionAlphabeticalCommand extends TaskSortCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by their descriptions in alphabetical order.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public TaskSortDescriptionAlphabeticalCommand() {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"        super((t1, t2) -\u003e t1.compareByDescriptionAlphabeticalTo(t2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedTaskList(super.getComparator());","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof TaskSortDescriptionAlphabeticalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Nephelite":27}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskSortDescriptionReverseAlphabeticalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":" * Sorts the task list descriptions in reverse alphabetical order.","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"public class TaskSortDescriptionReverseAlphabeticalCommand extends TaskSortCommand {","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    public static final String MESSAGE_SORT_TYPE \u003d \" by their descriptions in reverse alphabetical order.\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    public TaskSortDescriptionReverseAlphabeticalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"        super((t1, t2) -\u003e t1.compareByDescriptionReverseAlphabeticalTo(t2), MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedTaskList(super.getComparator());","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_TASK_SUCCESS + super.messageSortType));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"                || (other instanceof TaskSortDescriptionReverseAlphabeticalCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":27}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_FROM;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_TO;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":" * Adds a to-do to the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"public class TaskTodoCommand extends TaskAddCommand {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"            + \": Adds a todo to the task book.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"            + PREFIX_ASSIGN_FROM + \"NAME \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"            + PREFIX_ASSIGN_TO + \"NAME \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + \"[\" + PREFIX_TAG + \"TAG]...\\n\";","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New todo added: %1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskTodoCommand to add a task with the specified","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"     * {@code Name name}, {@code Description description} and {@code Task.Assignment assignment}.","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * @param description The description for the new to-do.","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     * @param assignment Represents to-do assigned to user or others.","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    public TaskTodoCommand(Name name, Description description, Assignment assignment) {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        super(name, description, assignment);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"     * Creates a TaskTodoCommand to add a task with the specified","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Name name}, {@code Description description} and {@code Task.Assignment assignment}.","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"bananamonkey4655"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"     * @param name Name of the Person in the task book.","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"     * @param description The description for the new to-do.","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"     * @param assignment Represents to-do assigned to user or others.","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"bananamonkey4655"},"content":"     * @param tags Tags assigned to task.","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"    public TaskTodoCommand(Name name, Description description, Assignment assignment, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, description, assignment, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        checkPersonNameExist(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"        Task newTask \u003d createTodo();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"        if (model.hasTask(newTask)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK_FAILURE);","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"        model.addTask(newTask);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newTask));","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"        if (!(other instanceof TaskTodoCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"        return super.equals(other);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":41,"bananamonkey4655":27,"seetohjinwei":11,"xiaobill8":12}},{"path":"src/main/java/taskbook/logic/commands/tasks/TaskUnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands.tasks;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.List;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":" * Unmarks the completion status of an existing task in the task book.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"public class TaskUnmarkCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"            TaskCategoryParser.CATEGORY_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"                    + \": Marks the task identified by the index number as undone.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"                    + \"Parameters: \" + CliSyntax.PREFIX_INDEX + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"                    + \"Example: \" + TaskCategoryParser.CATEGORY_WORD + \" \"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"                    + COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \"1\";","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Task unmarked: %1$s\";","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * Creates a TaskUnmarkCommand to mark a task with the specified {@code Index index}.","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     * @param targetIndex Index of the Task in the task book.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    public TaskUnmarkCommand(Index targetIndex) {","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getSortedTaskList();","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        editTaskDescriptor.setIsDone(false);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        Task taskToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        Task unmarkedTask \u003d taskToUnmark.createEditedCopy(editTaskDescriptor);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        model.setTask(taskToUnmark, unmarkedTask);","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredTaskListPredicate(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"                || (other instanceof TaskUnmarkCommand // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 targetIndex.equals(((TaskUnmarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"dexter-sim":69,"Nephelite":1,"seetohjinwei":1}},{"path":"src/main/java/taskbook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"xiaobill8":1}},{"path":"src/main/java/taskbook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"xiaobill8":1}},{"path":"src/main/java/taskbook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"#/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    public static final Prefix PREFIX_ASSIGN_TO \u003d new Prefix(\"o/\");","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    public static final Prefix PREFIX_ASSIGN_FROM \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    public static final Prefix PREFIX_SORT_TYPE \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    public static final Prefix PREFIX_HELP_COMMAND \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    public static final Prefix PREFIX_QUERY \u003d new Prefix(\"q/\");","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    public static final Prefix PREFIX_ASSIGNMENT \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public static final Prefix PREFIX_DONE \u003d new Prefix(\"x/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dexter-sim":3,"Nephelite":4,"bananamonkey4655":1,"-":12,"seetohjinwei":1,"xiaobill8":3}},{"path":"src/main/java/taskbook/logic/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_DATE_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":" * Parses user input\u0027s date into internal Date object.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":" * Accepts multiple Date formats.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"public class DateParser {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    private static final DateTimeFormatter PARSER_OPTIONAL_FORMATS \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        .appendOptional(DateTimeFormatter.ISO_LOCAL_DATE)","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        .appendOptional(DateTimeFormatter.ofPattern(\"uuuu-MM-dd\"))","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        .appendOptional(DateTimeFormatter.ofPattern(\"MMM dd uuuu\"))","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        .appendOptional(DateTimeFormatter.ofPattern(\"MM dd uuuu\"))","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        .appendOptional(DateTimeFormatter.ofPattern(\"dd MMM uuuu\"))","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        .toFormatter().withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-30"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"     * Parses {@code userInput} into a Date object and returns it.","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected formats.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    public static LocalDate parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"            return LocalDate.parse(userInput, PARSER_OPTIONAL_FORMATS);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dexter-sim":1,"seetohjinwei":38}},{"path":"src/main/java/taskbook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"xiaobill8":3}},{"path":"src/main/java/taskbook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        if (trimmedName.equalsIgnoreCase(Name.SELF.fullName)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"            return Name.SELF;","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        assert trimmedName.length() \u003e 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":131,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":132,"author":{"gitId":"dexter-sim"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-09-25"},{"lineNumber":133,"author":{"gitId":"dexter-sim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-25"},{"lineNumber":134,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":135,"author":{"gitId":"dexter-sim"},"content":"     * @param description String containing a task description.","lastModifiedDate":"2022-09-25"},{"lineNumber":136,"author":{"gitId":"dexter-sim"},"content":"     * @return Description containing the trimmed description of a task.","lastModifiedDate":"2022-09-25"},{"lineNumber":137,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":138,"author":{"gitId":"dexter-sim"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-09-25"},{"lineNumber":139,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-09-25"},{"lineNumber":140,"author":{"gitId":"dexter-sim"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-09-25"},{"lineNumber":141,"author":{"gitId":"dexter-sim"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":142,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":143,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":144,"author":{"gitId":"dexter-sim"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-09-25"},{"lineNumber":145,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":146,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"dexter-sim"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"dexter-sim"},"content":"     * @param date String that represents a date with a date format.","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"dexter-sim"},"content":"     * @return LocalDate containing the date of a task.","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"dexter-sim"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"dexter-sim"},"content":"        return DateParser.parse(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dexter-sim":28,"-":115,"xiaobill8":14}},{"path":"src/main/java/taskbook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"xiaobill8":1}},{"path":"src/main/java/taskbook/logic/parser/TaskBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.HelpCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.categoryless.CategorylessParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":" * Parses user input into different categories of commands.","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"public class TaskBookParser {","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     * Used for joining the various category words into a regex-compatible format.","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     * When updating the command categories, there is a need to update this too.","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    private static final String CATEGORIES \u003d String.join(\"|\",","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        ContactCategoryParser.CATEGORY_WORD,","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        ContactCategoryParser.CATEGORY_WORD_SHORTCUT,","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        TaskCategoryParser.CATEGORY_WORD,","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"        TaskCategoryParser.CATEGORY_WORD_SHORTCUT","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    );","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    private static final String BASIC_COMMAND_REGEX \u003d","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"        String.format(\"(?:(?\u003ccategory\u003e%s)\\\\s)?(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\", CATEGORIES);","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"     * Used for initial separation of commands into categories.","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(BASIC_COMMAND_REGEX);","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        String filteredInput \u003d removeNonAscii(userInput);","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(filteredInput.trim());","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        final String category \u003d matcher.group(\"category\");","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"            return CategorylessParser.parseCommand(commandWord, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        } else if (category.equals(ContactCategoryParser.CATEGORY_WORD)","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"                || category.equals(ContactCategoryParser.CATEGORY_WORD_SHORTCUT)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"            return ContactCategoryParser.parseCommand(commandWord, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        } else if (category.equals(TaskCategoryParser.CATEGORY_WORD)","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"                || category.equals(TaskCategoryParser.CATEGORY_WORD_SHORTCUT)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"            return TaskCategoryParser.parseCommand(commandWord, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        throw new ParseException(Messages.MESSAGE_UNKNOWN_CATEGORY);","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"     * Removes all non ascii characters from a string.","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"    private String removeNonAscii(String string) {","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        return string.replaceAll(\"\\\\P{InBasic_Latin}\", \"\");","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nephelite":7,"-":29,"seetohjinwei":29,"xiaobill8":9}},{"path":"src/main/java/taskbook/logic/parser/categoryless/CategorylessParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.categoryless;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.categoryless.ExitCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.HelpCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.RedoCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.UndoCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":" * Parses user input without a category.","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"public class CategorylessParser {","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * @param commandWord Command word provided by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     * @param arguments   Arguments provided by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"     * @return The command based on the user command word and arguments.","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    public static Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        default:","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"seetohjinwei":31,"xiaobill8":6}},{"path":"src/main/java/taskbook/logic/parser/categoryless/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser.categoryless;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_HELP_COMMAND;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.HelpCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":" * Parses input arguments and creates a new HelpCommand object.","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    private static final Map\u003cString, HelpCommand.CommandWord\u003e mapToEnum;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    static {","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        mapToEnum \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        for (HelpCommand.CommandWord cw : HelpCommand.CommandWord.values()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"            mapToEnum.put(cw.toString(), cw);","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_HELP_COMMAND);","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        if (argumentMultimap.getValue(PREFIX_HELP_COMMAND).isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"            return new HelpCommand(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        String commandArgument \u003d argumentMultimap.getValue(PREFIX_HELP_COMMAND).get();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand.CommandWord commandWord \u003d parseToEnum(commandArgument);","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        return new HelpCommand(commandWord);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"    private HelpCommand.CommandWord parseToEnum(String commandArgument) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        if (!mapToEnum.containsKey(commandArgument)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        return mapToEnum.get(commandArgument);","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"seetohjinwei":52}},{"path":"src/main/java/taskbook/logic/parser/contacts/ContactAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":" * Parses input arguments and creates a new ContactAddCommand object","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"public class ContactAddCommandParser implements Parser\u003cContactAddCommand\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"     * Parses the given {@code String} of arguments in the context of the ContactAddCommand","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"     * and returns an ContactAddCommand object for execution.","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    public ContactAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"                        args,","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"                        CliSyntax.PREFIX_PHONE,","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"                        CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"                        CliSyntax.PREFIX_ADDRESS,","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"                argMultimap,","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"                CliSyntax.PREFIX_NAME)","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).isPresent()","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"                ? argMultimap.getValue(CliSyntax.PREFIX_PHONE).get()","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                : Phone.NO_PHONE_PROVIDED);","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).isPresent()","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"                ? argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get()","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"                : Email.NO_EMAIL_PROVIDED);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).isPresent()","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"                ? argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get()","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"                : Address.NO_ADDRESS_PROVIDED);","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        return new ContactAddCommand(person);","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"dexter-sim":10,"xiaobill8":65}},{"path":"src/main/java/taskbook/logic/parser/contacts/ContactCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":" * Parses user input of contact category.","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"public class ContactCategoryParser {","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public static final String CATEGORY_WORD \u003d \"contact\";","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    public static final String CATEGORY_WORD_SHORTCUT \u003d \"c\";","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"     * @param commandWord Command word provided by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"     * @param arguments   Arguments provided by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"     * @return The command based on the user command word and arguments.","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    public static Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"        case ContactAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"            return new ContactAddCommandParser().parse(arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        case ContactEditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"            return new ContactEditCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        case ContactDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"            return new ContactDeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        case ContactListCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"            return new ContactListCommand();","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        case ContactFindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"            return new ContactFindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        case ContactSortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            return new ContactSortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        default:","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Nephelite":7,"seetohjinwei":31,"xiaobill8":8}},{"path":"src/main/java/taskbook/logic/parser/contacts/ContactDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":" * Parses input arguments and creates a new ContactDeleteCommand object","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"public class ContactDeleteCommandParser implements Parser\u003cContactDeleteCommand\u003e {","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     * Parses the given {@code String} of arguments in the context of the ContactDeleteCommand","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"     * and returns a ContactDeleteCommand object for execution.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    public ContactDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_INDEX)","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"                    ContactDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        return new ContactDeleteCommand(index);","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dexter-sim":14,"-":12,"seetohjinwei":6,"xiaobill8":17}},{"path":"src/main/java/taskbook/logic/parser/contacts/ContactEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":" * Parses input arguments and creates a new ContactEditCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"public class ContactEditCommandParser implements Parser\u003cContactEditCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    public ContactEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"            args, PREFIX_INDEX, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor editPersonDescriptor \u003d new ContactEditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(ContactEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        return new ContactEditCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"seetohjinwei":19,"-":58,"xiaobill8":9}},{"path":"src/main/java/taskbook/logic/parser/contacts/ContactFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":" * Parses input arguments and creates a new ContactFindCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"public class ContactFindCommandParser implements Parser\u003cContactFindCommand\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"     * Parses the given {@code String} of arguments in the context of the ContactFindCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"     * and returns an ContactSortCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    public ContactFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_QUERY);","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_QUERY)","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"        String query \u003d argMultimap.getValue(CliSyntax.PREFIX_QUERY)","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"                .orElseThrow(() -\u003e new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"                                    ContactFindCommand.MESSAGE_USAGE)));","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        return new ContactFindCommand(p -\u003e p.isQueryInPerson(query), query);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":45}},{"path":"src/main/java/taskbook/logic/parser/contacts/ContactSortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameAlphabeticalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameReverseAlphabeticalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortPhoneAscendingCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortPhoneDescendingCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.contacts.enums.SortTypes;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":" * Parses input arguments and creates a new ContactSortCommand.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"public class ContactSortCommandParser implements Parser\u003cContactSortCommand\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    private static final Pattern SORT \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_SORT_TYPE.getPrefix()));","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskSortCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"     * and returns an TaskSortCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    public ContactSortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        if (args.contains(CliSyntax.PREFIX_ASSIGN_FROM.getPrefix())","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 args.contains(CliSyntax.PREFIX_ASSIGN_TO.getPrefix())) {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"        if (SORT.matcher(args).matches()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_SORT_TYPE);","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"                ContactSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    private ContactSortCommand parseWithPrefix(String args, Prefix firstPrefix) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, firstPrefix);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"        if (!arePrefixesPresent(argMultimap, firstPrefix)","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        SortTypes sortTypes \u003d SortTypes.parse(argMultimap.getValue(CliSyntax.PREFIX_SORT_TYPE).orElse(\"INVALID\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        switch (sortTypes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        case NAME_ALPHABETICAL:","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"            return new ContactSortNameAlphabeticalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"        case NAME_REVERSE_ALPHABETICAL:","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"            return new ContactSortNameReverseAlphabeticalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"        case CHRONOLOGICAL_ADDED:","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"            return new ContactSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"        case PHONE_ASCENDING:","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"            return new ContactSortPhoneAscendingCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        case PHONE_DESCENDING:","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"            return new ContactSortPhoneDescendingCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        default:","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"                    ContactSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":83}},{"path":"src/main/java/taskbook/logic/parser/contacts/enums/SortTypes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser.contacts.enums;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":" * Represents the different types of sorts that TaskBook supports for its task list","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"public enum SortTypes {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"    NAME_ALPHABETICAL(\"a\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"    NAME_REVERSE_ALPHABETICAL(\"ra\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"    CHRONOLOGICAL_ADDED(\"ca\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"    PHONE_ASCENDING(\"p\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    PHONE_DESCENDING(\"rp\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    INVALID(\"INVALID_SORT_TYPE\");","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    public final String flag;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    private SortTypes(String flag) {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        return flag;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"     * Returns a SortType that matches the input String.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"     * @param str Input string.","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"     * @return the matching SortType.","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    public static SortTypes parse(String str) {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        switch (str) {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        case \"a\":","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"            return NAME_ALPHABETICAL;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"        case \"ra\":","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            return NAME_REVERSE_ALPHABETICAL;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        case \"ca\":","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"            return CHRONOLOGICAL_ADDED;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        case \"p\":","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"            return PHONE_ASCENDING;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        case \"rp\":","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"            return PHONE_DESCENDING;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        default:","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            return INVALID;","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":44}},{"path":"src/main/java/taskbook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"xiaobill8":2}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeadlineCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEventCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskFindCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":" * Parses user input of task category.","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"public class TaskCategoryParser {","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    public static final String CATEGORY_WORD \u003d \"task\";","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    public static final String CATEGORY_WORD_SHORTCUT \u003d \"t\";","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"     * @param commandWord Command word provided by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"     * @param arguments   Arguments provided by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     * @return The command based on the user command word and arguments.","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    public static Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        case TaskTodoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"            return new TaskTodoCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        case TaskDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"            return new TaskDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        case TaskEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"            return new TaskEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        case TaskEditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"            return new TaskEditCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        case TaskMarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"            return new TaskMarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        case TaskUnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"            return new TaskUnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        case TaskDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"            return new TaskDeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        case TaskListCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"            return new TaskListCommand();","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"        case TaskSortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"            return new TaskSortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"        case TaskFindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"            return new TaskFindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        default:","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":15,"Nephelite":7,"seetohjinwei":29,"xiaobill8":7}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeadlineCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskDeadlineCommand object.","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"public class TaskDeadlineCommandParser implements Parser\u003cTaskDeadlineCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    private static final Pattern ASSIGN_TO_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_ASSIGN_TO.getPrefix()));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    private static final Pattern ASSIGN_FROM_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_ASSIGN_FROM.getPrefix()));","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskDeadlineCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * and returns an TaskDeadlineCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    public TaskDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        if (args.contains(CliSyntax.PREFIX_ASSIGN_FROM.getPrefix())","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 args.contains(CliSyntax.PREFIX_ASSIGN_TO.getPrefix())) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        if (ASSIGN_TO_COMMAND_FORMAT.matcher(args).matches()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_ASSIGN_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        if (ASSIGN_FROM_COMMAND_FORMAT.matcher(args).matches()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_ASSIGN_FROM);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"        return parseWithoutPrefix(args);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    private TaskDeadlineCommand parseWithPrefix(String args, Prefix firstPrefix) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"                ArgumentTokenizer.tokenize(args, firstPrefix, CliSyntax.PREFIX_DESCRIPTION,","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"                        CliSyntax.PREFIX_DATE, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"        if (!arePrefixesPresent(argMultimap, firstPrefix, CliSyntax.PREFIX_DESCRIPTION, CliSyntax.PREFIX_DATE)","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(firstPrefix).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(CliSyntax.PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        Assignment assignment \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"                firstPrefix.equals(CliSyntax.PREFIX_ASSIGN_FROM)","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"                        ? Assignment.FROM","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"                        : Assignment.TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"        return new TaskDeadlineCommand(name, description, assignment, date, tagList);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"    private TaskDeadlineCommand parseWithoutPrefix(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_DESCRIPTION, CliSyntax.PREFIX_DATE,","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DESCRIPTION, CliSyntax.PREFIX_DATE)","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(CliSyntax.PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"Nephelite"},"content":"        return new TaskDeadlineCommand(Name.SELF, description, Assignment.TO, date, tagList);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":83,"Nephelite":4,"bananamonkey4655":6,"xiaobill8":15}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskDeleteCommand object.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"public class TaskDeleteCommandParser implements Parser\u003cTaskDeleteCommand\u003e {","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskDeleteCommand","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"     * and returns a TaskDeleteCommand object for execution.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"    public TaskDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_INDEX)","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"                    TaskDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        return new TaskDeleteCommand(index);","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":17,"seetohjinwei":14,"xiaobill8":17}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_ASSIGN_TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskEditCommand object.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"public class TaskEditCommandParser implements Parser\u003cTaskEditCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    public TaskEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"            args, PREFIX_INDEX, PREFIX_ASSIGN_TO, PREFIX_ASSIGN_FROM, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_INDEX).isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_ASSIGN_TO).isPresent()","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"            \u0026\u0026 argMultimap.getValue(PREFIX_ASSIGN_FROM).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(TaskEditCommand.MESSAGE_ASSIGNOR_ASSIGNEE);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_ASSIGN_TO).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_ASSIGN_TO).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"            editTaskDescriptor.setAssignment(Assignment.TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_ASSIGN_FROM).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_ASSIGN_FROM).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"            editTaskDescriptor.setAssignment(Assignment.FROM);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"            editTaskDescriptor.setDescription(","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"                ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"            editTaskDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"            throw new ParseException(TaskEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        return new TaskEditCommand(index, editTaskDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"bananamonkey4655"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"bananamonkey4655"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"bananamonkey4655"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"bananamonkey4655"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":1,"bananamonkey4655":25,"seetohjinwei":72}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEventCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskEventCommand object.","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"public class TaskEventCommandParser implements Parser\u003cTaskEventCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    private static final Pattern ASSIGN_TO_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_ASSIGN_TO.getPrefix()));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    private static final Pattern ASSIGN_FROM_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_ASSIGN_FROM.getPrefix()));","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskEventCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"     * and returns an TaskEventCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    public TaskEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        if (args.contains(CliSyntax.PREFIX_ASSIGN_FROM.getPrefix())","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 args.contains(CliSyntax.PREFIX_ASSIGN_TO.getPrefix())) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        if (ASSIGN_TO_COMMAND_FORMAT.matcher(args).matches()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_ASSIGN_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        if (ASSIGN_FROM_COMMAND_FORMAT.matcher(args).matches()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_ASSIGN_FROM);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"        return parseWithoutPrefix(args);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    private TaskEventCommand parseWithPrefix(String args, Prefix firstPrefix) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"                ArgumentTokenizer.tokenize(args, firstPrefix, CliSyntax.PREFIX_DESCRIPTION,","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"                        CliSyntax.PREFIX_DATE, CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"        if (!arePrefixesPresent(argMultimap, firstPrefix, CliSyntax.PREFIX_DESCRIPTION, CliSyntax.PREFIX_DATE)","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(firstPrefix).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(CliSyntax.PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        Assignment assignment \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"                firstPrefix.equals(CliSyntax.PREFIX_ASSIGN_FROM)","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"                        ? Assignment.FROM","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"                        : Assignment.TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"        return new TaskEventCommand(name, description, assignment, date, tagList);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"    private TaskEventCommand parseWithoutPrefix(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_DESCRIPTION, CliSyntax.PREFIX_DATE,","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DESCRIPTION, CliSyntax.PREFIX_DATE)","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(CliSyntax.PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"Nephelite"},"content":"        return new TaskEventCommand(Name.SELF, description, Assignment.TO, date, tagList);","lastModifiedDate":"2022-10-26"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":83,"Nephelite":4,"bananamonkey4655":6,"xiaobill8":15}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskFindCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":" * Parses input arguments and creates a new TaskFindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"public class TaskFindCommandParser implements Parser\u003cTaskFindCommand\u003e {","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskFindCommand","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"     * and returns an TaskSortCommand object for execution.","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    public TaskFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_QUERY,","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"                CliSyntax.PREFIX_ASSIGNMENT, CliSyntax.PREFIX_DONE);","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_QUERY)","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, CliSyntax.PREFIX_ASSIGNMENT)","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DONE)","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DONE)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"            return checkDone(argMultimap);","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"            return afterCheckDone(argMultimap, null);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"    private boolean isDone(String query) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        if (query.equals(\"X\")) {","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"            return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        } else if (query.equals(\"O\")) {","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"                    \"Use X or O for done or not done task query respectively\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand checkDone(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        boolean isDone \u003d getIsDone(argMultimap);","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        return afterCheckDone(argMultimap, (t) -\u003e t.isDone() \u003d\u003d isDone);","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand afterCheckDone(ArgumentMultimap argMultimap,","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"                                           Predicate\u003cTask\u003e predicate) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_ASSIGNMENT)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"            return checkAssignment(argMultimap, predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"            return afterCheckAssignment(argMultimap, predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand checkAssignment(ArgumentMultimap argMultimap,","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"                                            Predicate\u003cTask\u003e predicate) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"        Assignment assignment \u003d getAssignment(argMultimap);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"            return afterCheckAssignment(argMultimap, (t) -\u003e t.isAssignmentCorrect(assignment));","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"            return afterCheckAssignment(argMultimap, predicate.and((t) -\u003e t.isAssignmentCorrect(assignment)));","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand afterCheckAssignment(ArgumentMultimap argMultimap,","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"                                                 Predicate\u003cTask\u003e predicate) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_QUERY)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":"            return checkQuery(argMultimap, predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"            return afterCheckQuery(argMultimap, predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand checkQuery(ArgumentMultimap argMultimap,","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"                                       Predicate\u003cTask\u003e predicate) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"        String query \u003d getQuery(argMultimap);","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"            return afterCheckQuery(argMultimap, (t) -\u003e t.isQueryInTask(query));","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"            return afterCheckQuery(argMultimap, predicate.and((t) -\u003e t.isQueryInTask(query)));","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":100,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand afterCheckQuery(ArgumentMultimap argMultimap,","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"Nephelite"},"content":"                                            Predicate\u003cTask\u003e predicate) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"Nephelite"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"Nephelite"},"content":"                    \"Find arguments are empty.\\n\",","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"Nephelite"},"content":"                    TaskFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"Nephelite"},"content":"        return new TaskFindCommand(predicate,","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"Nephelite"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_QUERY).orElseGet(() -\u003e null),","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"Nephelite"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_ASSIGNMENT).orElseGet(() -\u003e null),","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"Nephelite"},"content":"                argMultimap.getValue(CliSyntax.PREFIX_DONE).orElseGet(() -\u003e null));","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"Nephelite"},"content":"    private boolean getIsDone(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"Nephelite"},"content":"        return isDone(argMultimap.getValue(CliSyntax.PREFIX_DONE)","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":"                .orElseThrow());","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"Nephelite"},"content":"    private String getQuery(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"Nephelite"},"content":"        return argMultimap.getValue(CliSyntax.PREFIX_QUERY)","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"                .orElseThrow(() -\u003e new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-22"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"                        TaskFindCommand.MESSAGE_USAGE)));","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"Nephelite"},"content":"    private Assignment getAssignment(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"Nephelite"},"content":"        return Assignment.parseAssignment(argMultimap.getValue(CliSyntax.PREFIX_ASSIGNMENT)","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"Nephelite"},"content":"                .orElseThrow(() -\u003e new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"Nephelite"},"content":"                        TaskFindCommand.MESSAGE_USAGE))));","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":129,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":130,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"Nephelite"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-22"},{"lineNumber":132,"author":{"gitId":"Nephelite"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-22"},{"lineNumber":133,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":134,"author":{"gitId":"Nephelite"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-22"},{"lineNumber":135,"author":{"gitId":"Nephelite"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-22"},{"lineNumber":136,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":137,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Nephelite":137}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskMarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskMarkCommand object.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"public class TaskMarkCommandParser implements Parser\u003cTaskMarkCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskMarkCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"     * and returns a TaskMarkCommand object for execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public TaskMarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_INDEX)","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"                    TaskMarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        return new TaskMarkCommand(index);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"dexter-sim":49}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskSortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDateChronologicalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDateReverseChronologicalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionAlphabeticalCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionReverseAlphabeticalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.tasks.enums.SortTypes;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskSortCommand.","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"public class TaskSortCommandParser implements Parser\u003cTaskSortCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    private static final Pattern SORT \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_SORT_TYPE.getPrefix()));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskSortCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"     * and returns an TaskSortCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    public TaskSortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        if (args.contains(CliSyntax.PREFIX_ASSIGN_FROM.getPrefix())","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 args.contains(CliSyntax.PREFIX_ASSIGN_TO.getPrefix())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"        if (SORT.matcher(args).matches()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_SORT_TYPE);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"    private TaskSortCommand parseWithPrefix(String args, Prefix firstPrefix) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, firstPrefix);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"        if (!arePrefixesPresent(argMultimap, firstPrefix)","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        SortTypes sortTypes \u003d SortTypes.parse(argMultimap.getValue(CliSyntax.PREFIX_SORT_TYPE).orElse(\"INVALID\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        switch (sortTypes) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        case DESC_ALPHABETICAL:","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"            return new TaskSortDescriptionAlphabeticalCommand();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"        case DESC_REVERSE_ALPHABETICAL:","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"            return new TaskSortDescriptionReverseAlphabeticalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"        case CHRONOLOGICAL_ADDED:","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"            return new TaskSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"        case CHRONOLOGICAL_DATE:","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"            return new TaskSortDateChronologicalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        case REVERSE_CHRONOLOGICAL_DATE:","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"            return new TaskSortDateReverseChronologicalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        default:","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"                    TaskSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"dexter-sim":1,"Nephelite":81}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskTodoCommand object.","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"public class TaskTodoCommandParser implements Parser\u003cTaskTodoCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    private static final Pattern ASSIGN_TO_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_ASSIGN_TO.getPrefix()));","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    private static final Pattern ASSIGN_FROM_COMMAND_FORMAT \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"            Pattern.compile(String.format(\"\\\\s+%s.*\", CliSyntax.PREFIX_ASSIGN_FROM.getPrefix()));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskTodoCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"     * and returns an TaskTodoCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public TaskTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        if (args.contains(CliSyntax.PREFIX_ASSIGN_FROM.getPrefix())","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 args.contains(CliSyntax.PREFIX_ASSIGN_TO.getPrefix())) {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        if (ASSIGN_TO_COMMAND_FORMAT.matcher(args).matches()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_ASSIGN_TO);","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        if (ASSIGN_FROM_COMMAND_FORMAT.matcher(args).matches()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"            return parseWithPrefix(args, CliSyntax.PREFIX_ASSIGN_FROM);","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        return parseWithoutPrefix(args);","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    private TaskTodoCommand parseWithPrefix(String args, Prefix firstPrefix) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, firstPrefix, CliSyntax.PREFIX_DESCRIPTION,","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"                CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(argMultimap, firstPrefix, CliSyntax.PREFIX_DESCRIPTION)","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(firstPrefix).get());","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(CliSyntax.PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        Assignment assignment \u003d","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"                firstPrefix.equals(CliSyntax.PREFIX_ASSIGN_FROM)","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"                ? Assignment.FROM","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"                : Assignment.TO;","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"        return new TaskTodoCommand(name, description, assignment, tagList);","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"    private TaskTodoCommand parseWithoutPrefix(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_DESCRIPTION,","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"                CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DESCRIPTION)","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(CliSyntax.PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"        return new TaskTodoCommand(Name.SELF, description, Assignment.TO, tagList);","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-09-25"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":48,"Nephelite":4,"bananamonkey4655":6,"seetohjinwei":10,"xiaobill8":34}},{"path":"src/main/java/taskbook/logic/parser/tasks/TaskUnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.Prefix;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":" * Parses input arguments and creates a new TaskUnmarkCommand object.","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"public class TaskUnmarkCommandParser implements Parser\u003cTaskUnmarkCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskUnmarkCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"     * and returns a TaskUnmarkCommand object for execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    public TaskUnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_INDEX);","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_INDEX)","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"                    TaskUnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_INDEX).get());","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        return new TaskUnmarkCommand(index);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"dexter-sim":49}},{"path":"src/main/java/taskbook/logic/parser/tasks/enums/SortTypes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser.tasks.enums;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":" * Represents the different types of sorts that TaskBook supports for its task list","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"public enum SortTypes {","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"    DESC_ALPHABETICAL(\"a\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"    DESC_REVERSE_ALPHABETICAL(\"ra\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"    CHRONOLOGICAL_ADDED(\"ca\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"    CHRONOLOGICAL_DATE(\"cd\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    REVERSE_CHRONOLOGICAL_DATE(\"rcd\"),","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"    INVALID(\"INVALID_SORT_TYPE\");","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    public final String flag;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    private SortTypes(String flag) {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"        this.flag \u003d flag;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        return flag;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"     * Returns a SortType that matches the input String.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"     * @param str Input string.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"     * @return the matching SortType.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    public static SortTypes parse(String str) {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        switch (str) {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        case \"a\":","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"            return DESC_ALPHABETICAL;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"        case \"ra\":","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            return DESC_REVERSE_ALPHABETICAL;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        case \"ca\":","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"            return CHRONOLOGICAL_ADDED;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        case \"cd\":","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"            return CHRONOLOGICAL_DATE;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        case \"rcd\":","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"            return REVERSE_CHRONOLOGICAL_DATE;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        default:","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            return INVALID;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Nephelite":44}},{"path":"src/main/java/taskbook/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"     * Sets the user prefs\u0027 task book file path.","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    void setTaskBookFilePath(Path taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"     * Commits the current TaskBook to the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"    void commitTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if possible to revert the TaskBook to the previous state in the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"     * @see VersionedTaskBook#canUndo()","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"    boolean canUndoTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"     * Reverts the TaskBook to the previous state in the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"     * @see VersionedTaskBook#undo()","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    void undoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if possible to revert the TaskBook to the previously undone state in the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"     * @see VersionedTaskBook#canUndo()","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"    boolean canRedoTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"     * Reverts the TaskBook to the previously undone state in the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"     * @see VersionedTaskBook#redo()","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"    void redoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"     * Replaces task book data with the data in {@code taskBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"    void setTaskBook(ReadOnlyTaskBook taskBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"    /** Returns the TaskBook */","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"     * Returns the person with the same name as {@code name} if they exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"    Person findPerson(Name name);","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code task} must not already exist in the task book.","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"bananamonkey4655"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code task} must exist in the task book.","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"bananamonkey4655"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task book.","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if the person can be deleted.","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"    boolean canDeletePerson(Person person);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"     * The person must exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"xiaobill8"},"content":"     * {@code person} must not already exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":142,"author":{"gitId":"xiaobill8"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"xiaobill8"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"bananamonkey4655"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"bananamonkey4655"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"Nephelite"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"Nephelite"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"Nephelite"},"content":"    void updateFilteredTaskListPredicate(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"Nephelite"},"content":"    /** Returns an unmodifiable view of the sorted task list */","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"Nephelite"},"content":"    ObservableList\u003cTask\u003e getSortedTaskList();","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Nephelite"},"content":"     * Updates the comparator of the sorted task list to sort by the given {@code comparator}.","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Nephelite"},"content":"     * @param comparator comparator to sort task list by.","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"Nephelite"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"Nephelite"},"content":"    void updateSortedTaskList(Comparator\u003cTask\u003e comparator);","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"Nephelite"},"content":"     * Updates the comparator of the sorted task list to be null, which sorts tasks by the time they were added.","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"Nephelite"},"content":"    void resetSortedTaskList();","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"Nephelite"},"content":"    void updateFilteredPersonListPredicate(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"Nephelite"},"content":"     * Updates the comparator of the sorted task list to sort by the given {@code comparator}.","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"Nephelite"},"content":"     * @param comparator comparator to sort person list by.","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"Nephelite"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"Nephelite"},"content":"    void updateSortedPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"Nephelite"},"content":"     * Updates the comparator of the sorted person list to be null, which sorts persons by the time they were added.","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"Nephelite"},"content":"    void resetSortedPersonList();","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":191,"author":{"gitId":"Nephelite"},"content":"    /** Returns an unmodifiable view of the sorted person list */","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"Nephelite"},"content":"    ObservableList\u003cPerson\u003e getSortedPersonList();","lastModifiedDate":"2022-10-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Nephelite":33,"bananamonkey4655":21,"-":69,"seetohjinwei":51,"xiaobill8":19}},{"path":"src/main/java/taskbook/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" * Represents the in-memory model of the task book data.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    private final VersionedTaskBook versionedTaskBook;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"    private final SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    private final SortedList\u003cTask\u003e sortedTasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"     * Initializes a ModelManager with the given taskBook and userPrefs.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    public ModelManager(ReadOnlyTaskBook taskBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        requireAllNonNull(taskBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        logger.fine(\"Initializing with task book: \" + taskBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook \u003d new VersionedTaskBook(new TaskBook(taskBook));","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(versionedTaskBook.getPersonList());","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"        sortedPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(versionedTaskBook.getTaskList());","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        sortedTasks \u003d new SortedList\u003c\u003e(filteredTasks);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        this(new TaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        return userPrefs.getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        userPrefs.setTaskBookFilePath(taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"    public void commitTaskBook() {","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canUndoTaskBook() {","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.canUndo();","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"    public void undoTaskBook() {","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canRedoTaskBook() {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.canRedo();","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"    public void redoTaskBook() {","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.redo();","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"    public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.resetData(taskBook);","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"xiaobill8"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook;","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.hasPerson(person);","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"bananamonkey4655"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.findPerson(name);","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"     * A person cannot be deleted if there are tasks associated with that person.","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canDeletePerson(Person person) {","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.canDeletePerson(person);","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.removePerson(target);","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.addPerson(person);","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"Nephelite"},"content":"        updateFilteredPersonListPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.setPerson(target, editedPerson);","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":164,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"bananamonkey4655"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.addTask(task);","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"bananamonkey4655"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.deleteTask(task);","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"seetohjinwei"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.hasTask(task);","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"seetohjinwei"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"seetohjinwei"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"seetohjinwei"},"content":"        versionedTaskBook.setTask(target, editedTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"bananamonkey4655"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person \u0026 Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"seetohjinwei"},"content":"     * {@code TaskBook}","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":199,"author":{"gitId":"Nephelite"},"content":"    public void updateFilteredPersonListPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":204,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"Nephelite"},"content":"    public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"Nephelite"},"content":"        return sortedPersons;","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"Nephelite"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"Nephelite"},"content":"        sortedPersons.setComparator(comparator);","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":214,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"Nephelite"},"content":"    public void resetSortedPersonList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"Nephelite"},"content":"        sortedPersons.setComparator(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":221,"author":{"gitId":"bananamonkey4655"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-06"},{"lineNumber":222,"author":{"gitId":"seetohjinwei"},"content":"     * {@code TaskBook}","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"bananamonkey4655"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"bananamonkey4655"},"content":"        return filteredTasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":228,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"Nephelite"},"content":"    public void updateFilteredTaskListPredicate(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"Nephelite"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":235,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":236,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":237,"author":{"gitId":"Nephelite"},"content":"     * Returns an unmodifiable view of the sorted list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-15"},{"lineNumber":238,"author":{"gitId":"seetohjinwei"},"content":"     * {@code TaskBook}","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":240,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":241,"author":{"gitId":"Nephelite"},"content":"    public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":242,"author":{"gitId":"Nephelite"},"content":"        return sortedTasks;","lastModifiedDate":"2022-10-15"},{"lineNumber":243,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":244,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":245,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"Nephelite"},"content":"    public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2022-10-16"},{"lineNumber":248,"author":{"gitId":"Nephelite"},"content":"        sortedTasks.setComparator(comparator);","lastModifiedDate":"2022-10-15"},{"lineNumber":249,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":250,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":251,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":252,"author":{"gitId":"Nephelite"},"content":"    public void resetSortedTaskList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":253,"author":{"gitId":"Nephelite"},"content":"        sortedTasks.setComparator(null);","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"seetohjinwei"},"content":"        return versionedTaskBook.equals(other.versionedTaskBook)","lastModifiedDate":"2022-10-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":272,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-06"},{"lineNumber":273,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2022-10-22"},{"lineNumber":274,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 sortedTasks.equals(other.sortedTasks);","lastModifiedDate":"2022-10-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Nephelite":49,"bananamonkey4655":25,"-":115,"seetohjinwei":67,"xiaobill8":21}},{"path":"src/main/java/taskbook/model/ReadOnlyTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * Unmodifiable view of an task book","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public interface ReadOnlyTaskBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bananamonkey4655":6,"-":13,"xiaobill8":4}},{"path":"src/main/java/taskbook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":13,"xiaobill8":3}},{"path":"src/main/java/taskbook/model/TaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.UniquePersonList;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.TaskList;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"public class TaskBook implements ReadOnlyTaskBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"     * Creates a new TaskBook","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    public TaskBook() {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        this.persons \u003d new UniquePersonList();","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"     * Creates a TaskBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"    public TaskBook(ReadOnlyTaskBook toBeCopied) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"     * Resets the existing data of this {@code TaskBook} with {@code newData}.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"    public void resetData(ReadOnlyTaskBook newData) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"     * Returns the person with the same name as {@code name} if they exist in the task book.","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"bananamonkey4655"},"content":"        return persons.find(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"     * Adds a person to the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"     * The person must not already exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        propagateNameChange(target, editedPerson);","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"     * Propagates name change to all associated tasks.","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"    private void propagateNameChange(Person original, Person edited) {","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"        Name name \u003d original.getName();","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"        Name editedName \u003d edited.getName();","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"        if (name.equals(editedName)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"            if (!task.getName().equals(name)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"                continue;","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"            EditTaskDescriptor descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"            descriptor.setName(editedName);","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"            Task editedTask;","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"            try {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"                editedTask \u003d task.createEditedCopy(descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"                // Should not happen because name exists on all task types.","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"                String logMessage \u003d String.format(\"Failed to propagate name change to task %s.\", task);","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"                Logger.getGlobal().warning(logMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"                continue;","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"            tasks.setTask(task, editedTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if a person can be deleted.","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"     * A person cannot be deleted if there are tasks associated with that person.","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"     * Returns false if the person does not exist in the {@code TaskBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"     * @param key Key of the person.","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"     * @return True if a person can be deleted.","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canDeletePerson(Person key) {","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"seetohjinwei"},"content":"        requireNonNull(key);","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"seetohjinwei"},"content":"        if (!hasPerson(key)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"seetohjinwei"},"content":"        Name name \u003d key.getName();","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"seetohjinwei"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"            if (task.getName().equals(name)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"seetohjinwei"},"content":"                return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"seetohjinwei"},"content":"        return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"xiaobill8"},"content":"     * Removes {@code key} from this {@code TaskBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"xiaobill8"},"content":"     * {@code key} must exist in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"     * {@code key} must be deletable as per {@link TaskBook#canDeletePerson(Person)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"        if (!canDeletePerson(key)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"bananamonkey4655"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if a task {@code task} exists in the task book.","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"xiaobill8"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"xiaobill8"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"bananamonkey4655"},"content":"     * Adds a task to the task book.","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"bananamonkey4655"},"content":"     * The task must not already exist in the task book.","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"bananamonkey4655"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"bananamonkey4655"},"content":"        tasks.add(t);","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"xiaobill8"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"xiaobill8"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"xiaobill8"},"content":"     * The task {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"xiaobill8"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"xiaobill8"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"bananamonkey4655"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"bananamonkey4655"},"content":"     * Task must exist in the task book.","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"bananamonkey4655"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"bananamonkey4655"},"content":"        tasks.remove(t);","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":228,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"bananamonkey4655"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":230,"author":{"gitId":"bananamonkey4655"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"xiaobill8"},"content":"                || (other instanceof TaskBook // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":237,"author":{"gitId":"seetohjinwei"},"content":"                \u0026\u0026 persons.equals(((TaskBook) other).persons)","lastModifiedDate":"2022-10-13"},{"lineNumber":238,"author":{"gitId":"seetohjinwei"},"content":"                \u0026\u0026 tasks.equals(((TaskBook) other).tasks));","lastModifiedDate":"2022-10-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":243,"author":{"gitId":"seetohjinwei"},"content":"        return Objects.hash(persons, tasks);","lastModifiedDate":"2022-10-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bananamonkey4655":32,"-":91,"seetohjinwei":71,"xiaobill8":51}},{"path":"src/main/java/taskbook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    private Path taskBookFilePath \u003d Paths.get(\"data\" , \"taskbook.json\");","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        setTaskBookFilePath(newUserPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        return taskBookFilePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        this.taskBookFilePath \u003d taskBookFilePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"                \u0026\u0026 taskBookFilePath.equals(o.taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        return Objects.hash(guiSettings, taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        sb.append(\"\\nLocal data file location : \" + taskBookFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":75,"xiaobill8":12}},{"path":"src/main/java/taskbook/model/VersionedTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":" * TaskBook with version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"public class VersionedTaskBook extends TaskBook {","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"    private static final int DEFAULT_CAPACITY \u003d 15;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    private static final int MAXIMUM_CAPACITY \u003d 100;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"    private final int capacity;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    private ArrayList\u003cTaskBook\u003e taskBookStateList;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    private int pointer;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"     * Creates a VersionedTaskBook with the given {@code capacity} and {@code initialState}.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"     * Defensively creates a copy of the {@code initialState}.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    public VersionedTaskBook(int capacity, TaskBook initialState) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        super(initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        // Defensively ensure that the capacity does not ensure a certain threshold.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        if (capacity \u003e MAXIMUM_CAPACITY) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"            capacity \u003d MAXIMUM_CAPACITY;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList.add(new TaskBook(initialState));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"     * Creates a VersionedTaskBook with the default capacity and the given {@code initialState}.","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    public VersionedTaskBook(TaskBook initialState) {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        this(DEFAULT_CAPACITY, initialState);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"     * Creates a VersionedTaskBook with the default capacity and TaskBook as the initial state.","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    public VersionedTaskBook() {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        this(new TaskBook());","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"     * Creates a VersionedTaskBook with the equal to the given {@code toBeCopied}.","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    public VersionedTaskBook(VersionedTaskBook toBeCopied) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        capacity \u003d toBeCopied.capacity;","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d toBeCopied.pointer;","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList.addAll(toBeCopied.taskBookStateList);","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if the given state matches the newest state in the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"     * Ensure that commits that with no state change do not clog the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    private boolean isDuplicateCommit() {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook newestState \u003d taskBookStateList.get(pointer);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"        return newestState.equals(this);","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"    private void pruneFutureStatesIfRequired() {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        if (pointer \u003d\u003d taskBookStateList.size() - 1) {","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        ArrayList\u003cTaskBook\u003e prunedList \u003d new ArrayList\u003c\u003e(capacity);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"        for (int i \u003d 0; i \u003c\u003d pointer; i++) {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"            TaskBook state \u003d taskBookStateList.get(i);","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"            prunedList.add(state);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList \u003d prunedList;","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    private void pruneToCapacityIfRequired() {","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"        assert taskBookStateList !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        if (taskBookStateList.size() \u003c\u003d capacity * 2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        ArrayList\u003cTaskBook\u003e prunedList \u003d new ArrayList\u003c\u003e(capacity);","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        for (int i \u003d 0; i \u003c capacity; i++) {","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"            TaskBook state \u003d taskBookStateList.get(capacity + i + 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"            prunedList.add(state);","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList \u003d prunedList;","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"     * Commits a copy of the given state into the version history.","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"     * If the state of the TaskBook is the same, nothing is added to the version history.","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"     * After committing, all states in the \"future\" are removed.","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"     * In other words, after committing, an immediate redo always does nothing.","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"    public void commit() {","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        assert taskBookStateList !\u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        if (isDuplicateCommit()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        pruneFutureStatesIfRequired();","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"        // Defensively commit a copy of the state instead.","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook copy \u003d new TaskBook(this);","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"        taskBookStateList.add(copy);","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"        pruneToCapacityIfRequired();","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"        // Set the pointer to point to the newest command.","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        pointer \u003d taskBookStateList.size() - 1;","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"    private void setPointedAsCurrentData() {","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook pointedState \u003d taskBookStateList.get(pointer);","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook copy \u003d new TaskBook(pointedState);","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"        resetData(copy);","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if an undo operation is valid.","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"        return pointer - 1 \u003e\u003d 0;","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"     * Reverts the state to the previous state and returns it.","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"     * Does nothing if there is no state to revert to.","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"    public void undo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"        assert taskBookStateList !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"        if (!canUndo()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"        pointer--;","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"        setPointedAsCurrentData();","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if a redo operation is valid.","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canRedo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"        return pointer + 1 \u003c taskBookStateList.size();","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"     * Reverts the state to a previously undone state and returns it.","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"seetohjinwei"},"content":"     * Does nothing if there is no state to revert to.","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"seetohjinwei"},"content":"    public void redo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"seetohjinwei"},"content":"        assert taskBookStateList !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"seetohjinwei"},"content":"        if (!canRedo()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"        pointer++;","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"        setPointedAsCurrentData();","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if the underlying TaskBook at the current pointer is equivalent to the given {@code other} object.","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"     * @see TaskBook#equals(Object) TaskBook\u0027s equality comparison for how it is determined.","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"seetohjinwei"},"content":"        return super.equals(other);","lastModifiedDate":"2022-10-21"},{"lineNumber":177,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if the given {@code other} is equivalent.","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"seetohjinwei"},"content":"     * They are equivalent iff they share the same state list and pointer position.","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"seetohjinwei"},"content":"     * Capacity is ignored.","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"seetohjinwei"},"content":"    public boolean isEquivalentTo(VersionedTaskBook other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"seetohjinwei"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"seetohjinwei"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"seetohjinwei"},"content":"        } else if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"seetohjinwei"},"content":"            return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"seetohjinwei"},"content":"        return taskBookStateList.equals(other.taskBookStateList) \u0026\u0026 pointer \u003d\u003d other.pointer;","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"seetohjinwei":193}},{"path":"src/main/java/taskbook/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.AppUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * Represents a Person\u0027s address in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    public static final String NO_ADDRESS_PROVIDED \u003d \"[No address]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        AppUtil.checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(NO_ADDRESS_PROVIDED);","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":3,"-":52,"xiaobill8":5}},{"path":"src/main/java/taskbook/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.AppUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * Represents a Person\u0027s email in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    public static final String NO_EMAIL_PROVIDED \u003d \"[No email]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(NO_EMAIL_PROVIDED);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":3,"-":66,"xiaobill8":5}},{"path":"src/main/java/taskbook/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.AppUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" * Represents a Person\u0027s name in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    public static final Name SELF \u003d new Name(\"Myself\");","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"     * Searches the fullName for a query.","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"     * @param query input query.","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"     * @return true if the query exists exactly in fullName, false otherwise.","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    public boolean isQueryInName(String query) {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"        return fullName.toUpperCase().contains(query.toUpperCase());","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"     * Compares this person\u0027s name and the other person\u0027s name to decide name alphabetical order.","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"     * @param other input person.","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"     * @return 1 if this person\u0027s name is alphabetically first, -1 otherwise.","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"    public int compareByAlphabeticalTo(Name other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"        return this.fullName.compareTo(other.fullName);","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"     * Compares this person\u0027s name and the other person\u0027s name to decide name reverse alphabetical order.","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"     * @param other input person.","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"     * @return -1 if this person\u0027s name is alphabetically first, 1 otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"    public int compareByReverseAlphabeticalTo(Name other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        return -1 * this.fullName.compareTo(other.fullName);","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nephelite":26,"-":56,"xiaobill8":7}},{"path":"src/main/java/taskbook/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":29,"xiaobill8":2}},{"path":"src/main/java/taskbook/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":" * Represents a Person in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if a given person is a valid person.","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"    public static boolean isValidPerson(Person test) {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"        return Name.isValidName(test.getName().fullName)","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"            \u0026\u0026 Phone.isValidPhone(test.getPhone().value)","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"            \u0026\u0026 Email.isValidEmail(test.getEmail().value)","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"            \u0026\u0026 Address.isValidAddress(test.getAddress().value);","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"Nephelite"},"content":"     * Compares this person and the other person to decide name alphabetical order.","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"Nephelite"},"content":"     * @param other input person.","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"Nephelite"},"content":"     * @return 1 if this person\u0027s name is alphabetically first, -1 otherwise.","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"Nephelite"},"content":"    public int compareByNameAlphabeticalTo(Person other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"Nephelite"},"content":"        return this.getName().compareByAlphabeticalTo(other.getName());","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"Nephelite"},"content":"     * Compares this person and the other person to decide name reversealphabetical order.","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"Nephelite"},"content":"     * @param other input person.","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"Nephelite"},"content":"     * @return -1 if this person\u0027s name is alphabetically first, 1 otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"Nephelite"},"content":"    public int compareByNameReverseAlphabeticalTo(Person other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"Nephelite"},"content":"        return this.getName().compareByReverseAlphabeticalTo(other.getName());","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"Nephelite"},"content":"     * Checks of this person\u0027s name contains the query.","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"Nephelite"},"content":"     * @param query input query.","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"Nephelite"},"content":"     * @return true if the query exists exactly in this task, false otherwise.","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"Nephelite"},"content":"    public boolean isQueryInPerson(String query) {","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"Nephelite"},"content":"        return getName().isQueryInName(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"Nephelite"},"content":"     * Compares this person\u0027s phone number and another person\u0027s phone number to determine ascending order.","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"Nephelite"},"content":"     * @param other person.","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"Nephelite"},"content":"     * @return positive integer if this person\u0027s phone number is numerically greater, 0 if equal, negative otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"Nephelite"},"content":"    public int compareByPhoneNumberAscendingTo(Person other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"Nephelite"},"content":"        return this.getPhone().comparePhoneNumberAscending(other.getPhone());","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"Nephelite"},"content":"     * Compares this person\u0027s phone number and another person\u0027s phone number to determine descending order.","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"Nephelite"},"content":"     * @param other person.","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"Nephelite"},"content":"     * @return positive integer if this person\u0027s phone number is numerically smaller, 0 if equal, negative otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"Nephelite"},"content":"    public int compareByPhoneNumberDescendingTo(Person other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"Nephelite"},"content":"        return this.getPhone().comparePhoneNumberDescending(other.getPhone());","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nephelite":46,"-":118,"xiaobill8":15}},{"path":"src/main/java/taskbook/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.AppUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * Represents a Person\u0027s phone number in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    public static final String NO_PHONE_PROVIDED \u003d \"[No phone number]\";","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(NO_PHONE_PROVIDED);","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"     * Compares this phone number and another phone number to determine ascending order.","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"     * NO_PHONE_PROVIDED is greater than any valid phone number.","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"     * @param other phone number.","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"     * @return positive integer if this phone number is numerically greater, 0 if equal, negative otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"    public int comparePhoneNumberAscending(Phone other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"        if (this.value.equals(NO_PHONE_PROVIDED) \u0026\u0026 other.value.equals(NO_PHONE_PROVIDED)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"            return 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        if (this.value.equals(NO_PHONE_PROVIDED)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"            return 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        if (other.value.equals(NO_PHONE_PROVIDED)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"            return -1;","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"        assert isValidPhone(this.value);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"        assert isValidPhone(other.value);","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"        return Integer.parseInt(this.value) - Integer.parseInt(other.value);","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"     * Compares this phone number and another phone number to determine descending order.","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"     * NO_PHONE_PROVIDED is greater than any valid phone number.","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"     * @param other phone number.","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"     * @return positive integer if this phone number is numerically smaller, 0 if equal, negative otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":"    public int comparePhoneNumberDescending(Phone other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"        if (this.value.equals(NO_PHONE_PROVIDED) \u0026\u0026 other.value.equals(NO_PHONE_PROVIDED)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"            return 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"        if (this.value.equals(NO_PHONE_PROVIDED)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"            return 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"        if (other.value.equals(NO_PHONE_PROVIDED)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"            return -1;","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"        assert isValidPhone(this.value);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"        assert isValidPhone(other.value);","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"        return Integer.parseInt(other.value) - Integer.parseInt(this.value);","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dexter-sim":4,"Nephelite":41,"-":47,"xiaobill8":6}},{"path":"src/main/java/taskbook/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"     * Finds a person from the list given their name.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"    public Person find(Name name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"        return internalList.stream().filter(person -\u003e person.getName().equals(name)).findAny().orElse(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bananamonkey4655":8,"-":131,"xiaobill8":6}},{"path":"src/main/java/taskbook/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":10,"xiaobill8":1}},{"path":"src/main/java/taskbook/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"-":5,"xiaobill8":1}},{"path":"src/main/java/taskbook/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.AppUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * Represents a Tag in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"xiaobill8":5}},{"path":"src/main/java/taskbook/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":" * Represents a Deadline in the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"    public Deadline(Person person, Assignment assignment, Description description, boolean isDone, LocalDate date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"        super(person, assignment, description, isDone);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    public Deadline(Name name, Assignment assignment, Description description, boolean isDone, LocalDate date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"    public Deadline(Person person, Assignment assignment, Description description, boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"                    LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"bananamonkey4655"},"content":"        super(person, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"    public Deadline(Name name, Assignment assignment, Description description, boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"bananamonkey4655"},"content":"                    LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"    public String getStatus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        return isDone() ? \"[X]  [D]\" : \"[  ]  [D]\";","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"        return date;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    public boolean hasDate() {","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"        return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"        Deadline otherTask \u003d (Deadline) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"        return super.isSameTask(other) \u0026\u0026 date.equals(otherTask.date);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"    public Deadline createEditedCopy(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        Name name \u003d descriptor.getName().orElse(getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        Assignment assignment \u003d descriptor.getAssignment().orElse(getAssignment());","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"        Description description \u003d descriptor.getDescription().orElse(getDescription());","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"        Boolean isDone \u003d descriptor.getIsDone().orElse(isDone());","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate date \u003d descriptor.getDate().orElse(getDate());","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"        Set\u003cTag\u003e tags \u003d descriptor.getTags().orElse(getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"        return new Deadline(name, assignment, description, isDone, date, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"        Deadline otherTask \u003d (Deadline) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        return super.equals(other) \u0026\u0026 date.equals(otherTask.date);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"bananamonkey4655"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"bananamonkey4655"},"content":"        return Objects.hash(super.hashCode(), date);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":"    public String toUiString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"        builder.append(getDescription())","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"Nephelite"},"content":"               .append(String.format(\" [by %s]\", getDate().toString()));;","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"Nephelite"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"        int newLineIndex \u003d taskString.indexOf(\"\\n\");","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"        return taskString.substring(0, newLineIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"                + String.format(\"[%s]\", getDate().toString())","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"                + taskString.substring(newLineIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dexter-sim":2,"Nephelite":20,"bananamonkey4655":89,"seetohjinwei":10,"xiaobill8":9}},{"path":"src/main/java/taskbook/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.AppUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":" * Represents a Task\u0027s description in the task book.","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"public class Description {","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"            \"Descriptions should only contain ASCII characters and spaces, \"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"            + \"and it should not be blank\";","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    /*","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     * Supports all ASCII characters.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{ASCII}][\\\\p{ASCII}\u0027. ]*\";","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    public final String description;","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    public Description(String description) {","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        AppUtil.checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.trim().length() \u003e 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    public String toString() {","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        return description;","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        return description.hashCode();","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"     * Searches description for if the input query exists.","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"     * @param query input query","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"     * @return true if query exists exactly in description, false otherwise.","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"    public boolean isQueryInDescription(String query) {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(query);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        return description.toUpperCase().contains(query.toUpperCase());","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"     * Compares this description and the input description to decide alphabetical order.","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"     * @param other input description.","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"     * @return 1 if this description is alphabetically first, -1 otherwise.","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"    public int compareByAlphabeticalTo(Description other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"        return this.description.compareToIgnoreCase(other.description);","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"dexter-sim":51,"Nephelite":19,"xiaobill8":9}},{"path":"src/main/java/taskbook/model/task/EditTaskDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.util.CollectionUtil.isAnyNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":" * Stores the details to edit the task with.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":" * Each non-empty field value will replace the corresponding field value of the task.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"public class EditTaskDescriptor {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    private Name name;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    private Assignment assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    private Description description;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    private LocalDate date;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptor() {}","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"     * Copy constructor.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        setName(toCopy.name);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        setAssignment(toCopy.assignment);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        setDescription(toCopy.description);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        setIsDone(toCopy.isDone);","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        setDate(toCopy.date);","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"        return isAnyNonNull(name, assignment, description, isDone, date, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"    public void setName(Name name) {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"    public void setAssignment(Assignment assignment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"    public Optional\u003cAssignment\u003e getAssignment() {","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        return Optional.ofNullable(assignment);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"    public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        return Optional.ofNullable(description);","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"    public void setIsDone(Boolean isDone) {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    public Optional\u003cBoolean\u003e getIsDone() {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        return Optional.ofNullable(isDone);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"        return Optional.ofNullable(date);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"bananamonkey4655"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"bananamonkey4655"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"        if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"        EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"            \u0026\u0026 getAssignment().equals(e.getAssignment())","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"            \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"            \u0026\u0026 getIsDone().equals(e.getIsDone())","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"bananamonkey4655"},"content":"            \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"bananamonkey4655"},"content":"            \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"bananamonkey4655":27,"seetohjinwei":102}},{"path":"src/main/java/taskbook/model/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":" * Represents an Event in the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"public class Event extends Task {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"    public Event(Person person, Assignment assignment, Description description, boolean isDone, LocalDate date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"        super(person, assignment, description, isDone);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    public Event(Name name, Assignment assignment, Description description, boolean isDone, LocalDate date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"    public Event(Person person, Assignment assignment, Description description, boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"                 LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"bananamonkey4655"},"content":"        super(person, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"    public Event(Name name, Assignment assignment, Description description, boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"bananamonkey4655"},"content":"                 LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"    public String getStatus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        return isDone() ? \"[X]  [E]\" : \"[  ]  [E]\";","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"        return date;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    public boolean hasDate() {","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"        return true;","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"        Event otherTask \u003d (Event) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"        return super.isSameTask(other) \u0026\u0026 date.equals(otherTask.date);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"    public Event createEditedCopy(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        Name name \u003d descriptor.getName().orElse(getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        Assignment assignment \u003d descriptor.getAssignment().orElse(getAssignment());","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"        Description description \u003d descriptor.getDescription().orElse(getDescription());","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"        Boolean isDone \u003d descriptor.getIsDone().orElse(isDone());","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate date \u003d descriptor.getDate().orElse(getDate());","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"        Set\u003cTag\u003e tags \u003d descriptor.getTags().orElse(getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"        return new Event(name, assignment, description, isDone, date, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"        Event otherTask \u003d (Event) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        return super.equals(other) \u0026\u0026 date.equals(otherTask.date);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"bananamonkey4655"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"bananamonkey4655"},"content":"        return Objects.hash(super.hashCode(), date);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":"    public String toUiString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"        builder.append(getDescription())","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"Nephelite"},"content":"               .append(String.format(\" [at %s]\", getDate().toString()));;","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"Nephelite"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"        String taskString \u003d super.toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"        int newLineIndex \u003d taskString.indexOf(\"\\n\");","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"        return taskString.substring(0, newLineIndex)","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"                + String.format(\"[%s]\", getDate().toString())","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"                + taskString.substring(newLineIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"dexter-sim":2,"Nephelite":19,"bananamonkey4655":91,"seetohjinwei":10,"xiaobill8":8}},{"path":"src/main/java/taskbook/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":" * Represents a Task in the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"public abstract class Task {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    private final Name name;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private final Assignment assignment;","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"    private final Description description;","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"    protected Task(Person person, Assignment assignment, Description description, boolean isDone) {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(person, assignment, description, isDone);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-24"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"    protected Task(Name name, Assignment assignment, Description description, boolean isDone) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(name, assignment, description, isDone);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"    protected Task(Person person, Assignment assignment, Description description, boolean isDone, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"        CollectionUtil.requireAllNonNull(person, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"bananamonkey4655"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"bananamonkey4655"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"    protected Task(Name name, Assignment assignment, Description description, boolean isDone, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"        CollectionUtil.requireAllNonNull(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        return name;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"    public Assignment getAssignment() {","lastModifiedDate":"2022-09-24"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"        return assignment;","lastModifiedDate":"2022-09-24"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-09-25"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        return description;","lastModifiedDate":"2022-09-24"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-09-24"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"        return isDone;","lastModifiedDate":"2022-09-24"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"        return null;","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"    public boolean hasDate() {","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Nephelite"},"content":"        return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Nephelite"},"content":"     * Returns the string representation of the completion status of the task.","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"Nephelite"},"content":"     * 2 whitespaces needed to match width of \u0027X\u0027 in the GUI.","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"Nephelite"},"content":"     * @return [X] if the task is done. Otherwise, return [  ].","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Nephelite"},"content":"    public String getStatus() {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Nephelite"},"content":"        return isDone() ? \"[X]\" : \"[  ]\";","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if both tasks have the same description, person and assignment.","lastModifiedDate":"2022-09-24"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2022-09-24"},{"lineNumber":120,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"        return other.name.equals(name)","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 other.assignment.equals(assignment)","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 other.description.equals(description);","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if task is self-assigned.","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"    public boolean isSelfAssigned() {","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"xiaobill8"},"content":"        return name.fullName.equals(Name.SELF.fullName);","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"     * Creates an edited task based on the provided edits.","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"     * @throws CommandException when editing a field that does not exist for that task type.","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"    public abstract Task createEditedCopy(EditTaskDescriptor descriptor) throws CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":142,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if both tasks have the data and status fields.","lastModifiedDate":"2022-09-24"},{"lineNumber":143,"author":{"gitId":"xiaobill8"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2022-09-24"},{"lineNumber":144,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":145,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-24"},{"lineNumber":146,"author":{"gitId":"xiaobill8"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-24"},{"lineNumber":147,"author":{"gitId":"xiaobill8"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-24"},{"lineNumber":148,"author":{"gitId":"xiaobill8"},"content":"            return true;","lastModifiedDate":"2022-09-24"},{"lineNumber":149,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":150,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":151,"author":{"gitId":"xiaobill8"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-09-24"},{"lineNumber":152,"author":{"gitId":"xiaobill8"},"content":"            return false;","lastModifiedDate":"2022-09-24"},{"lineNumber":153,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":154,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":155,"author":{"gitId":"xiaobill8"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2022-09-24"},{"lineNumber":156,"author":{"gitId":"dexter-sim"},"content":"        return otherTask.name.equals(name)","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 otherTask.assignment.equals(assignment)","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"dexter-sim"},"content":"                \u0026\u0026 otherTask.description.equals(description)","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.isDone \u003d\u003d isDone","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.getTags().equals(tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":162,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":163,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-24"},{"lineNumber":164,"author":{"gitId":"xiaobill8"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-24"},{"lineNumber":165,"author":{"gitId":"xiaobill8"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-09-24"},{"lineNumber":166,"author":{"gitId":"bananamonkey4655"},"content":"        return Objects.hash(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":168,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":169,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"Nephelite"},"content":"     * Gets a String to represent all itmes related to the task\u0027s description.","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"Nephelite"},"content":"    public String toUiString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"Nephelite"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"Nephelite"},"content":"        builder.append(getDescription());","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"Nephelite"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":177,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":178,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-24"},{"lineNumber":179,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-09-24"},{"lineNumber":180,"author":{"gitId":"xiaobill8"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-24"},{"lineNumber":181,"author":{"gitId":"bananamonkey4655"},"content":"        builder.append(String.format(\"%s\", getStatus()))","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"xiaobill8"},"content":"                .append(String.format(\"[%s]\", getAssignment()))","lastModifiedDate":"2022-09-24"},{"lineNumber":183,"author":{"gitId":"xiaobill8"},"content":"                .append(String.format(\"[%s]\", getName()))","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"xiaobill8"},"content":"                .append(\"\\n\")","lastModifiedDate":"2022-09-24"},{"lineNumber":185,"author":{"gitId":"bananamonkey4655"},"content":"                .append(getDescription())","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"bananamonkey4655"},"content":"                .append(\"\\n\")","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"bananamonkey4655"},"content":"                .append(getTags().size() \u003d\u003d 0 ? \"\" : getTags());","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"xiaobill8"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-24"},{"lineNumber":189,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":190,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"Nephelite"},"content":"     * Searches this task to find if input query exists anywhere in the description or name.","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"Nephelite"},"content":"     * @param query input query.","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"Nephelite"},"content":"     * @return true if the query exists exactly in this task, false otherwise.","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"Nephelite"},"content":"    public boolean isQueryInTask(String query) {","lastModifiedDate":"2022-10-23"},{"lineNumber":197,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(query);","lastModifiedDate":"2022-10-22"},{"lineNumber":198,"author":{"gitId":"Nephelite"},"content":"        return getName().isQueryInName(query) || getDescription().isQueryInDescription(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":199,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":200,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":201,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":202,"author":{"gitId":"Nephelite"},"content":"     * Checks if the task is of a particular assignment","lastModifiedDate":"2022-10-23"},{"lineNumber":203,"author":{"gitId":"Nephelite"},"content":"     * @param query input assignment.","lastModifiedDate":"2022-10-23"},{"lineNumber":204,"author":{"gitId":"Nephelite"},"content":"     * @return true if the query exists exactly in this task, false otherwise.","lastModifiedDate":"2022-10-23"},{"lineNumber":205,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":206,"author":{"gitId":"Nephelite"},"content":"    public boolean isAssignmentCorrect(Assignment query) {","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"Nephelite"},"content":"        requireNonNull(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"Nephelite"},"content":"        return this.getAssignment().equals(query);","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":210,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"Nephelite"},"content":"     * Compares this task and the input task to decide description alphabetical order.","lastModifiedDate":"2022-10-15"},{"lineNumber":213,"author":{"gitId":"Nephelite"},"content":"     * @param other input task.","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"Nephelite"},"content":"     * @return 1 if this task\u0027s description is alphabetically first, -1 otherwise.","lastModifiedDate":"2022-10-15"},{"lineNumber":215,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"Nephelite"},"content":"    public int compareByDescriptionAlphabeticalTo(Task other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":217,"author":{"gitId":"Nephelite"},"content":"        return this.description.compareByAlphabeticalTo(other.description);","lastModifiedDate":"2022-10-15"},{"lineNumber":218,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":219,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"Nephelite"},"content":"     * Compares this task and the input task to decide description alphabetical reverse order.","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"Nephelite"},"content":"     * @param other input task.","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"Nephelite"},"content":"     * @return -1 if this task\u0027s description is alphabetically first, 1 otherwise.","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"Nephelite"},"content":"    public int compareByDescriptionReverseAlphabeticalTo(Task other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"Nephelite"},"content":"        return -1 * this.description.compareByAlphabeticalTo(other.description);","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"Nephelite"},"content":"     * Compares this task and the input task to decide chronological date reverse order.","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"Nephelite"},"content":"     * @param other input task.","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"Nephelite"},"content":"     * @return an int.","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"Nephelite"},"content":"    public int compareByChronologicalDateTo(Task other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"Nephelite"},"content":"        if (this.hasDate() \u0026\u0026 other.hasDate()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":236,"author":{"gitId":"Nephelite"},"content":"            return this.getDate().compareTo(other.getDate());","lastModifiedDate":"2022-10-24"},{"lineNumber":237,"author":{"gitId":"Nephelite"},"content":"        } else if (this.hasDate()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":238,"author":{"gitId":"Nephelite"},"content":"            return this.getDate().compareTo(LocalDate.MAX);","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"Nephelite"},"content":"        } else if (other.hasDate()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":240,"author":{"gitId":"Nephelite"},"content":"            return LocalDate.MAX.compareTo(other.getDate());","lastModifiedDate":"2022-10-24"},{"lineNumber":241,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":242,"author":{"gitId":"Nephelite"},"content":"        return 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":243,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":245,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":246,"author":{"gitId":"Nephelite"},"content":"     * Compares this task and the input task to decide chronological date reverse order.","lastModifiedDate":"2022-10-24"},{"lineNumber":247,"author":{"gitId":"Nephelite"},"content":"     * @param other input task.","lastModifiedDate":"2022-10-24"},{"lineNumber":248,"author":{"gitId":"Nephelite"},"content":"     * @return an int.","lastModifiedDate":"2022-10-24"},{"lineNumber":249,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":250,"author":{"gitId":"Nephelite"},"content":"    public int compareByReverseChronologicalDateTo(Task other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":251,"author":{"gitId":"Nephelite"},"content":"        if (this.hasDate() \u0026\u0026 other.hasDate()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":252,"author":{"gitId":"Nephelite"},"content":"            return -1 * this.getDate().compareTo(other.getDate());","lastModifiedDate":"2022-10-24"},{"lineNumber":253,"author":{"gitId":"Nephelite"},"content":"        } else if (this.hasDate()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":254,"author":{"gitId":"Nephelite"},"content":"            return this.getDate().compareTo(LocalDate.MAX);","lastModifiedDate":"2022-10-24"},{"lineNumber":255,"author":{"gitId":"Nephelite"},"content":"        } else if (other.hasDate()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":256,"author":{"gitId":"Nephelite"},"content":"            return LocalDate.MAX.compareTo(other.getDate());","lastModifiedDate":"2022-10-24"},{"lineNumber":257,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":258,"author":{"gitId":"Nephelite"},"content":"        return 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":260,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-24"},{"lineNumber":261,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"dexter-sim":10,"Nephelite":97,"bananamonkey4655":47,"seetohjinwei":8,"xiaobill8":99}},{"path":"src/main/java/taskbook/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import java.util.List;","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" * tasks uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":" * unique in terms of identity in the TaskList.","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":" * However, the removal of a task uses Task#equals(Object) to ensure that the exact task is removed.","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" *","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":" *","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    private Comparator\u003cTask\u003e comparator;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-09-24"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     * The {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-09-24"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-09-24"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-09-24"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-09-24"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2022-09-24"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-09-24"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-09-24"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-09-24"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-09-24"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-09-24"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-09-24"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"    public void setTasks(TaskList replacement) {","lastModifiedDate":"2022-09-24"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-09-24"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-09-24"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-09-24"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-24"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(tasks);","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        if (!areTasksUnique(tasks)) {","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-09-24"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-09-24"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-09-24"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-09-24"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-24"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-09-24"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-09-24"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-24"},{"lineNumber":115,"author":{"gitId":"xiaobill8"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-24"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-24"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-09-24"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"                        \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2022-09-24"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":120,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":121,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-24"},{"lineNumber":122,"author":{"gitId":"xiaobill8"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-24"},{"lineNumber":123,"author":{"gitId":"xiaobill8"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-09-24"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2022-09-24"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"    private boolean areTasksUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-24"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2022-09-24"},{"lineNumber":131,"author":{"gitId":"xiaobill8"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2022-09-24"},{"lineNumber":132,"author":{"gitId":"xiaobill8"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2022-09-24"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"                    return false;","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"xiaobill8"},"content":"                }","lastModifiedDate":"2022-09-24"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-09-24"},{"lineNumber":136,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":137,"author":{"gitId":"xiaobill8"},"content":"        return true;","lastModifiedDate":"2022-09-24"},{"lineNumber":138,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":139,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"Nephelite":2,"xiaobill8":137}},{"path":"src/main/java/taskbook/model/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.tasks.TaskEditCommand.MESSAGE_INVALID_PARAMETER;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":" * Represents a To-do in the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    private static final String INVALID_PARAMETER_DATE \u003d","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        String.format(MESSAGE_INVALID_PARAMETER, PREFIX_DATE + \"DATE\" + \" (Todo does not have a date)\");","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"    public Todo(Person person, Assignment assignment, Description description, boolean isDone) {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"        super(person, assignment, description, isDone);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"    public Todo(Name name, Assignment assignment, Description description, boolean isDone) {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"bananamonkey4655"},"content":"    public Todo(Person person, Assignment assignment, Description description, boolean isDone, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"        super(person, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"    public Todo(Name name, Assignment assignment, Description description, boolean isDone, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"    public String getStatus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        return isDone() ? \"[X]  [T]\" : \"[  ]  [T]\";","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        return null;","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"    public boolean hasDate() {","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"        return false;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean isSameTask(Task other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"        Todo otherTask \u003d (Todo) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.getAssignment().equals(getAssignment())","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"    public Todo createEditedCopy(EditTaskDescriptor descriptor) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        if (descriptor.getDate().isPresent()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"            throw new CommandException(INVALID_PARAMETER_DATE);","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"        Name name \u003d descriptor.getName().orElse(getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        Assignment assignment \u003d descriptor.getAssignment().orElse(getAssignment());","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        Description description \u003d descriptor.getDescription().orElse(getDescription());","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        Boolean isDone \u003d descriptor.getIsDone().orElse(isDone());","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"        Set\u003cTag\u003e tags \u003d descriptor.getTags().orElse(getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"        return new Todo(name, assignment, description, isDone, tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"        Todo otherTask \u003d (Todo) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"bananamonkey4655"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.getAssignment().equals(getAssignment())","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 (otherTask.isDone() \u003d\u003d (isDone()))","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"bananamonkey4655"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Nephelite":15,"bananamonkey4655":81,"seetohjinwei":20}},{"path":"src/main/java/taskbook/model/task/enums/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task.enums;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" * Represents whether the Task has been assigned to the user,","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":" * or the user has assigned to someone else.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public enum Assignment {","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    FROM, TO;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"            \"Assignment should be either FROM or TO\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    @Override","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    public String toString() {","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        switch (this) {","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        case FROM:","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"            return \"Assigned by\";","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        case TO:","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"            return \"Assigned to\";","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        default:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"            return \" \";","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    public static boolean isValidAssignment(String test) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        return Arrays.stream(values()).map(Assignment::name).anyMatch(code -\u003e code.equals(test));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"     * Checks if the query is a valid assignment and returns the corresponding Assignment.","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"     * @param query","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"     * @return Assignment","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"    public static Assignment parseAssignment(String query) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        if (!isValidAssignment(query)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"                    \"Assignments should be either \u003cFROM\u003e or \u003cTO\u003e\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"        return query.toUpperCase().equals(FROM.name()) ? FROM : TO;","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Nephelite":17,"xiaobill8":30}},{"path":"src/main/java/taskbook/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * Signals that the operation will result in duplicate Tasks","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" * Tasks are considered duplicates if they have the same // TODO.","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"xiaobill8":11}},{"path":"src/main/java/taskbook/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"xiaobill8":6}},{"path":"src/main/java/taskbook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" * Contains utility methods for populating {@code TaskBook} with sample data.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    public static final Person ALEX_SAMPLE \u003d new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"            new Phone(\"87438807\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"            new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"            getTagSet(\"friends\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    public static final Person BERNICE_SAMPLE \u003d new Person(new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"            new Phone(\"99272758\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"            new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"            getTagSet(\"colleagues\", \"friends\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    public static final Person CHARLOTTE_SAMPLE \u003d new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"            new Phone(\"93210283\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"            new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"            getTagSet(\"neighbours\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    public static final Person DAVID_SAMPLE \u003d new Person(new Name(\"David Li\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"            new Phone(\"91031282\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"            new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"            getTagSet(\"family\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"    public static final Person IRFAN_SAMPLE \u003d new Person(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"            new Phone(\"92492021\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"            new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"            getTagSet(\"classmates\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    public static final Person ROY_SAMPLE \u003d new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"            new Phone(\"92624417\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"            new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"            getTagSet(\"colleagues\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"    public static final Task ALEX_TASK_SAMPLE \u003d new Todo(ALEX_SAMPLE,","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"            Assignment.FROM,","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"            new Description(\"Complete presentation template.\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"            false);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"    public static final Task BERNICE_TASK_SAMPLE \u003d new Todo(BERNICE_SAMPLE,","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"            Assignment.TO,","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"            new Description(\"Send out marketing emails.\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"            false);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        return new Person[] {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            ALEX_SAMPLE,","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"            BERNICE_SAMPLE,","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"            CHARLOTTE_SAMPLE,","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"            DAVID_SAMPLE,","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"            IRFAN_SAMPLE,","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"            ROY_SAMPLE","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        return new Task[] {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"            ALEX_TASK_SAMPLE,","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"            BERNICE_TASK_SAMPLE","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"    public static ReadOnlyTaskBook getSampleTaskBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        TaskBook sampleAb \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"bananamonkey4655":3,"-":34,"xiaobill8":65}},{"path":"src/main/java/taskbook/storage/JsonAdaptedDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.DateParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"public class JsonAdaptedDeadline extends JsonAdaptedTask {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private final String deadlineDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"    public JsonAdaptedDeadline(@JsonProperty(\"name\") String name, @JsonProperty(\"assignment\") String assignment,","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"                               @JsonProperty(\"description\") String description, @JsonProperty(\"isDone\") boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"                               @JsonProperty(\"deadlineDate\") String deadlineDate,","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone, tagged);","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public JsonAdaptedDeadline(Deadline source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        super(source);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.deadlineDate \u003d source.getDate().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    public String getDeadlineDate() {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        return deadlineDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * Converts this Jackson-friendly adapted Deadline object into the model\u0027s {@code Deadline} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    public Deadline toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        if (this.getName() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        if (!Name.isValidName(this.getName())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        final Name modelName \u003d new Name(this.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        if (this.getAssignment() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"                    Assignment.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        if (!Assignment.isValidAssignment(this.getAssignment())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        final Assignment modelAssignment \u003d Assignment.valueOf(this.getAssignment());","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        if (this.getDescription() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        if (!Description.isValidDescription(this.getDescription())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        final Description modelDescription \u003d new Description(this.getDescription());","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"        if (this.getDeadlineDate() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"                    \"Deadline\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        final LocalDate modelDeadlineDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"            modelDeadlineDate \u003d DateParser.parse(getDeadlineDate());","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(\"Date of Deadline should be in supported date formats.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"        return new Deadline(modelName, modelAssignment, modelDescription, this.isDone(), modelDeadlineDate, modelTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":18,"xiaobill8":86}},{"path":"src/main/java/taskbook/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.DateParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"public class JsonAdaptedEvent extends JsonAdaptedTask {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private final String eventDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"assignment\") String assignment,","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"                            @JsonProperty(\"description\") String description, @JsonProperty(\"isDone\") boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"                            @JsonProperty(\"eventDate\") String eventDate,","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone, tagged);","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        super(source);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.eventDate \u003d source.getDate().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    public String getEventDate() {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        return eventDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"     * Converts this Jackson-friendly adapted Event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        if (this.getName() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        if (!Name.isValidName(this.getName())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        final Name modelName \u003d new Name(this.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        if (this.getAssignment() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"                    Assignment.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        if (!Assignment.isValidAssignment(this.getAssignment())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        final Assignment modelAssignment \u003d Assignment.valueOf(this.getAssignment());","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        if (this.getDescription() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        if (!Description.isValidDescription(this.getDescription())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        final Description modelDescription \u003d new Description(this.getDescription());","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"        if (this.getEventDate() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"                    \"Event Date\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        final LocalDate modelEventDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"            modelEventDate \u003d DateParser.parse(getEventDate());","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(\"Date of Event should be in supported date formats.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"        return new Event(modelName, modelAssignment, modelDescription, this.isDone(), modelEventDate, modelTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":18,"xiaobill8":86}},{"path":"src/main/java/taskbook/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":100,"xiaobill8":8}},{"path":"src/main/java/taskbook/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"xiaobill8":3}},{"path":"src/main/java/taskbook/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"@JsonTypeInfo(","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        use \u003d JsonTypeInfo.Id.NAME,","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        include \u003d JsonTypeInfo.As.PROPERTY,","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        property \u003d \"type\")","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"@JsonSubTypes({","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedTodo.class, name \u003d \"Todo\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedEvent.class, name \u003d \"Event\"),","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedDeadline.class, name \u003d \"Deadline\")","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"})","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"public abstract class JsonAdaptedTask {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    private final String name;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    private final String assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    private final String description;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"assignment\") String assignment,","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"                           @JsonProperty(\"description\") String description, @JsonProperty(\"isDone\") boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        assignment \u003d source.getAssignment().name();","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"    public String getName() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        return name;","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"    public String getAssignment() {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        return assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        return description;","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"        return isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"    public List\u003cJsonAdaptedTag\u003e getTags() {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"        return tagged;","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"     * Converts this Jackson-friendly adapted Task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"    public abstract Task toModelType() throws IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"bananamonkey4655":22,"xiaobill8":72}},{"path":"src/main/java/taskbook/storage/JsonAdaptedTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"public class JsonAdaptedTodo extends JsonAdaptedTask {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"    public JsonAdaptedTodo(@JsonProperty(\"name\") String name, @JsonProperty(\"assignment\") String assignment,","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"                           @JsonProperty(\"description\") String description, @JsonProperty(\"isDone\") boolean isDone,","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        super(name, assignment, description, isDone, tagged);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"    public JsonAdaptedTodo(Task source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        super(source);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * Converts this Jackson-friendly adapted Todo object into the model\u0027s {@code Todo} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"    public Todo toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"bananamonkey4655"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        if (this.getName() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        if (!Name.isValidName(this.getName())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        final Name modelName \u003d new Name(this.getName());","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        if (this.getAssignment() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"                    Assignment.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        if (!Assignment.isValidAssignment(this.getAssignment())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        final Assignment modelAssignment \u003d Assignment.valueOf(this.getAssignment());","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        if (this.getDescription() \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        if (!Description.isValidDescription(this.getDescription())) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        final Description modelDescription \u003d new Description(this.getDescription());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"        return new Todo(modelName, modelAssignment, modelDescription, this.isDone(), modelTags);","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":18,"xiaobill8":63}},{"path":"src/main/java/taskbook/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":" * An Immutable TaskBook that is serializable to JSON format.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"@JsonRootName(value \u003d \"taskBook\")","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"                                    @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     * Converts a given {@code ReadOnlyTaskBook} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"    public JsonSerializableTaskBook(ReadOnlyTaskBook source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        tasks.addAll(source.getTaskList().stream().map(task -\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"            Class\u003c? extends Task\u003e c \u003d task.getClass();","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"            if (c.equals(Todo.class)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"                return new JsonAdaptedTodo(task);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"            } else if (c.equals(Event.class)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"                return new JsonAdaptedEvent((Event) task);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"            } else if (c.equals(Deadline.class)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"                return new JsonAdaptedDeadline((Deadline) task);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"            return null;","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        })","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"    public TaskBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"            if (taskBook.hasPerson(person)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"            taskBook.addPerson(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        for (JsonAdaptedTask jsonAdaptedTask: tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"            if (taskBook.hasTask(task)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"            taskBook.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        return taskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":40,"xiaobill8":47}},{"path":"src/main/java/taskbook/storage/JsonTaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.FileUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.JsonUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" * A class to access TaskBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"public class JsonTaskBookStorage implements TaskBookStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskBookStorage.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    public JsonTaskBookStorage(Path filePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        return readTaskBook(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"     * Similar to {@link #readTaskBook()}.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"                filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        if (!jsonTaskBook.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"     * Similar to {@link #saveTaskBook(ReadOnlyTaskBook)}.","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        requireNonNull(taskBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(taskBook), filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":54,"xiaobill8":26}},{"path":"src/main/java/taskbook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.JsonUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"xiaobill8":5}},{"path":"src/main/java/taskbook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"public interface Storage extends TaskBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":23,"xiaobill8":9}},{"path":"src/main/java/taskbook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":" * Manages storage of TaskBook data in local storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    private TaskBookStorage taskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     * Creates a {@code StorageManager} with the given {@code TaskBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    public StorageManager(TaskBookStorage taskBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        this.taskBookStorage \u003d taskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        return taskBookStorage.getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        return readTaskBook(taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        return taskBookStorage.readTaskBook(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        saveTaskBook(taskBook, taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        taskBookStorage.saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":56,"xiaobill8":22}},{"path":"src/main/java/taskbook/storage/TaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":" * Represents a storage for {@link TaskBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"public interface TaskBookStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"     * Returns TaskBook data as a {@link ReadOnlyTaskBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"     * @see #getTaskBookFilePath()","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"     * Saves the given {@link ReadOnlyTaskBook} to the storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"     * @param taskBook cannot be null.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"     * @see #saveTaskBook(ReadOnlyTaskBook)","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xiaobill8":46}},{"path":"src/main/java/taskbook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"xiaobill8":6}},{"path":"src/main/java/taskbook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    public CommandBox(CommandExecutor commandExecutor, CommandGetter previousCommand, CommandGetter nextCommand) {","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        setUpKeyPressedEvent(previousCommand, nextCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"     * Updates the text field and caret position based on the given {@code command}.","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"     * Does nothing if command is null.","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    private void updateTextFieldWithHistory(String command) {","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"            return;","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        commandTextField.setText(command);","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        // Change caret / cursor position.","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        commandTextField.positionCaret(command.length());","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"     * Detects if the user clicks up and down arrow keys and handles them.","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    private void setUpKeyPressedEvent(CommandGetter previousCommand, CommandGetter nextCommand) {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        commandTextField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"            KeyCode keyCode \u003d event.getCode();","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"            if (keyCode.equals(KeyCode.UP) || keyCode.equals(KeyCode.KP_UP)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"                String command \u003d previousCommand.get();","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"                updateTextFieldWithHistory(command);","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"            } else if (keyCode.equals(KeyCode.DOWN) || keyCode.equals(KeyCode.KP_DOWN)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"                String command \u003d nextCommand.get();","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"                updateTextFieldWithHistory(command);","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"        });","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"     * Represents a function for getting the command history.","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"    @FunctionalInterface","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"    public interface CommandGetter {","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"        String get();","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":79,"seetohjinwei":41,"xiaobill8":6}},{"path":"src/main/java/taskbook/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t13-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Nephelite":1,"-":99,"xiaobill8":2}},{"path":"src/main/java/taskbook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"        personListPanel \u003d new PersonListPanel(logic.getSortedPersonList());","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getSortedTaskList());","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-09-25"},{"lineNumber":122,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, logic::getPreviousCommand, logic::getNextCommand);","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"xiaobill8"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Nephelite":8,"-":185,"seetohjinwei":1,"xiaobill8":9}},{"path":"src/main/java/taskbook/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/taskbook-level4/issues/336\"\u003eThe issue on TaskBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":74,"xiaobill8":3}},{"path":"src/main/java/taskbook/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    private static final String emptyCellStyle \u003d \"-fx-background-color: derive(#455985, 0%);\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"            + \" -fx-border-color: derive(#455985, 0%);\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"                setStyle(emptyCellStyle);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"                int index \u003d getIndex() + 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"                PersonCard card \u003d new PersonCard(person, index);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"                setGraphic(card.getRoot());","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Nephelite":6,"-":45,"xiaobill8":3}},{"path":"src/main/java/taskbook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"xiaobill8":1}},{"path":"src/main/java/taskbook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"xiaobill8":1}},{"path":"src/main/java/taskbook/ui/TaskListCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":" * An UI component that displays information of a {@code TaskList}.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"public class TaskListCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    private static final String FXMLDEADLINE \u003d \"TaskListDeadlineCard.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    private static final String FXMLEVENT \u003d \"TaskListEventCard.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    private static final String FXMLTODO \u003d \"TaskListTodoCard.fxml\";","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/taskbook-level4/issues/336\"\u003eThe issue on TaskBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    public final Task task;","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    private Label relatedParty;","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    private Label assignment;","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    private Label description;","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    private Label isDone;","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    private Label id;","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"     * Creates a {@code TaskListCode} with the given {@code TaskList} and index to display.","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    public TaskListCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"        super(task instanceof Todo ? FXMLTODO : task instanceof Deadline ? FXMLDEADLINE : FXMLEVENT);","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        this.relatedParty.setText(task.getName().fullName);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        this.description.setText(task.toUiString());","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        this.assignment.setText(task.getAssignment().toString());","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        this.isDone.setText(task.getStatus());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        this.id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        task.getTags().stream()","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"            return true;","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"        if (!(other instanceof TaskListCard)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"            return false;","lastModifiedDate":"2022-09-25"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"        // state check","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"        TaskListCard card \u003d (TaskListCard) other;","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Nephelite":78,"xiaobill8":4}},{"path":"src/main/java/taskbook/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    private static final String emptyCellStyle \u003d \"-fx-background-color: derive(#455985, 0%);\"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"            + \" -fx-border-color: derive(#455985, 0%);\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        super(FXML);","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code TaskList} using a {@code TaskListCard}.","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"                setGraphic(null);","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"                setText(null);","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"                setStyle(emptyCellStyle);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"            } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"                setGraphic(new TaskListCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Nephelite":49,"xiaobill8":3}},{"path":"src/main/java/taskbook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"xiaobill8":1}},{"path":"src/main/java/taskbook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.LogsCenter;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.StringUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.Logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkBlueTheme.css\");","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Nephelite":1,"-":82,"xiaobill8":5}},{"path":"src/main/java/taskbook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"xiaobill8":2}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" stylesheets\u003d\"@DarkBlueTheme.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Nephelite":1,"-":7}},{"path":"src/main/resources/view/DarkBlueTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":".background {","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#455985, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"    background-color: #455985; /* Used in the default.html file */","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":".label {","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":".label-bright {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":".label-header {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":".text-field {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":".tab-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":".table-view {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color:","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        transparent","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"        transparent","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"        transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":".split-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":".list-view {","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#151E3D, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":".list-cell {","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"Nephelite"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"Nephelite"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:even #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#25316D, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:odd #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#25316D, 10%);","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":113,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":".list-cell .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":118,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"Nephelite"},"content":".cell_big_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":123,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":124,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":125,"author":{"gitId":"Nephelite"},"content":".cell_small_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":126,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-24"},{"lineNumber":127,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":131,"author":{"gitId":"Nephelite"},"content":".stack-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":132,"author":{"gitId":"Nephelite"},"content":"     -fx-background-color: derive(#25316D, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"Nephelite"},"content":".pane-with-border {","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"Nephelite"},"content":"     -fx-background-color: derive(#455985, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"Nephelite"},"content":"     -fx-border-color: derive(#455985, 10%);","lastModifiedDate":"2022-10-24"},{"lineNumber":138,"author":{"gitId":"Nephelite"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"Nephelite"},"content":".status-bar {","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#25316D, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":144,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"Nephelite"},"content":".result-display {","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-24"},{"lineNumber":148,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"Nephelite"},"content":".result-display .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-10-24"},{"lineNumber":154,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"Nephelite"},"content":".status-bar .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"Nephelite"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"Nephelite"},"content":".status-bar-with-border {","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 5%);","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: derive(#1d1d1d, 15%);","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"Nephelite"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":171,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":172,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":173,"author":{"gitId":"Nephelite"},"content":".grid-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"Nephelite"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 15%);","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"Nephelite"},"content":".context-menu {","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"Nephelite"},"content":".context-menu .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"Nephelite"},"content":".menu-bar {","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"Nephelite"},"content":".menu-bar .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"Nephelite"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"Nephelite"},"content":".menu .left-container {","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"Nephelite"},"content":"/*","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"Nephelite"},"content":" * Metro style Push Button","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"Nephelite"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"Nephelite"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"Nephelite"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"Nephelite"},"content":".button {","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-10-24"},{"lineNumber":214,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-10-24"},{"lineNumber":215,"author":{"gitId":"Nephelite"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":216,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":217,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-24"},{"lineNumber":218,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":219,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"Nephelite"},"content":".button:hover {","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"Nephelite"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"Nephelite"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":229,"author":{"gitId":"Nephelite"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":230,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"Nephelite"},"content":".button:focused {","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"Nephelite"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-10-24"},{"lineNumber":236,"author":{"gitId":"Nephelite"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":237,"author":{"gitId":"Nephelite"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":238,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":239,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":240,"author":{"gitId":"Nephelite"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-10-24"},{"lineNumber":241,"author":{"gitId":"Nephelite"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-10-24"},{"lineNumber":242,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":243,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":244,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":245,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":246,"author":{"gitId":"Nephelite"},"content":".button:default {","lastModifiedDate":"2022-10-24"},{"lineNumber":247,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-24"},{"lineNumber":248,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-24"},{"lineNumber":249,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":250,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":251,"author":{"gitId":"Nephelite"},"content":".button:default:hover {","lastModifiedDate":"2022-10-24"},{"lineNumber":252,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-10-24"},{"lineNumber":253,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":254,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":255,"author":{"gitId":"Nephelite"},"content":".dialog-pane {","lastModifiedDate":"2022-10-24"},{"lineNumber":256,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":257,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":258,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"Nephelite"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-10-24"},{"lineNumber":260,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-24"},{"lineNumber":261,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":262,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":263,"author":{"gitId":"Nephelite"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-10-24"},{"lineNumber":264,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-24"},{"lineNumber":265,"author":{"gitId":"Nephelite"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-24"},{"lineNumber":266,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":268,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":269,"author":{"gitId":"Nephelite"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-10-24"},{"lineNumber":270,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-10-24"},{"lineNumber":271,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":272,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":273,"author":{"gitId":"Nephelite"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-10-24"},{"lineNumber":274,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-10-24"},{"lineNumber":275,"author":{"gitId":"Nephelite"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-10-24"},{"lineNumber":276,"author":{"gitId":"Nephelite"},"content":"    -fx-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":277,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":278,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":279,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":280,"author":{"gitId":"Nephelite"},"content":".scroll-bar {","lastModifiedDate":"2022-10-24"},{"lineNumber":281,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#25316D, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":282,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":283,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":284,"author":{"gitId":"Nephelite"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-10-24"},{"lineNumber":285,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#25316D, 50%);","lastModifiedDate":"2022-10-24"},{"lineNumber":286,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-10-24"},{"lineNumber":287,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":288,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":289,"author":{"gitId":"Nephelite"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-10-24"},{"lineNumber":290,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":291,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":292,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":293,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":294,"author":{"gitId":"Nephelite"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-10-24"},{"lineNumber":295,"author":{"gitId":"Nephelite"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-10-24"},{"lineNumber":296,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":297,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":298,"author":{"gitId":"Nephelite"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-10-24"},{"lineNumber":299,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-10-24"},{"lineNumber":300,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":301,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":302,"author":{"gitId":"Nephelite"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-10-24"},{"lineNumber":303,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":304,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":305,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":306,"author":{"gitId":"Nephelite"},"content":"#cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":307,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-24"},{"lineNumber":308,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":309,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":310,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":311,"author":{"gitId":"Nephelite"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-10-24"},{"lineNumber":312,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-10-24"},{"lineNumber":313,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-10-24"},{"lineNumber":314,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":315,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":316,"author":{"gitId":"Nephelite"},"content":"#commandTextField {","lastModifiedDate":"2022-10-24"},{"lineNumber":317,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-10-24"},{"lineNumber":318,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":319,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2022-10-24"},{"lineNumber":320,"author":{"gitId":"Nephelite"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":321,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":322,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-24"},{"lineNumber":323,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-24"},{"lineNumber":324,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":325,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":326,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":327,"author":{"gitId":"Nephelite"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-10-24"},{"lineNumber":328,"author":{"gitId":"Nephelite"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-10-24"},{"lineNumber":329,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":330,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":331,"author":{"gitId":"Nephelite"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-10-24"},{"lineNumber":332,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: transparent, #25316D, transparent, #25316D;","lastModifiedDate":"2022-10-24"},{"lineNumber":333,"author":{"gitId":"Nephelite"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":334,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":335,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":336,"author":{"gitId":"Nephelite"},"content":"#tags {","lastModifiedDate":"2022-10-24"},{"lineNumber":337,"author":{"gitId":"Nephelite"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-24"},{"lineNumber":338,"author":{"gitId":"Nephelite"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-24"},{"lineNumber":339,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":340,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":341,"author":{"gitId":"Nephelite"},"content":"#tags .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":342,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":343,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-10-24"},{"lineNumber":344,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-24"},{"lineNumber":345,"author":{"gitId":"Nephelite"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-24"},{"lineNumber":346,"author":{"gitId":"Nephelite"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-24"},{"lineNumber":347,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-24"},{"lineNumber":348,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":348}},{"path":"src/main/resources/view/DarkBlueThemeDeadline.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":".list-view {","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":".list-cell {","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:even #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#4B3869, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:odd #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#4B3869, 0%);","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":".list-cell .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":".cell_big_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":".cell_small_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":44}},{"path":"src/main/resources/view/DarkBlueThemeEvent.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":".list-view {","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":".list-cell {","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:even #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#664E88, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:odd #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#664E88, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":".list-cell .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":".cell_big_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":".cell_small_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":45}},{"path":"src/main/resources/view/DarkBlueThemeToDo.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":".list-view {","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":".list-cell {","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:even #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#2E0249, 35%);","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:odd #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: derive(#2E0249, 35%);","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":".list-cell .label {","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":".cell_big_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":".cell_small_label {","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":44}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Nephelite":1,"-":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"\u003cfx:root minHeight\u003d\"900.0\" minWidth\u003d\"600.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"TaskBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        \u003cURL value\u003d\"@DarkBlueTheme.css\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        \u003cURL value\u003d\"@DarkBlueThemeDeadline.css\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"            \u003cURL value\u003d\"@DarkBlueThemeEvent.css\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"      \u003cVBox prefWidth\u003d\"340.0\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@DarkBlueTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" minHeight\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"              \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"250.0\" prefHeight\u003d\"250.0\" prefWidth\u003d\"177.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"            \u003cGridPane hgap\u003d\"5.0\" styleClass\u003d\"background\" stylesheets\u003d\"@DarkBlueTheme.css\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"              \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"              \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"              \u003crowConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"                \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"              \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"                             \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"165.0\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@DarkBlueTheme.css\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefWidth\u003d\"318.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"                    \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"165.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@DarkBlueTheme.css\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"                 \u003cpadding\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"                 \u003c/padding\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"                 \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefWidth\u003d\"318.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Nephelite":34,"-":45}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003cVBox styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@DarkBlueTheme.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"  \u003cListView fx:id\u003d\"personListView\" stylesheets\u003d\"@DarkBlueTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Nephelite":2,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@DarkBlueTheme.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Nephelite":1,"-":7}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" stylesheets\u003d\"@DarkBlueTheme.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"Nephelite":5,"-":11}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@DarkBlueTheme.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"70\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"isDone\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$isDone\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"assignment\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"relatedParty\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$relatedParty\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Nephelite":48}},{"path":"src/main/resources/view/TaskListDeadlineCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@DarkBlueThemeDeadline.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"70\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"isDone\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$isDone\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"assignment\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"relatedParty\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$relatedParty\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":48}},{"path":"src/main/resources/view/TaskListEventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@DarkBlueThemeEvent.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"70\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"isDone\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$isDone\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"assignment\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"relatedParty\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$relatedParty\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":48}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003cVBox styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@DarkBlueTheme.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"  \u003cListView fx:id\u003d\"taskListView\" stylesheets\u003d\"@DarkBlueTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Nephelite":8}},{"path":"src/main/resources/view/TaskListTodoCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@DarkBlueThemeToDo.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"70\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"isDone\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$isDone\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"assignment\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"               \u003cLabel fx:id\u003d\"relatedParty\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$relatedParty\" /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Nephelite":48}},{"path":"src/test/java/taskbook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"xiaobill8":1}},{"path":"src/test/java/taskbook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"xiaobill8":1}},{"path":"src/test/java/taskbook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"xiaobill8":3}},{"path":"src/test/java/taskbook/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.core.index;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":57,"xiaobill8":4}},{"path":"src/test/java/taskbook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"                errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":32,"xiaobill8":6}},{"path":"src/test/java/taskbook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":102,"xiaobill8":6}},{"path":"src/test/java/taskbook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Config;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":108,"xiaobill8":8}},{"path":"src/test/java/taskbook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"xiaobill8":3}},{"path":"src/test/java/taskbook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TestUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"xiaobill8":3}},{"path":"src/test/java/taskbook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.commons.util;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":137,"xiaobill8":9}},{"path":"src/test/java/taskbook/logic/CommandHistoryManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"public class CommandHistoryManagerTest {","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"    private static final String ONE \u003d \"1\";","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    private static final String TWO \u003d \"2\";","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    private static final String THREE \u003d \"3\";","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    private static final String FOUR \u003d \"4\";","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    private static final String FIVE \u003d \"5\";","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    private static final String SIX \u003d \"6\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    private static final String SEVEN \u003d \"7\";","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    public void getPreviousCommand_emptyHistory_returnsNull() {","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        assertNull(history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"    public void getNextCommand_emptyHistory_returnsNull() {","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        assertNull(history.getNextCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    public void getPreviousCommand_validSteps_correct() {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(ONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(TWO);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(THREE);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(THREE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(TWO, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(ONE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    public void getPreviousCommand_pastLast_returnsLast() {","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(ONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(TWO);","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(TWO, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(ONE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(ONE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(ONE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"    public void getNextCommand_validSteps_correct() {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(ONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(TWO);","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(THREE);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        history.getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"        history.getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        history.getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(TWO, history.getNextCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(THREE, history.getNextCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"    public void getNextCommand_pastFirst_returnsEmpty() {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(ONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(TWO);","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"        history.getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        history.getPreviousCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"        history.getNextCommand();","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(EMPTY, history.getNextCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(EMPTY, history.getNextCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"    public void addCommand_valid_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager();","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"        assertDoesNotThrow(() -\u003e history.addCommand(ONE));","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"    public void addCommand_addPastEvenCapacity_prunesHistory() {","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager(2);","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(ONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(TWO);","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(THREE);","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(FOUR);","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(FIVE);","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(FIVE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(FOUR, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(FOUR, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"    public void addCommand_addPastOddCapacity_prunesHistory() {","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        CommandHistoryManager history \u003d new CommandHistoryManager(3);","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(ONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(TWO);","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(THREE);","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(FOUR);","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(FIVE);","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(SIX);","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        history.addCommand(SEVEN);","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(SEVEN, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(SIX, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(FIVE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(FIVE, history.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"seetohjinwei":113}},{"path":"src/test/java/taskbook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandResult;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"import taskbook.storage.StorageManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        JsonTaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"                new JsonTaskBookStorage(temporaryFolder.resolve(\"taskBook.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        StorageManager storage \u003d new StorageManager(taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        String deleteCommand \u003d \"contact delete i/9\";","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"        String listCommand \u003d ContactCategoryParser.CATEGORY_WORD + \" \" + ContactListCommand.COMMAND_WORD;","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(listCommand, ContactListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        // Setup LogicManager with JsonTaskBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        JsonTaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"                new JsonTaskBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptiontaskBook.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        StorageManager storage \u003d new StorageManager(taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        String addCommand \u003d ContactCategoryParser.CATEGORY_WORD + \" \" + ContactAddCommand.COMMAND_WORD","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"            + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"            + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalTaskBook.AMY).withTags().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"    public void getPreviousCommand_valid_returnsNull() {","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        assertNull(logic.getPreviousCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"    public void getNextCommand_valid_returnsNull() {","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        assertNull(logic.getNextCommand());","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"xiaobill8"},"content":"    private static class JsonTaskBookIoExceptionThrowingStub extends JsonTaskBookStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"xiaobill8"},"content":"        private JsonTaskBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"xiaobill8"},"content":"        public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dexter-sim":1,"-":120,"seetohjinwei":12,"xiaobill8":38}},{"path":"src/test/java/taskbook/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    public void execute_emptytaskBook_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    public void execute_nonEmptytaskBook_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        expectedModel.setTaskBook(new TaskBook());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"xiaobill8":30}},{"path":"src/test/java/taskbook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":53,"xiaobill8":1}},{"path":"src/test/java/taskbook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    public static final String VALID_DESCRIPTION_WORK \u003d \"work\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    public static final String VALID_DESCRIPTION_STUDY \u003d \"study\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"    public static final String VALID_DATE_2022 \u003d \"2022-01-01\";","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"    public static final String VALID_DATE_1999 \u003d \"1999-12-31\";","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"    public static final String DESCRIPTION_DESC_WORK \u003d \" \" + CliSyntax.PREFIX_DESCRIPTION + VALID_DESCRIPTION_WORK;","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"    public static final String DESCRIPTION_DESC_STUDY \u003d \" \" + CliSyntax.PREFIX_DESCRIPTION + VALID_DESCRIPTION_STUDY;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"    public static final String ASSIGN_FROM_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_ASSIGN_FROM + VALID_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"    public static final String ASSIGN_FROM_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_ASSIGN_FROM + VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"    public static final String ASSIGN_TO_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_ASSIGN_TO + VALID_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    public static final String ASSIGN_TO_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_ASSIGN_TO + VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"    public static final String DATE_DESC_2022 \u003d \" \" + CliSyntax.PREFIX_DATE + VALID_DATE_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"    public static final String DATE_DESC_1999 \u003d \" \" + CliSyntax.PREFIX_DATE + VALID_DATE_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + CliSyntax.PREFIX_ADDRESS; // empty string not allowed","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"    public static final String INVALID_ASSIGN_FROM_DESC \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"            \" \" + CliSyntax.PREFIX_ASSIGN_FROM + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"    public static final String INVALID_ASSIGN_TO_DESC \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"            \" \" + CliSyntax.PREFIX_ASSIGN_TO + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"    public static final ContactEditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    public static final ContactEditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"    public static final EditTaskDescriptor TASK_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"    public static final EditTaskDescriptor TASK_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"    static {","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"        TASK_WORK \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.FROM)","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"            .withIsDone(false)","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"            .withDate(VALID_DATE_1999)","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        TASK_STUDY \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.TO)","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"            .withIsDone(true)","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"            .withDate(VALID_DATE_2022)","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"xiaobill8"},"content":"     * - the task book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook expectedTaskBook \u003d new TaskBook(actualModel.getTaskBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(expectedTaskBook, actualModel.getTaskBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"xiaobill8"},"content":"     * {@code model}\u0027s task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"bananamonkey4655"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"bananamonkey4655"},"content":"     * {@code model}\u0027s task book.","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"bananamonkey4655"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"bananamonkey4655"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"bananamonkey4655"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"bananamonkey4655"},"content":"        String name \u003d task.getName().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"bananamonkey4655"},"content":"        String desc \u003d task.getDescription().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"bananamonkey4655"},"content":"        model.updateFilteredTaskListPredicate((t) -\u003e t.isQueryInTask(name) || t.isQueryInTask(desc));","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dexter-sim":13,"Nephelite":1,"bananamonkey4655":16,"-":89,"seetohjinwei":30,"xiaobill8":29}},{"path":"src/test/java/taskbook/logic/commands/ContactAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalTaskBook.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"public class ContactAddCommandIntegrationTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"        model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new ContactAddCommand(validPerson), model,","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"                String.format(ContactAddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        Person personInList \u003d model.getTaskBook().getPersonList().get(0);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandFailure(new ContactAddCommand(personInList), model, ContactAddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bananamonkey4655":1,"-":29,"seetohjinwei":4,"xiaobill8":12}},{"path":"src/test/java/taskbook/logic/commands/ContactAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStub;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubWithPerson;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"public class ContactAddCommandTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactAddCommand(null));","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        CommandResult commandResult \u003d new ContactAddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(String.format(ContactAddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        ContactAddCommand contactAddCommand \u003d new ContactAddCommand(validPerson);","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"            ContactAddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e contactAddCommand.execute(modelStub));","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        ContactAddCommand addAliceCommand \u003d new ContactAddCommand(alice);","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        ContactAddCommand addBobCommand \u003d new ContactAddCommand(bob);","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        ContactAddCommand addAliceCommandCopy \u003d new ContactAddCommand(alice);","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"            return new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bananamonkey4655":2,"-":77,"seetohjinwei":10,"xiaobill8":10}},{"path":"src/test/java/taskbook/logic/commands/ContactDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalTaskBook.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"public class ContactDeleteCommandTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    private final Model model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand contactDeleteCommand \u003d new ContactDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(ContactDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(contactDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand contactDeleteCommand \u003d new ContactDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandFailure(contactDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_deletingPersonWithTask_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        // Ensures that a person with a task is deleted.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        Person person \u003d TypicalTaskBook.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        modelManager.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        modelManager.addTask(TypicalTaskBook.EATING);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand contactDeleteCommand \u003d new ContactDeleteCommand(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d ContactDeleteCommand.getDeletePersonFailureMessage(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandFailure(contactDeleteCommand, modelManager, expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand contactDeleteCommand \u003d new ContactDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(ContactDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(contactDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        // ensures that outOfBoundIndex is still in bounds of task book list","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskBook().getPersonList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand contactDeleteCommand \u003d new ContactDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-09-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandFailure(contactDeleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand deleteFirstCommand \u003d new ContactDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-23"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand deleteSecondCommand \u003d new ContactDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand deleteFirstCommandCopy \u003d new ContactDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"        model.updateFilteredPersonListPredicate(p -\u003e false);","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Nephelite":1,"-":76,"seetohjinwei":29,"xiaobill8":19}},{"path":"src/test/java/taskbook/logic/commands/ContactEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"public class ContactEditCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private final Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(ContactEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        Person editedPerson \u003d personInList.withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(ContactEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"                new ContactEditCommand.EditPersonDescriptor());","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(ContactEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList()","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"                .get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(ContactEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(TypicalIndexes.INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, ContactEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"        // edit person in filtered list into a duplicate in task book","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"        Person personInList \u003d model.getTaskBook()","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"                .getPersonList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, ContactEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"xiaobill8"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"xiaobill8"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"xiaobill8"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"xiaobill8"},"content":"     * but smaller than size of task book","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"xiaobill8"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"xiaobill8"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"xiaobill8"},"content":"        // ensures that outOfBoundIndex is still in bounds of task book list","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskBook().getPersonList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand editCommand \u003d new ContactEditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"xiaobill8"},"content":"    public void equals() {","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"        final ContactEditCommand standardCommand \u003d new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"xiaobill8"},"content":"                CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"xiaobill8"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor copyDescriptor \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"                new ContactEditCommand.EditPersonDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"seetohjinwei"},"content":"            commandWithSameValues \u003d new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"xiaobill8"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"xiaobill8"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":163,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"xiaobill8"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"xiaobill8"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(standardCommand.equals(new ContactEditCommand(TypicalIndexes.INDEX_SECOND_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"xiaobill8"},"content":"                CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"xiaobill8"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(standardCommand.equals(new ContactEditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"xiaobill8"},"content":"                CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"seetohjinwei":28,"xiaobill8":148}},{"path":"src/test/java/taskbook/logic/commands/ContactFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"public class ContactFindCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    public void execute_allFieldsPresent_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cPerson\u003e pred \u003d (p -\u003e p.isQueryInPerson(\"pa\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateFilteredPersonListPredicate(pred);","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        ContactFindCommand command \u003d new ContactFindCommand(pred, \"pa\");","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, String.format(ContactFindCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"                + expectedModel.getFilteredPersonList().size() + \" persons listed.\\nQuery: pa\"), expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    public void execute_allFieldsPresentNoMatches_success() {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cPerson\u003e pred \u003d (p -\u003e p.isQueryInPerson(\"x\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateFilteredPersonListPredicate(pred);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        ContactFindCommand command \u003d new ContactFindCommand(pred, \"x\");","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, String.format(ContactFindCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"                + expectedModel.getFilteredPersonList().size() + \" persons listed.\\nQuery: x\"), expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    public void execute_allFieldsPresent_incorrectModel() {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cPerson\u003e pred \u003d (p -\u003e p.isQueryInPerson(\"pa\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        ContactFindCommand command \u003d new ContactFindCommand(pred, \"ca\");","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"            command.execute(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"            assert false;","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"        assertFalse(model.equals(expectedModel));","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":57}},{"path":"src/test/java/taskbook/logic/commands/ContactListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalTaskBook.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ContactListCommand.","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"public class ContactListCommandTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"        model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new ContactListCommand(), model, ContactListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new ContactListCommand(), model, ContactListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bananamonkey4655":2,"-":25,"seetohjinwei":3,"xiaobill8":10}},{"path":"src/test/java/taskbook/logic/commands/ContactSortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameAlphabeticalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameReverseAlphabeticalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortPhoneAscendingCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortPhoneDescendingCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"public class ContactSortCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public void equals() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        ContactSortAddedChronologicalCommand contactSortFirstCommand \u003d new ContactSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        ContactSortNameAlphabeticalCommand contactSortSecondCommand \u003d new ContactSortNameAlphabeticalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"        assertTrue(contactSortFirstCommand.equals(contactSortFirstCommand));","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        // same command type -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        ContactSortAddedChronologicalCommand contactSortFirstCommandCopy \u003d new ContactSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"        assertTrue(contactSortFirstCommand.equals(contactSortFirstCommandCopy));","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"        // different object types -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        assertFalse(contactSortFirstCommand.equals(1));","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"        assertFalse(contactSortFirstCommand.equals(null));","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        // different sort type -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        assertFalse(contactSortFirstCommand.equals(contactSortSecondCommand));","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    public void execute_contactSortAddedChronological_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"        ContactSortAddedChronologicalCommand command \u003d new ContactSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedPersonList((p1, p2) -\u003e -1);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(ContactSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"                + ContactSortAddedChronologicalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"    public void execute_contactSortNameAlphabetical_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        ContactSortNameAlphabeticalCommand command \u003d new ContactSortNameAlphabeticalCommand();","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedPersonList((p1, p2) -\u003e p1.compareByNameAlphabeticalTo(p2));","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(ContactSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"                + ContactSortNameAlphabeticalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    //NOTE: The following tests merely test to see if the commands execute, but do not test the actual ordering!","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"    public void execute_contactSortNameReverseAlphabetical_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        ContactSortNameReverseAlphabeticalCommand command \u003d new ContactSortNameReverseAlphabeticalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedPersonList((p1, p2) -\u003e p1.compareByNameReverseAlphabeticalTo(p2));","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(ContactSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"                + ContactSortNameReverseAlphabeticalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"    public void execute_contactSortPhoneAscending_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"        ContactSortPhoneAscendingCommand command \u003d new ContactSortPhoneAscendingCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedPersonList((p1, p2) -\u003e p1.compareByPhoneNumberAscendingTo(p2));","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(ContactSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"                + ContactSortPhoneAscendingCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"    public void execute_contactSortPhoneDescending_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"        ContactSortPhoneDescendingCommand command \u003d new ContactSortPhoneDescendingCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedPersonList((p1, p2) -\u003e p1.compareByPhoneNumberDescendingTo(p2));","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(ContactSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"                + ContactSortPhoneDescendingCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":97}},{"path":"src/test/java/taskbook/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    public void equals() {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptorWithSameValues \u003d new ContactEditCommand.EditPersonDescriptor(","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"            CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(CommandTestUtil.DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_AMY));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(5));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_BOB));","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"seetohjinwei":3,"xiaobill8":53}},{"path":"src/test/java/taskbook/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.categoryless.ExitCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"xiaobill8":19}},{"path":"src/test/java/taskbook/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.HelpCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.UndoCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_null_returnsGeneralUsage() {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        CommandResult expected \u003d new CommandResult(HelpCommand.MESSAGE_GENERAL_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new HelpCommand(null), model, expected, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_taskSort_returnsUsage() {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        CommandResult expected \u003d new CommandResult(TaskSortCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new HelpCommand(HelpCommand.CommandWord.TASK_SORT), model, expected, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_undo_returnsUsage() {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        CommandResult expected \u003d new CommandResult(UndoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new HelpCommand(HelpCommand.CommandWord.UNDO), model, expected, expectedModel);","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"    public void equals_nullCommandWord() {","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand null1 \u003d new HelpCommand(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand null2 \u003d new HelpCommand(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(null1, null2);","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(null2, null1);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        assertNotEquals(null1, null);","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand other \u003d new HelpCommand(HelpCommand.CommandWord.REDO);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        assertNotEquals(null1, other);","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        assertNotEquals(other, null1);","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        assertNotEquals(other, null);","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"seetohjinwei":38,"xiaobill8":12}},{"path":"src/test/java/taskbook/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.RedoCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"public class RedoCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    private static final Person P1 \u003d new PersonBuilder().withName(\"Person 1\").build();","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    public void execute() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"        Model expected \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        expected.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        expected.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        Model actual \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        actual.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        actual.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        actual.undoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new RedoCommand(), actual, RedoCommand.MESSAGE_SUCCESS, expected);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"seetohjinwei":30}},{"path":"src/test/java/taskbook/logic/commands/TaskDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStub;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubAcceptingTaskAdded;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubWithPerson;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.tasks.TaskAddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeadlineCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.testutil.DeadlineBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"public class TaskDeadlineCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    private static final Name NAME_AMY \u003d new Name(\"Amy\");","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    private static final Name NAME_BOB \u003d new Name(\"Bob\");","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    private static final Description DESCRIPTION_ONE \u003d new Description(\"DESCRIPTION ONE\");","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    private static final Description DESCRIPTION_TWO \u003d new Description(\"DESCRIPTION TWO\");","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    private static final Assignment ASSIGNMENT_TO \u003d Assignment.TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    private static final Assignment ASSIGNMENT_FROM \u003d Assignment.FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    private static final LocalDate DATE_ONE \u003d LocalDate.parse(\"2014-06-21\");","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    private static final LocalDate DATE_TWO \u003d LocalDate.parse(\"1989-02-16\");","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(null, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE));","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, null, ASSIGNMENT_TO, DATE_ONE));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, null, DATE_ONE));","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullLocalDate_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, null));","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"        Person validPerson \u003d new PersonBuilder().withName(String.valueOf(NAME_BOB)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded(validPerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"        Deadline validTask \u003d new DeadlineBuilder().withPersonName(validPerson).withDeadlineDate(DATE_ONE).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"        CommandResult commandResult \u003d new TaskDeadlineCommand(validTask.getName(), validTask.getDescription(),","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"                validTask.getAssignment(), validTask.getDate()).execute(modelStub);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(String.format(TaskDeadlineCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.getTasks());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_personAssociatedWithTaskNotFound_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        Person johnny \u003d new PersonBuilder().withName(\"Johnny\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"        TaskDeadlineCommand taskDeadlineCommand \u003d new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE,","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"                ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(johnny);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"                TaskAddCommand.MESSAGE_PERSON_NOT_FOUND, () -\u003e taskDeadlineCommand.execute(modelStub));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"    public void execute_duplicateDeadline_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"        Person validPerson \u003d new PersonBuilder().withName(String.valueOf(NAME_BOB)).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded(validPerson);","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"        Deadline validTask \u003d new DeadlineBuilder().withPersonName(validPerson).withDeadlineDate(DATE_ONE).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommand \u003d new TaskDeadlineCommand(","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"                validTask.getName(),","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"                validTask.getDescription(),","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"                validTask.getAssignment(),","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"                validTask.getDate());","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"        // Adds the task into the modelStub.","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"        taskDeadlineCommand.execute(modelStub);","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"                TaskAddCommand.MESSAGE_DUPLICATE_TASK_FAILURE, () -\u003e taskDeadlineCommand.execute(modelStub));","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"        // 2 deadlines with different descriptions","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandOne \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandTwo \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_TWO, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"        // 2 deadlines with different names","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandThree \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandFour \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_BOB, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"        // 2 deadlines with different assignments","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandFive \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandSix \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_FROM, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"        // 2 deadlines with different dates","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandSeven \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandEight \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_TWO);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"dexter-sim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskDeadlineCommandOne.equals(taskDeadlineCommandOne));","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"dexter-sim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"dexter-sim"},"content":"        TaskDeadlineCommand taskDeadlineCommandOneCopy \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskDeadlineCommandOne.equals(taskDeadlineCommandOneCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"dexter-sim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskDeadlineCommandOne.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"dexter-sim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskDeadlineCommandOne.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"dexter-sim"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskDeadlineCommandOne.equals(taskDeadlineCommandTwo));","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"dexter-sim"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskDeadlineCommandThree.equals(taskDeadlineCommandFour));","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"dexter-sim"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskDeadlineCommandFive.equals(taskDeadlineCommandSix));","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"dexter-sim"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskDeadlineCommandSeven.equals(taskDeadlineCommandEight));","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":120,"bananamonkey4655":37}},{"path":"src/test/java/taskbook/logic/commands/TaskDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"public class TaskDeleteCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"        TaskDeleteCommand deleteFirstCommand \u003d new TaskDeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"        TaskDeleteCommand deleteSecondCommand \u003d new TaskDeleteCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"        TaskDeleteCommand deleteFirstCommandCopy \u003d new TaskDeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dexter-sim":35}},{"path":"src/test/java/taskbook/logic/commands/TaskEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.TASK_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.TASK_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TodoBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"public class TaskEditCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_validNameChange_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        Task task \u003d TypicalTaskBook.SLEEPING;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Todo editedTask \u003d new TodoBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"            .withPersonName(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"            .withAssignment(Assignment.FROM)","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"            .withDescription(task.getDescription().description)","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"            .withIsDone(task.isDone())","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        TaskEditCommand editCommand \u003d new TaskEditCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d String.format(TaskEditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased()), editedTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_invalidContact_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d TypicalTaskBook.EATING;","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        Person invalidPerson \u003d new PersonBuilder().withName(\"notintaskbook\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"        Todo editedTask \u003d new TodoBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"            .withPersonName(invalidPerson)","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.TO)","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"            .withDescription(task.getDescription().description)","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"            .withIsDone(task.isDone())","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"        TaskEditCommand editCommand \u003d new TaskEditCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        String expectedMessage \u003d TaskEditCommand.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        Task task \u003d TypicalTaskBook.EATING;","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        Todo editedTask \u003d new TodoBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"            .withPersonName(TypicalTaskBook.BENSON)","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.TO)","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"            .withDescription(task.getDescription().description)","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"            .withIsDone(task.isDone())","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"        TaskEditCommand editCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"        final TaskEditCommand standardCommand \u003d new TaskEditCommand(INDEX_FIRST_TASK, TASK_WORK);","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(TASK_WORK);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"        TaskEditCommand commandWithSameValues \u003d new TaskEditCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        assertNotEquals(standardCommand, new TaskEditCommand(INDEX_SECOND_TASK, TASK_WORK));","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"        assertNotEquals(standardCommand, new TaskEditCommand(INDEX_FIRST_TASK, TASK_STUDY));","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":9,"seetohjinwei":90,"xiaobill8":12}},{"path":"src/test/java/taskbook/logic/commands/TaskEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStub;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubAcceptingTaskAdded;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubWithPerson;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.tasks.TaskAddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEventCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.testutil.EventBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"public class TaskEventCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    private static final Name NAME_AMY \u003d new Name(\"Amy\");","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    private static final Name NAME_BOB \u003d new Name(\"Bob\");","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    private static final Description DESCRIPTION_ONE \u003d new Description(\"DESCRIPTION ONE\");","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    private static final Description DESCRIPTION_TWO \u003d new Description(\"DESCRIPTION TWO\");","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    private static final Assignment ASSIGNMENT_TO \u003d Assignment.TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    private static final Assignment ASSIGNMENT_FROM \u003d Assignment.FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    private static final LocalDate DATE_ONE \u003d LocalDate.parse(\"2014-06-21\");","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    private static final LocalDate DATE_TWO \u003d LocalDate.parse(\"1989-02-16\");","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(null, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE));","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, null, ASSIGNMENT_TO, DATE_ONE));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, null, DATE_ONE));","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullLocalDate_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, null));","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"        Person validPerson \u003d new PersonBuilder().withName(String.valueOf(NAME_BOB)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded(validPerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"        Event validTask \u003d new EventBuilder().withPersonName(validPerson).withEventDate(DATE_TWO).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"        CommandResult commandResult \u003d new TaskEventCommand(validTask.getName(), validTask.getDescription(),","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"                validTask.getAssignment(), validTask.getDate()).execute(modelStub);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(String.format(TaskEventCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.getTasks());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_personAssociatedWithTaskNotFound_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        Person johnny \u003d new PersonBuilder().withName(\"Johnny\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"        TaskEventCommand taskEventCommand \u003d new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE,","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"                ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(johnny);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"                TaskAddCommand.MESSAGE_PERSON_NOT_FOUND, () -\u003e taskEventCommand.execute(modelStub));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"    public void execute_duplicateEvent_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"        Person validPerson \u003d new PersonBuilder().withName(String.valueOf(NAME_BOB)).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded(validPerson);","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"        Event validTask \u003d new EventBuilder().withPersonName(validPerson).withEventDate(DATE_TWO).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommand \u003d new TaskEventCommand(validTask.getName(), validTask.getDescription(),","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"                validTask.getAssignment(), validTask.getDate());","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        // Adds the task into the modelStub.","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"        taskEventCommand.execute(modelStub);","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"                TaskAddCommand.MESSAGE_DUPLICATE_TASK_FAILURE, () -\u003e taskEventCommand.execute(modelStub));","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"        // 2 events with different descriptions","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandOne \u003d new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandTwo \u003d new TaskEventCommand(NAME_AMY, DESCRIPTION_TWO, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"        // 2 events with different names","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandThree \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandFour \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_BOB, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"        // 2 events with different assignments","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandFive \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandSix \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_FROM, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"        // 2 events with different dates","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandSeven \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandEight \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_TWO);","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"dexter-sim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskEventCommandOne.equals(taskEventCommandOne));","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"dexter-sim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"dexter-sim"},"content":"        TaskEventCommand taskEventCommandOneCopy \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO, DATE_ONE);","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskEventCommandOne.equals(taskEventCommandOneCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"dexter-sim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskEventCommandOne.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"dexter-sim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskEventCommandOne.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"dexter-sim"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskEventCommandOne.equals(taskEventCommandTwo));","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"dexter-sim"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskEventCommandThree.equals(taskEventCommandFour));","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"dexter-sim"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskEventCommandFive.equals(taskEventCommandSix));","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"dexter-sim"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskEventCommandSeven.equals(taskEventCommandEight));","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":115,"bananamonkey4655":37}},{"path":"src/test/java/taskbook/logic/commands/TaskFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"public class TaskFindCommandTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    public void execute_allFieldsPresent_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cTask\u003e pred \u003d (t -\u003e t.isDone() \u003d\u003d true);","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        pred \u003d pred.and(t -\u003e t.isAssignmentCorrect(Assignment.TO));","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        pred \u003d pred.and(t -\u003e t.isQueryInTask(\"ea\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateFilteredTaskListPredicate(pred);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand command \u003d new TaskFindCommand(pred, \"ea\", \"TO\", \"X\");","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, String.format(TaskFindCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"                + expectedModel.getFilteredTaskList().size() + \" tasks listed.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"                + \"Query: ea\\nAssignment: TO\\nTasks are done.\"), expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    public void execute_allFieldsPresent_incorrectModel() {","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cTask\u003e pred \u003d (t -\u003e t.isDone() \u003d\u003d true);","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        pred \u003d pred.and(t -\u003e t.isAssignmentCorrect(Assignment.TO));","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        pred \u003d pred.and(t -\u003e t.isQueryInTask(\"ea\"));","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand command \u003d new TaskFindCommand(pred, \"ea\", \"TO\", \"X\");","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"            command.execute(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"            assert false;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        assertFalse(model.equals(expectedModel));","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"    public void execute_oneFieldPresent_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cTask\u003e pred \u003d (t -\u003e t.isDone() \u003d\u003d true);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateFilteredTaskListPredicate(pred);","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand command \u003d new TaskFindCommand(pred, null, null, \"X\");","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, String.format(TaskFindCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"                + expectedModel.getFilteredTaskList().size() + \" tasks listed.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"                + \"Tasks are done.\"), expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"    public void execute_oneFieldPresent_incorrectModel() {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        Predicate\u003cTask\u003e pred \u003d (t -\u003e t.isDone() \u003d\u003d true);","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand command \u003d new TaskFindCommand(pred, null, null, \"X\");","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"            command.execute(model);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"            assert false;","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"        assertFalse(model.equals(expectedModel));","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":79}},{"path":"src/test/java/taskbook/logic/commands/TaskListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import static taskbook.testutil.TypicalTaskBook.getTypicalTaskBook;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.tasks.TaskListCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":" * Contains integration tests (interaction with the Model) and unit tests for TaskListCommand.","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"public class TaskListCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"    private Model model;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"        model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"        expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        assertCommandSuccess(new TaskListCommand(), model, TaskListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"        assertCommandSuccess(new TaskListCommand(), model, TaskListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"bananamonkey4655":40}},{"path":"src/test/java/taskbook/logic/commands/TaskMarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.testutil.TodoBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"public class TaskMarkCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        TaskMarkCommand taskMarkFirstCommand \u003d new TaskMarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        TaskMarkCommand taskMarkSecondCommand \u003d new TaskMarkCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskMarkFirstCommand.equals(taskMarkFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        TaskMarkCommand taskMarkFirstCommandCopy \u003d new TaskMarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskMarkFirstCommand.equals(taskMarkFirstCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskMarkFirstCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskMarkFirstCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskMarkFirstCommand.equals(taskMarkSecondCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    public void execute_validMark_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        Todo task \u003d TypicalTaskBook.SLEEPING;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        Todo editedTask \u003d new TodoBuilder()","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"                .withName(task.getName())","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"                .withAssignment(task.getAssignment())","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"                .withDescription(task.getDescription().description)","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                .withIsDone(true)","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"                .build();","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"        TaskMarkCommand markCommand \u003d new TaskMarkCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(TaskMarkCommand.MESSAGE_MARK_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased()), editedTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"        TaskMarkCommand markCommand \u003d new TaskMarkCommand(index);","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"        assertCommandFailure(markCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"dexter-sim":72}},{"path":"src/test/java/taskbook/logic/commands/TaskSortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDateChronologicalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDateReverseChronologicalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionAlphabeticalCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionReverseAlphabeticalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"public class TaskSortCommandTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    public void equals() {","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        TaskSortAddedChronologicalCommand taskSortFirstCommand \u003d new TaskSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        TaskSortDescriptionAlphabeticalCommand taskSortSecondCommand \u003d new TaskSortDescriptionAlphabeticalCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        assertTrue(taskSortFirstCommand.equals(taskSortFirstCommand));","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        // same command type -\u003e returns true","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        TaskSortAddedChronologicalCommand taskSortFirstCommandCopy \u003d new TaskSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        assertTrue(taskSortFirstCommand.equals(taskSortFirstCommandCopy));","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"        // different object types -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"        assertFalse(taskSortFirstCommand.equals(1));","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        assertFalse(taskSortFirstCommand.equals(null));","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"        // different sort type -\u003e returns false","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"        assertFalse(taskSortFirstCommand.equals(taskSortSecondCommand));","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"    //NOTE: The following tests merely test to see if the commands execute, but do not test the actual ordering!","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"    public void execute_taskSortAddedChronological_commandSuccess() {","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"        TaskSortAddedChronologicalCommand command \u003d new TaskSortAddedChronologicalCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        model.updateSortedTaskList((t1, t2) -\u003e -1);","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(TaskSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"                + TaskSortAddedChronologicalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"    public void execute_taskSortDescriptionAlphabetical_commandSuccess() {","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"        TaskSortDescriptionAlphabeticalCommand command \u003d new TaskSortDescriptionAlphabeticalCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedTaskList((t1, t2) -\u003e t1.compareByDescriptionAlphabeticalTo(t2));","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(TaskSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"                + TaskSortDescriptionAlphabeticalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    public void execute_taskSortDescriptionReverseAlphabetical_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"        TaskSortDescriptionReverseAlphabeticalCommand command \u003d new TaskSortDescriptionReverseAlphabeticalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedTaskList((t1, t2) -\u003e t1.compareByDescriptionReverseAlphabeticalTo(t2));","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(TaskSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"                + TaskSortDescriptionReverseAlphabeticalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"Nephelite"},"content":"    public void execute_taskSortDateChronological_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"Nephelite"},"content":"        TaskSortDateChronologicalCommand command \u003d new TaskSortDateChronologicalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedTaskList((t1, t2) -\u003e t1.compareByChronologicalDateTo(t2));","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(TaskSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"Nephelite"},"content":"                + TaskSortDateChronologicalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"    public void execute_taskSortDateReverseChronological_commandSuccess() {","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"        TaskSortDateReverseChronologicalCommand command \u003d new TaskSortDateReverseChronologicalCommand();","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"        expectedModel.updateSortedTaskList((t1, t2) -\u003e t1.compareByReverseChronologicalDateTo(t2));","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"Nephelite"},"content":"        String expectedMessage \u003d String.format(TaskSortCommand.MESSAGE_SORT_TASK_SUCCESS","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"Nephelite"},"content":"                + TaskSortDateReverseChronologicalCommand.MESSAGE_SORT_TYPE);","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"Nephelite"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-22"},{"lineNumber":95,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Nephelite":96}},{"path":"src/test/java/taskbook/logic/commands/TaskTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStub;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubAcceptingTaskAdded;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.modelstubs.ModelStubWithPerson;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.commands.tasks.TaskAddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.testutil.TodoBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"public class TaskTodoCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    private static final Name NAME_AMY \u003d new Name(\"Amy\");","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"    private static final Name NAME_BOB \u003d new Name(\"Bob\");","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    private static final Description DESCRIPTION_ONE \u003d new Description(\"DESCRIPTION ONE\");","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    private static final Description DESCRIPTION_TWO \u003d new Description(\"DESCRIPTION TWO\");","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    private static final Assignment ASSIGNMENT_TO \u003d Assignment.TO;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    private static final Assignment ASSIGNMENT_FROM \u003d Assignment.FROM;","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskTodoCommand(null, DESCRIPTION_ONE, ASSIGNMENT_TO));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskTodoCommand(NAME_AMY, null, ASSIGNMENT_TO));","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    public void constructor_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, null));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"        Person validPerson \u003d new PersonBuilder().withName(String.valueOf(NAME_BOB)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"bananamonkey4655"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded(validPerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"        Todo validTask \u003d new TodoBuilder().withPersonName(validPerson).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"        CommandResult commandResult \u003d new TaskTodoCommand(validTask.getName(), validTask.getDescription(),","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"bananamonkey4655"},"content":"                validTask.getAssignment()).execute(modelStub);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(String.format(TaskTodoCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.getTasks());","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"bananamonkey4655"},"content":"    public void execute_personAssociatedWithTaskNotFound_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"bananamonkey4655"},"content":"        Person johnny \u003d new PersonBuilder().withName(\"Johnny\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"bananamonkey4655"},"content":"        TaskTodoCommand taskTodoCommand \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(johnny);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"                TaskAddCommand.MESSAGE_PERSON_NOT_FOUND, () -\u003e taskTodoCommand.execute(modelStub));","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"    public void execute_duplicateTodo_throwsCommandException() throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"        Person validPerson \u003d new PersonBuilder().withName(String.valueOf(NAME_BOB)).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded(validPerson);","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"        Todo validTask \u003d new TodoBuilder().withPersonName(validPerson).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommand \u003d new TaskTodoCommand(validTask.getName(), validTask.getDescription(),","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"                validTask.getAssignment());","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"        // Adds the task into the modelStub.","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        taskTodoCommand.execute(modelStub);","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"                TaskAddCommand.MESSAGE_DUPLICATE_TASK_FAILURE, () -\u003e taskTodoCommand.execute(modelStub));","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"    public void equals() {","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"        // 2 to-dos with different descriptions","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommandOne \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommandTwo \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_TWO, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        // 2 to-dos with different names","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommandThree \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommandFour \u003d new TaskTodoCommand(NAME_BOB, DESCRIPTION_ONE, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"        // 2 to-dos with different assignments","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommandFive \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTodoCommandSix \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_FROM);","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskTodoCommandOne.equals(taskTodoCommandOne));","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand taskTaskCommandOneCopy \u003d new TaskTodoCommand(NAME_AMY, DESCRIPTION_ONE, ASSIGNMENT_TO);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskTodoCommandOne.equals(taskTaskCommandOneCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskTodoCommandOne.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskTodoCommandOne.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskTodoCommandOne.equals(taskTodoCommandTwo));","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskTodoCommandThree.equals(taskTodoCommandFour));","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskTodoCommandFive.equals(taskTodoCommandSix));","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dexter-sim":87,"bananamonkey4655":38}},{"path":"src/test/java/taskbook/logic/commands/TaskUnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import taskbook.testutil.DeadlineBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"public class TaskUnmarkCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        TaskUnmarkCommand taskUnmarkFirstCommand \u003d new TaskUnmarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        TaskUnmarkCommand taskUnmarkSecondCommand \u003d new TaskUnmarkCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskUnmarkFirstCommand.equals(taskUnmarkFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        TaskUnmarkCommand taskUnmarkFirstCommandCopy \u003d new TaskUnmarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(taskUnmarkFirstCommand.equals(taskUnmarkFirstCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskUnmarkFirstCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskUnmarkFirstCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        assertFalse(taskUnmarkFirstCommand.equals(taskUnmarkSecondCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"    public void execute_validUnmark_success() {","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        Deadline task \u003d TypicalTaskBook.EATING;","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        Deadline editedTask \u003d new DeadlineBuilder()","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"                .withName(task.getName())","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"                .withAssignment(task.getAssignment())","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"                .withDescription(task.getDescription().description)","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                .withIsDone(false)","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"                .withDeadlineDate(task.getDate())","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"                .build();","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        TaskUnmarkCommand unmarkCommand \u003d new TaskUnmarkCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(TaskUnmarkCommand.MESSAGE_UNMARK_TASK_SUCCESS, editedTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"        Model expectedModel \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased()), editedTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        Model model \u003d new ModelManager(TypicalTaskBook.getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"        TaskUnmarkCommand unmarkCommand \u003d new TaskUnmarkCommand(index);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"        assertCommandFailure(unmarkCommand, model, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"dexter-sim":73}},{"path":"src/test/java/taskbook/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.UndoCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.ModelManager;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    private static final Person P1 \u003d new PersonBuilder().withName(\"Person 1\").build();","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    public void execute() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"        Model expected \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        Model actual \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        actual.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"        actual.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        assertCommandSuccess(new UndoCommand(), actual, UndoCommand.MESSAGE_SUCCESS, expected);","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"seetohjinwei":26}},{"path":"src/test/java/taskbook/logic/commands/modelstubs/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.logic.commands.modelstubs;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"bananamonkey4655"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"bananamonkey4655"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    public void commitTaskBook() {","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        // Intentionally empty method.","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canUndoTaskBook() {","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"    public void undoTaskBook() {","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"    public boolean canRedoTaskBook() {","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    public void redoTaskBook() {","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"bananamonkey4655"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"    public void setTaskBook(ReadOnlyTaskBook newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"bananamonkey4655"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"bananamonkey4655"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"bananamonkey4655"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean canDeletePerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"bananamonkey4655"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"bananamonkey4655"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"bananamonkey4655"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"bananamonkey4655"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"bananamonkey4655"},"content":"    public void updateFilteredTaskListPredicate(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"bananamonkey4655"},"content":"    public ObservableList\u003cTask\u003e getSortedTaskList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"bananamonkey4655"},"content":"    public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"bananamonkey4655"},"content":"    public void resetSortedTaskList() {","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"Nephelite"},"content":"    public void updateFilteredPersonListPredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-23"},{"lineNumber":167,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"Nephelite"},"content":"    public void updateSortedPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2022-10-23"},{"lineNumber":172,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"Nephelite"},"content":"    public void resetSortedPersonList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"bananamonkey4655"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"Nephelite"},"content":"    public ObservableList\u003cPerson\u003e getSortedPersonList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"Nephelite"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Nephelite":9,"bananamonkey4655":151,"seetohjinwei":25}},{"path":"src/test/java/taskbook/logic/commands/modelstubs/ModelStubAcceptingTaskAdded.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.logic.commands.modelstubs;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":" * A Model stub that always accept the task being added.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"public class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"    final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"    final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"    public ModelStubAcceptingTaskAdded(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"        this.personsAdded.add(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"        return (ArrayList\u003cTask\u003e) this.tasksAdded.clone(); //clone list","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"        tasksAdded.add(task);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"bananamonkey4655"},"content":"        return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"bananamonkey4655"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"bananamonkey4655"},"content":"        personsAdded.add(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"bananamonkey4655"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"bananamonkey4655"},"content":"        return personsAdded.stream().filter(person -\u003e person.getName().equals(name)).findAny().orElse(null);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Nephelite"},"content":"    public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"    public void resetSortedTaskList() {","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"bananamonkey4655"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"bananamonkey4655"},"content":"        return new TaskBook();","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"dexter-sim":6,"Nephelite":9,"bananamonkey4655":56}},{"path":"src/test/java/taskbook/logic/commands/modelstubs/ModelStubWithPerson.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.logic.commands.modelstubs;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":" * A Model stub that contains a single person.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"bananamonkey4655"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"public class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"    private final Person person;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"bananamonkey4655"},"content":"     * Creates a {@code ModelStub} with the given person.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"bananamonkey4655"},"content":"    public ModelStubWithPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"        return this.person.isSamePerson(person);","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"bananamonkey4655"},"content":"    public Person findPerson(Name name) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"        return this.person.getName() \u003d\u003d name ? this.person : null;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":33}},{"path":"src/test/java/taskbook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"xiaobill8":1}},{"path":"src/test/java/taskbook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":36,"xiaobill8":3}},{"path":"src/test/java/taskbook/logic/parser/ContactAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalTaskBook.AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalTaskBook.BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactAddCommandParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"public class ContactAddCommandParserTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"    private ContactAddCommandParser parser \u003d new ContactAddCommandParser();","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new ContactAddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"    public void parse_optionalTagsMissing_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"                new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"    public void parse_allOptionalFieldsMissing_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY)","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"                .withAddress(Address.NO_ADDRESS_PROVIDED)","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"                .withPhone(Phone.NO_PHONE_PROVIDED)","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"                .withEmail(Email.NO_EMAIL_PROVIDED)","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"                .withTags()","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"                .build();","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY,","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"                new ContactAddCommand(expectedPerson));","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"                ContactAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"dexter-sim":14,"-":75,"seetohjinwei":9,"xiaobill8":39}},{"path":"src/test/java/taskbook/logic/parser/ContactDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactDeleteCommandParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"public class ContactDeleteCommandParserTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    private ContactDeleteCommandParser parser \u003d new ContactDeleteCommandParser();","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, \" i/1\", new ContactDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"dexter-sim":2,"-":22,"seetohjinwei":3,"xiaobill8":8}},{"path":"src/test/java/taskbook/logic/parser/ContactEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-30"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.contacts.ContactEditCommandParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"public class ContactEditCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    private static final String TAG_EMPTY \u003d \" \" + CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"    private ContactEditCommandParser parser \u003d new ContactEditCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        // no index specified","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        // no field specified","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \" i/1\", ContactEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        // negative index","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"                \" i/-5\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        // zero index","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"                \" i/0\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"                \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC,","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.TAG_DESC_FRIEND + TAG_EMPTY + CommandTestUtil.TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"                \" i/1\" + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"                        + CommandTestUtil.VALID_ADDRESS_AMY + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"xiaobill8"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"xiaobill8"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"xiaobill8"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"xiaobill8"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"        // name","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"xiaobill8"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"xiaobill8"},"content":"                .withName(CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"xiaobill8"},"content":"        // phone","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"xiaobill8"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"xiaobill8"},"content":"        // email","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"xiaobill8"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"xiaobill8"},"content":"        // address","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"xiaobill8"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(CommandTestUtil.VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"xiaobill8"},"content":"        // tags","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"xiaobill8"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":169,"author":{"gitId":"xiaobill8"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"xiaobill8"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(targetIndex) + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"xiaobill8"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"xiaobill8"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"xiaobill8"},"content":"                .build();","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":187,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":188,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":189,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":191,"author":{"gitId":"xiaobill8"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":192,"author":{"gitId":"xiaobill8"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-02"},{"lineNumber":193,"author":{"gitId":"xiaobill8"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":194,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(targetIndex)","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":200,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":201,"author":{"gitId":"xiaobill8"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-02"},{"lineNumber":202,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(targetIndex)","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"xiaobill8"},"content":"                + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"xiaobill8"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"xiaobill8"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":209,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":210,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":211,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":212,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":213,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":214,"author":{"gitId":"xiaobill8"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-10-02"},{"lineNumber":215,"author":{"gitId":"xiaobill8"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":216,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(targetIndex) + TAG_EMPTY;","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":218,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":219,"author":{"gitId":"seetohjinwei"},"content":"        ContactEditCommand expectedCommand \u003d new ContactEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":220,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":221,"author":{"gitId":"xiaobill8"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-02"},{"lineNumber":222,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":223,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":224,"author":{"gitId":"seetohjinwei"},"content":"    private String indexAsInput(Index index) {","lastModifiedDate":"2022-10-13"},{"lineNumber":225,"author":{"gitId":"seetohjinwei"},"content":"        return \" i/\" + index.getOneBased();","lastModifiedDate":"2022-10-13"},{"lineNumber":226,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"seetohjinwei":55,"xiaobill8":172}},{"path":"src/test/java/taskbook/logic/parser/ContactFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.contacts.ContactFindCommandParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"public class ContactFindCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"    private ContactFindCommandParser parser \u003d new ContactFindCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"    private Predicate\u003cPerson\u003e dummy \u003d p -\u003e true;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"    private ContactFindCommand control \u003d new ContactFindCommand(dummy, \"test\");","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    public void parse_normalInput_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" q/test\", control);","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    public void parse_normalInput_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"            ContactFindCommand command \u003d parser.parse(\" q/testy\");","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"            assert !command.equals(dummy);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"            assert false;","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":33}},{"path":"src/test/java/taskbook/logic/parser/ContactSortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameAlphabeticalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameReverseAlphabeticalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortPhoneAscendingCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortPhoneDescendingCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.contacts.ContactSortCommandParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"public class ContactSortCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    private ContactSortCommandParser parser \u003d new ContactSortCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsContactSortDescriptionAlphabeticalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/a\", new ContactSortNameAlphabeticalCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsContactSortDescriptionReverseAlphabeticalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/ra\", new ContactSortNameReverseAlphabeticalCommand());","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsContactSortAddedChronologicalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/ca\", new ContactSortAddedChronologicalCommand());","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsContactSortPhoneAscendingCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/p\", new ContactSortPhoneAscendingCommand());","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsContactSortPhoneDescendingCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/rp\", new ContactSortPhoneDescendingCommand());","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"        assertParseFailure(parser, \" a\",","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ContactSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":55}},{"path":"src/test/java/taskbook/logic/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"public class DateParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    private final LocalDate expectedOutput \u003d LocalDate.parse(\"2022-10-31\");","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    private final LocalDate expectedLeap \u003d LocalDate.parse(\"2024-02-29\");","lastModifiedDate":"2022-10-30"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_validArgument1_returnsCorrectOutput() throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate actual \u003d DateParser.parse(\"2022-10-31\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(actual, expectedOutput);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_validArgument2_returnsCorrectOutput() throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate actual \u003d DateParser.parse(\"Oct 31 2022\");","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(actual, expectedOutput);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_validArgument3_returnsCorrectOutput() throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate actual \u003d DateParser.parse(\"10 31 2022\");","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(actual, expectedOutput);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_validArgument4_returnsCorrectOutput() throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate actual \u003d DateParser.parse(\"31 Oct 2022\");","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(actual, expectedOutput);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_validArgument5_returnsCorrectOutput() throws ParseException {","lastModifiedDate":"2022-10-30"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        LocalDate actual \u003d DateParser.parse(\"29 Feb 2024\");","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(actual, expectedLeap);","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_emptyArgument_throwsException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"\");","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_invalidInput_throwsException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"Halloween\");","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_invalidFormat_throwsException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"31st October 2022\");","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_invalidDate_throwsException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"2022-02-29\");","lastModifiedDate":"2022-10-30"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"2022-02-30\");","lastModifiedDate":"2022-10-30"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"2022-02-31\");","lastModifiedDate":"2022-10-30"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"2022-12-32\");","lastModifiedDate":"2022-10-30"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"2022-00-01\");","lastModifiedDate":"2022-10-30"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        assertThrowsException(\"2022-12-00\");","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    public void assertThrowsException(String userInput) {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"            DateParser.parse(userInput);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"            throw new AssertionError(\"The expected ParseException is not thrown.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"            // intentionally empty catch block","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"seetohjinwei":79}},{"path":"src/test/java/taskbook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"dexter-sim"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"dexter-sim"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"dexter-sim"},"content":"    public void parseDescription_emptyString_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"dexter-sim"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(\"\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"dexter-sim":10,"-":160,"xiaobill8":36}},{"path":"src/test/java/taskbook/logic/parser/TaskBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.categoryless.ExitCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.HelpCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortNameAlphabeticalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionAlphabeticalCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.contacts.ContactCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.tasks.TaskCategoryParser;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"public class TaskBookParserTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    private final TaskBookParser parser \u003d new TaskBookParser();","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_contact_add() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        ContactAddCommand command \u003d (ContactAddCommand) parseContactCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(new ContactAddCommand(person), command);","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_contact_delete() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        ContactDeleteCommand command \u003d (ContactDeleteCommand) parseContactCommand(PersonUtil.getDeleteCommand(","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"            INDEX_FIRST_PERSON.getOneBased()));","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(new ContactDeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_contact_list() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(parseContactCommand(ContactListCommand.COMMAND_WORD) instanceof ContactListCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(parseContactCommand(ContactListCommand.COMMAND_WORD + \" 3\") instanceof ContactListCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"Nephelite"},"content":"    public void parseCommand_contactShortcut_list() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseContactCommandShortcut(ContactListCommand.COMMAND_WORD) instanceof ContactListCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseContactCommandShortcut(ContactListCommand.COMMAND_WORD + \" 3\") instanceof ContactListCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"Nephelite"},"content":"    public void parseCommand_contact_sort() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseContactCommand(ContactSortCommand.COMMAND_WORD + \" s/a\")","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"Nephelite"},"content":"                instanceof ContactSortNameAlphabeticalCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseContactCommand(ContactSortCommand.COMMAND_WORD + \" s/ca\")","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"Nephelite"},"content":"                instanceof ContactSortAddedChronologicalCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_task_todo() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"        TaskTodoCommand command \u003d (TaskTodoCommand) parseTaskCommand(\"todo m/John d/Finish user guide\");","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"        assertNotNull(command);","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_task_delete() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        TaskDeleteCommand command \u003d (TaskDeleteCommand) parseTaskCommand(\"delete i/1\");","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        assertNotNull(command);","lastModifiedDate":"2022-09-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_task_mark() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"        TaskMarkCommand command \u003d (TaskMarkCommand) parseTaskCommand(\"mark i/2\");","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"        assertNotNull(command);","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_task_unmark() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        TaskUnmarkCommand command \u003d (TaskUnmarkCommand) parseTaskCommand(\"unmark i/3\");","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"        assertNotNull(command);","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_task_edit() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        TaskEditCommand command \u003d (TaskEditCommand) parseTaskCommand(\"edit i/2 m/John d/Finish user guide\");","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"        assertNotNull(command);","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_task_list() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(parseTaskCommand(TaskListCommand.COMMAND_WORD) instanceof TaskListCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(parseTaskCommand(TaskListCommand.COMMAND_WORD + \" 3\") instanceof TaskListCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"Nephelite"},"content":"    public void parseCommand_taskShortcut_list() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseTaskCommandShortcut(TaskListCommand.COMMAND_WORD) instanceof TaskListCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseTaskCommandShortcut(TaskListCommand.COMMAND_WORD + \" 3\") instanceof TaskListCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"Nephelite"},"content":"    public void parseCommand_task_sort() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":119,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseTaskCommand(TaskSortCommand.COMMAND_WORD + \" s/a\")","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"Nephelite"},"content":"                instanceof TaskSortDescriptionAlphabeticalCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"Nephelite"},"content":"        assertTrue(parseTaskCommand(TaskSortCommand.COMMAND_WORD + \" s/ca\")","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"Nephelite"},"content":"                instanceof TaskSortAddedChronologicalCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"xiaobill8"},"content":"        assertThrows(ParseException.class, String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"xiaobill8"},"content":"                HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"xiaobill8"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"    private Command parseCommandWithCategory(String category, String commandWithoutCategory) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"        return parser.parseCommand(category + \" \" + commandWithoutCategory);","lastModifiedDate":"2022-09-23"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"    private Command parseContactCommand(String command) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":149,"author":{"gitId":"seetohjinwei"},"content":"        return parseCommandWithCategory(ContactCategoryParser.CATEGORY_WORD, command);","lastModifiedDate":"2022-09-23"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":151,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":152,"author":{"gitId":"Nephelite"},"content":"    private Command parseContactCommandShortcut(String command) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"Nephelite"},"content":"        return parseCommandWithCategory(ContactCategoryParser.CATEGORY_WORD_SHORTCUT, command);","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"    private Command parseTaskCommand(String command) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":157,"author":{"gitId":"seetohjinwei"},"content":"        return parseCommandWithCategory(TaskCategoryParser.CATEGORY_WORD, command);","lastModifiedDate":"2022-09-23"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":159,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"Nephelite"},"content":"    private Command parseTaskCommandShortcut(String command) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"Nephelite"},"content":"        return parseCommandWithCategory(TaskCategoryParser.CATEGORY_WORD_SHORTCUT, command);","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"dexter-sim":25,"Nephelite":42,"-":40,"seetohjinwei":35,"xiaobill8":21}},{"path":"src/test/java/taskbook/logic/parser/TaskDeadlineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DATE_DESC_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DATE_DESC_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ASSIGN_FROM_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ASSIGN_TO_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DATE_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DATE_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeadlineCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskDeadlineCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"public class TaskDeadlineCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    private TaskDeadlineCommandParser parser \u003d new TaskDeadlineCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        Name expectedNameAmy \u003d new Name(VALID_NAME_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        Name expectedNameBob \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        Description expectedDescriptionWork \u003d new Description(VALID_DESCRIPTION_WORK);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        Description expectedDescriptionStudy \u003d new Description(VALID_DESCRIPTION_STUDY);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        Assignment expectedAssignmentFrom \u003d Assignment.FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"        Assignment expectedAssignmentTo \u003d Assignment.TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        LocalDate expectedDate2022 \u003d LocalDate.parse(VALID_DATE_2022);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        LocalDate expectedDate1999 \u003d LocalDate.parse(VALID_DATE_1999);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"                PREAMBLE_WHITESPACE + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"                PREAMBLE_WHITESPACE + ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + ASSIGN_FROM_DESC_BOB + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameBob,","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_AMY + ASSIGN_TO_DESC_BOB + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameBob,","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DESCRIPTION_DESC_STUDY + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionStudy,","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DESCRIPTION_DESC_STUDY + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionStudy,","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022 + DATE_DESC_1999,","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate1999));","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_1999 + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"                new TaskDeadlineCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"    public void parse_doubleAssignmentFields_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"                TaskDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + ASSIGN_TO_DESC_BOB + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_BOB + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"dexter-sim"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"dexter-sim"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"dexter-sim"},"content":"                TaskDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"dexter-sim"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"dexter-sim"},"content":"        // missing description prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, ASSIGN_FROM_DESC_AMY + VALID_DESCRIPTION_WORK + DATE_DESC_2022, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"dexter-sim"},"content":"        // missing date prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + VALID_DATE_2022, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"dexter-sim"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"dexter-sim"},"content":"        // invalid name","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"dexter-sim"},"content":"                INVALID_ASSIGN_FROM_DESC + DESCRIPTION_DESC_WORK + DATE_DESC_2022, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"dexter-sim"},"content":"                INVALID_ASSIGN_TO_DESC + DESCRIPTION_DESC_WORK + DATE_DESC_2022, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":156}},{"path":"src/test/java/taskbook/logic/parser/TaskDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskDeleteCommandParser;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"public class TaskDeleteCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"    private TaskDeleteCommandParser parser \u003d new TaskDeleteCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, \" i/1\", new TaskDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dexter-sim":35}},{"path":"src/test/java/taskbook/logic/parser/TaskEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DATE_DESC_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DATE_DESC_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ASSIGN_FROM_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ASSIGN_TO_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DATE_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DATE_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEventCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskEventCommandParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"public class TaskEventCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    private TaskEventCommandParser parser \u003d new TaskEventCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        Name expectedNameAmy \u003d new Name(VALID_NAME_AMY);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        Name expectedNameBob \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        Description expectedDescriptionWork \u003d new Description(VALID_DESCRIPTION_WORK);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        Description expectedDescriptionStudy \u003d new Description(VALID_DESCRIPTION_STUDY);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"        Assignment expectedAssignmentFrom \u003d Assignment.FROM;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"        Assignment expectedAssignmentTo \u003d Assignment.TO;","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        LocalDate expectedDate2022 \u003d LocalDate.parse(VALID_DATE_2022);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"        LocalDate expectedDate1999 \u003d LocalDate.parse(VALID_DATE_1999);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"                PREAMBLE_WHITESPACE + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"                PREAMBLE_WHITESPACE + ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + ASSIGN_FROM_DESC_BOB + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameBob,","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_AMY + ASSIGN_TO_DESC_BOB + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameBob,","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DESCRIPTION_DESC_STUDY + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionStudy,","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DESCRIPTION_DESC_STUDY + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionStudy,","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"dexter-sim"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022 + DATE_DESC_1999,","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentFrom,","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate1999));","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_1999 + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"dexter-sim"},"content":"                new TaskEventCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"dexter-sim"},"content":"                        expectedNameAmy,","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"dexter-sim"},"content":"                        expectedDescriptionWork,","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"dexter-sim"},"content":"                        expectedAssignmentTo,","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"dexter-sim"},"content":"                        expectedDate2022));","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"dexter-sim"},"content":"    public void parse_doubleAssignmentFields_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"dexter-sim"},"content":"                TaskEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + ASSIGN_TO_DESC_BOB + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"dexter-sim"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_BOB + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022,","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"dexter-sim"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"dexter-sim"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"dexter-sim"},"content":"                TaskEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"dexter-sim"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"dexter-sim"},"content":"        // missing description prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, ASSIGN_FROM_DESC_AMY + VALID_DESCRIPTION_WORK + DATE_DESC_2022, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"dexter-sim"},"content":"        // missing date prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + VALID_DATE_2022, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"dexter-sim"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"dexter-sim"},"content":"        // invalid name","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"dexter-sim"},"content":"                INVALID_ASSIGN_FROM_DESC + DESCRIPTION_DESC_WORK + DATE_DESC_2022, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"dexter-sim"},"content":"                INVALID_ASSIGN_TO_DESC + DESCRIPTION_DESC_WORK + DATE_DESC_2022, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"dexter-sim":156}},{"path":"src/test/java/taskbook/logic/parser/TaskFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskFindCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.tasks.TaskFindCommandParser;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"public class TaskFindCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommandParser parser \u003d new TaskFindCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"    private Predicate\u003cTask\u003e dummy \u003d t -\u003e true;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    private TaskFindCommand control \u003d new TaskFindCommand(dummy, \"test\", \"FROM\", \"X\");","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" q/test x/X a/FROM\", control);","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"    public void parse_allFieldsPresent_failure() {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand test \u003d new TaskFindCommand(dummy, \"testy\", \"FROM\", \"X\");","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"        assert !control.equals(test);","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"    public void parse_onlyOneField_success() {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand test \u003d new TaskFindCommand(dummy, \"test\", null, null);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" q/test\", test);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"    public void parse_onlyOneField_failure() throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand test1 \u003d parser.parse(\" q/test\");","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"        TaskFindCommand test2 \u003d new TaskFindCommand(dummy, null, \"FROM\", null);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"        assert !test1.equals(test2);","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"    public void parse_noFields_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"                \"Find arguments are empty.\\n\",","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"                TaskFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"Nephelite":53}},{"path":"src/test/java/taskbook/logic/parser/TaskMarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskMarkCommandParser;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public class TaskMarkCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private TaskMarkCommandParser parser \u003d new TaskMarkCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, \" i/1\", new TaskMarkCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskMarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"dexter-sim":28}},{"path":"src/test/java/taskbook/logic/parser/TaskSortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nephelite"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"Nephelite"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"Nephelite"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"Nephelite"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortAddedChronologicalCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDateChronologicalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDateReverseChronologicalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionAlphabeticalCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortDescriptionReverseAlphabeticalCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.parser.tasks.TaskSortCommandParser;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"Nephelite"},"content":"public class TaskSortCommandParserTest {","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"Nephelite"},"content":"    private TaskSortCommandParser parser \u003d new TaskSortCommandParser();","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsTaskSortDescriptionAlphabeticalCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/a\", new TaskSortDescriptionAlphabeticalCommand());","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsTaskSortDescriptionReverseAlphabeticalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/ra\", new TaskSortDescriptionReverseAlphabeticalCommand());","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsTaskSortAddedChronologicalCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/ca\", new TaskSortAddedChronologicalCommand());","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsTaskSortDateChronologicalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/cd\", new TaskSortDateChronologicalCommand());","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"    public void parse_validArgs_returnsTaskSortDateReverseChronologicalCommand() {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"        assertParseSuccess(parser, \" s/rcd\", new TaskSortDateReverseChronologicalCommand());","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Nephelite"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"Nephelite"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"Nephelite"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"Nephelite":55}},{"path":"src/test/java/taskbook/logic/parser/TaskTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_STUDY;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_WORK;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ASSIGN_FROM_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.INVALID_ASSIGN_TO_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_STUDY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_WORK;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskTodoCommandParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"public class TaskTodoCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    private TaskTodoCommandParser parser \u003d new TaskTodoCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        Name expectedNameAmy \u003d new Name(VALID_NAME_AMY);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        Name expectedNameBob \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"        Description expectedDescriptionWork \u003d new Description(VALID_DESCRIPTION_WORK);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"        Description expectedDescriptionEat \u003d new Description(VALID_DESCRIPTION_STUDY);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"        Assignment expectedAssignmentFrom \u003d Assignment.FROM;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"        Assignment expectedAssignmentTo \u003d Assignment.TO;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK,","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"                new TaskTodoCommand(expectedNameAmy, expectedDescriptionWork, expectedAssignmentFrom));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK,","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"dexter-sim"},"content":"                new TaskTodoCommand(expectedNameAmy, expectedDescriptionWork, expectedAssignmentTo));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, ASSIGN_FROM_DESC_AMY + ASSIGN_FROM_DESC_BOB + DESCRIPTION_DESC_WORK,","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"dexter-sim"},"content":"                new TaskTodoCommand(expectedNameBob, expectedDescriptionWork, expectedAssignmentFrom));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, ASSIGN_TO_DESC_AMY + ASSIGN_TO_DESC_BOB + DESCRIPTION_DESC_WORK,","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"                new TaskTodoCommand(expectedNameBob, expectedDescriptionWork, expectedAssignmentTo));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DESCRIPTION_DESC_STUDY,","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"                new TaskTodoCommand(expectedNameAmy, expectedDescriptionEat, expectedAssignmentFrom));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, ASSIGN_TO_DESC_AMY + DESCRIPTION_DESC_WORK + DESCRIPTION_DESC_STUDY,","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"                new TaskTodoCommand(expectedNameAmy, expectedDescriptionEat, expectedAssignmentTo));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"    public void parse_doubleAssignmentFields_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"                TaskTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_FROM_DESC_AMY + ASSIGN_TO_DESC_BOB + DESCRIPTION_DESC_WORK,","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"                ASSIGN_TO_DESC_BOB + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK,","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"dexter-sim"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"dexter-sim"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"dexter-sim"},"content":"                TaskTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"dexter-sim"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + DESCRIPTION_DESC_WORK, expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"dexter-sim"},"content":"        // missing description prefix","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, ASSIGN_FROM_DESC_AMY + VALID_DESCRIPTION_WORK, expectedMessage);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"dexter-sim"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"        // invalid name","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, INVALID_ASSIGN_FROM_DESC + DESCRIPTION_DESC_WORK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, INVALID_ASSIGN_TO_DESC + DESCRIPTION_DESC_WORK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"dexter-sim":97}},{"path":"src/test/java/taskbook/logic/parser/TaskUnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dexter-sim"},"content":"package taskbook.logic.parser;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"dexter-sim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.tasks.TaskUnmarkCommandParser;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"dexter-sim"},"content":"public class TaskUnmarkCommandParserTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"dexter-sim"},"content":"    private TaskUnmarkCommandParser parser \u003d new TaskUnmarkCommandParser();","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"    public void parse_validArgs_returnsUnmarkCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the userInput is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"dexter-sim"},"content":"        assertParseSuccess(parser, \" i/1\", new TaskUnmarkCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskUnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"dexter-sim"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"dexter-sim":28}},{"path":"src/test/java/taskbook/logic/parser/categoryless/CategorylessParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.categoryless;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.categoryless.ExitCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"public class CategorylessParserTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d CategorylessParser.parseCommand(ExitCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"seetohjinwei":15,"xiaobill8":3}},{"path":"src/test/java/taskbook/logic/parser/categoryless/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser.categoryless;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CliSyntax.PREFIX_HELP_COMMAND;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.HelpCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.categoryless.UndoCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    private final HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_emptyArgument() {","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand expected \u003d new HelpCommand(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, \"   \", expected);","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, \"\", expected);","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_validArgument() {","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"        HelpCommand expected \u003d new HelpCommand(HelpCommand.CommandWord.UNDO);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d getUserInput(UndoCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expected);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_invalidArgument() {","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, getUserInput(\"  \"),","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, getUserInput(\"command_that_does_not_exist\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    private String getUserInput(String commandWord) {","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        return \" \" + PREFIX_HELP_COMMAND + commandWord;","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"seetohjinwei":42}},{"path":"src/test/java/taskbook/logic/parser/contacts/ContactCategoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.contacts;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.contacts.ContactSortCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"public class ContactCategoryParserTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"        String arguments \u003d \" n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01\";","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d ContactCategoryParser.parseCommand(ContactAddCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof ContactAddCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" i/1\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d ContactCategoryParser.parseCommand(ContactDeleteCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof ContactDeleteCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d ContactCategoryParser.parseCommand(ContactListCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof ContactListCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        String arguments \u003d \" i/1 n/Editing name\";","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d ContactCategoryParser.parseCommand(ContactEditCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof ContactEditCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Nephelite"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"Nephelite"},"content":"        String arguments \u003d \" s/a\";","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Nephelite"},"content":"        Command command \u003d ContactCategoryParser.parseCommand(ContactSortCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Nephelite"},"content":"        assertTrue(command instanceof ContactSortCommand);","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":2,"Nephelite":8,"seetohjinwei":37,"xiaobill8":5}},{"path":"src/test/java/taskbook/logic/parser/tasks/TaskCategoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"dexter-sim"},"content":"import static taskbook.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.Command;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskDeadlineCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskEventCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.tasks.TaskListCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskMarkCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"Nephelite"},"content":"import taskbook.logic.commands.tasks.TaskSortCommand;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskTodoCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.commands.tasks.TaskUnmarkCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"dexter-sim"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"public class TaskCategoryParserTest {","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_todo() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" o/Sam d/Finish the assignment\";","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"dexter-sim"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskTodoCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(command instanceof TaskTodoCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_deadline() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" o/Sam d/Finish the assignment t/2022-03-11\";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"dexter-sim"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskDeadlineCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(command instanceof TaskDeadlineCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_event() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" o/Sam d/Finish the assignment t/2005-10-27\";","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"dexter-sim"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskEventCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(command instanceof TaskEventCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" i/1\";","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskDeleteCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof TaskDeleteCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" i/1 o/Sam\";","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"dexter-sim"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskEditCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(command instanceof TaskEditCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" i/2\";","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"dexter-sim"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskMarkCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(command instanceof TaskMarkCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_unmark() throws Exception {","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" i/3\";","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"dexter-sim"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskUnmarkCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"dexter-sim"},"content":"        assertTrue(command instanceof TaskUnmarkCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        String arguments \u003d \"\";","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskListCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-09-23"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(command instanceof TaskListCommand);","lastModifiedDate":"2022-09-23"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":84,"author":{"gitId":"dexter-sim"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Nephelite"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"Nephelite"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"Nephelite"},"content":"        String arguments \u003d \" s/a\";","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"Nephelite"},"content":"        Command command \u003d TaskCategoryParser.parseCommand(TaskSortCommand.COMMAND_WORD, arguments);","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"Nephelite"},"content":"        assertTrue(command instanceof TaskSortCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"Nephelite"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"Nephelite"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"dexter-sim"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"dexter-sim"},"content":"    public void parseCommand_invalid() {","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"dexter-sim"},"content":"        // Note: the space at the start of the arguments is necessary due to ArgumentTokenizer behavior.","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"dexter-sim"},"content":"        String arguments \u003d \" o/Sam d/Finish the assignment\";","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"dexter-sim"},"content":"        String commandWord \u003d \"gibberish\";","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"dexter-sim"},"content":"        assertThrows(ParseException.class, () -\u003e TaskCategoryParser.parseCommand(commandWord, arguments));","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"dexter-sim"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"dexter-sim":63,"Nephelite":8,"seetohjinwei":24,"xiaobill8":4}},{"path":"src/test/java/taskbook/logic/parser/tasks/TaskEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.logic.parser.tasks;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_FROM_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.ASSIGN_TO_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.DATE_DESC_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.DATE_DESC_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DATE_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DATE_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.tasks.TaskEditCommand.MESSAGE_ASSIGNOR_ASSIGNEE;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.commands.tasks.TaskEditCommand.MESSAGE_NOT_EDITED;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"import static taskbook.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-30"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.tasks.TaskEditCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"public class TaskEditCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    private final TaskEditCommandParser parser \u003d new TaskEditCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"        // no index specified","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        // no field specified","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, \" i/1\", MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        // no index, no field specified","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        // both assign to and assign from is specified (and vice versa)","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(index) + ASSIGN_FROM_DESC_AMY + ASSIGN_TO_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, userInput, MESSAGE_ASSIGNOR_ASSIGNEE);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(index) + ASSIGN_TO_DESC_BOB + ASSIGN_FROM_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, userInput, MESSAGE_ASSIGNOR_ASSIGNEE);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(index) + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK + DATE_DESC_2022;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.FROM)","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"            .withDescription(VALID_DESCRIPTION_WORK)","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"            .withDate(VALID_DATE_2022)","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        TaskEditCommand expectedCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(index) + ASSIGN_FROM_DESC_AMY + DESCRIPTION_DESC_WORK;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.FROM)","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"            .withDescription(VALID_DESCRIPTION_WORK)","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        TaskEditCommand expectedCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        // assigned to","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        Index index \u003d TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"        String userInput \u003d indexAsInput(index) + ASSIGN_TO_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.TO)","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"        TaskEditCommand expectedCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        // assigned from","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(index) + ASSIGN_FROM_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"            .withAssignment(Assignment.FROM)","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"        // description","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(index) + DESCRIPTION_DESC_STUDY;","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"            .withDescription(VALID_DESCRIPTION_STUDY)","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        // date","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"        userInput \u003d indexAsInput(index) + DATE_DESC_1999;","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"            .withDate(VALID_DATE_1999)","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"            .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"        expectedCommand \u003d new TaskEditCommand(index, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"    public void parse_negativeIndex_throwsException() {","lastModifiedDate":"2022-10-30"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"        assertParseFailure(parser, \" i/-5\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-30"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"    private String indexAsInput(Index index) {","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"        return \" i/\" + index.getOneBased();","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"seetohjinwei":135}},{"path":"src/test/java/taskbook/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TaskBookBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(new TaskBook(), new TaskBook(modelManager.getTaskBook()));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        userPrefs.setTaskBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        userPrefs.setTaskBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"bananamonkey4655"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskBookFilePath(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"    public void setTaskBookFilePath_validPath_setsTaskBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        modelManager.setTaskBookFilePath(path);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(path, modelManager.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"    public void commitTaskBook() {","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        assertDoesNotThrow(modelManager::commitTaskBook);","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"    public void canUndoTaskBook_cannotUndo_false() {","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(model.canUndoTaskBook());","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"    public void canUndoTaskBook_canUndo_true() {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"        model.addPerson(p1);","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(model.canUndoTaskBook());","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"    public void undoTaskBook() {","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        model.addPerson(p1);","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        model.undoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(new ModelManager(), model);","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"    public void canRedoTaskBook_cannotRedo_false() {","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(model.canRedoTaskBook());","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"    public void canRedoTaskBook_canRedo_true() {","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        model.addPerson(p1);","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"        model.undoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(model.canRedoTaskBook());","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"    public void redoTaskBook() {","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"        Person p1 \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"        model.addPerson(p1);","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"        model.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"        model.undoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"        model.redoTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager expected \u003d new ModelManager();","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"        expected.addPerson(p1);","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"        expected.commitTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(expected, model);","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"    public void hasPerson_personNotInTaskBook_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(modelManager.hasPerson(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"    public void hasPerson_personInTaskBook_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"xiaobill8"},"content":"        modelManager.addPerson(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(modelManager.hasPerson(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"bananamonkey4655"},"content":"    public void findPerson_nullName_throwsNullPointerException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"bananamonkey4655"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.findPerson(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"    public void findPerson_personNotInTaskBook_returnsNull() {","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"xiaobill8"},"content":"        assertNull(modelManager.findPerson(TypicalTaskBook.ALICE.getName()));","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"    public void canDeletePerson_personNoTask_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"        model.addPerson(TypicalTaskBook.ZED);","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(model.canDeletePerson(TypicalTaskBook.ZED));","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"    public void canDeletePerson_personHasTask_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"        ModelManager model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"seetohjinwei"},"content":"        model.addPerson(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"seetohjinwei"},"content":"        model.addTask(TypicalTaskBook.EATING);","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(model.canDeletePerson(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":184,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"bananamonkey4655"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"bananamonkey4655"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":194,"author":{"gitId":"xiaobill8"},"content":"        TaskBook taskBook \u003d new TaskBookBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"xiaobill8"},"content":"                .withPerson(TypicalTaskBook.ALICE).withPerson(TypicalTaskBook.BENSON).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook differentTaskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"xiaobill8"},"content":"        modelManager \u003d new ModelManager(taskBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"xiaobill8"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(taskBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"xiaobill8"},"content":"        // different taskBook -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":214,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTaskBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"xiaobill8"},"content":"        String[] keywords \u003d TypicalTaskBook.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"Nephelite"},"content":"        modelManager.updateFilteredPersonListPredicate(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskBook, userPrefs)));","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":222,"author":{"gitId":"Nephelite"},"content":"        modelManager.updateFilteredPersonListPredicate(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"xiaobill8"},"content":"        differentUserPrefs.setTaskBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskBook, differentUserPrefs)));","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Nephelite":2,"bananamonkey4655":22,"-":87,"seetohjinwei":88,"xiaobill8":30}},{"path":"src/test/java/taskbook/model/TaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"public class TaskBookTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private final TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(Collections.emptyList(), taskBook.getPersonList());","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e taskBook.resetData(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"    public void resetData_withValidReadOnlyTaskBook_replacesData() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        TaskBook newData \u003d TypicalTaskBook.getTypicalTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        taskBook.resetData(newData);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(newData, taskBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(TypicalTaskBook.ALICE, editedAlice);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        TaskBookStub newData \u003d new TaskBookStub(newPersons);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e taskBook.resetData(newData));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e taskBook.hasPerson(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    public void hasPerson_personNotInTaskBook_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(taskBook.hasPerson(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    public void hasPerson_personInTaskBook_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        taskBook.addPerson(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(taskBook.hasPerson(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"    public void hasPerson_personWithSameIdentityFieldsInTaskBook_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        taskBook.addPerson(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(taskBook.hasPerson(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e taskBook.getPersonList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e taskBook.getTaskList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"     * A stub ReadOnlyTaskBook whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"    private static class TaskBookStub implements ReadOnlyTaskBook {","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"        TaskBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"bananamonkey4655"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"bananamonkey4655"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"bananamonkey4655"},"content":"            return tasks;","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"bananamonkey4655":8,"-":64,"seetohjinwei":9,"xiaobill8":34}},{"path":"src/test/java/taskbook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    public void settaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskBookFilePath(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"xiaobill8":6}},{"path":"src/test/java/taskbook/model/VersionedTaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.TaskBookBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.testutil.TodoBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"public class VersionedTaskBookTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"    private static final Person P1 \u003d new PersonBuilder().withName(\"Person 1\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    private static final Person P2 \u003d new PersonBuilder().withName(\"Person 2\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"    private static final Person P3 \u003d new PersonBuilder().withName(\"Person 3\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    private static final Person P4 \u003d new PersonBuilder().withName(\"Person 4\").build();","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"    private static final Task T1 \u003d new TodoBuilder().withDescription(\"Task 1\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    private static final Task T2 \u003d new TodoBuilder().withDescription(\"Task 2\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"    private static final Task T3 \u003d new TodoBuilder().withDescription(\"Task 3\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    public void isEquivalentTo() {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook initialState \u003d new TaskBookBuilder().withPerson(P1).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook differentVersioned \u003d new VersionedTaskBook(initialState);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(versioned.isEquivalentTo(versioned));","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(versioned.isEquivalentTo(differentVersioned));","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    public void constructor_copy_same() {","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook copied \u003d new VersionedTaskBook(versioned);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(versioned.isEquivalentTo(copied));","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"    public void commit_differentState_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook initialState \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook newState \u003d new VersionedTaskBook(initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        newState.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        newState.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(newState.isEquivalentTo(initialState));","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    public void commit_sameState_noChange() {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook initialState \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook newState \u003d new VersionedTaskBook(initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        // Commit with no changes should not add to history.","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        newState.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(newState.isEquivalentTo(initialState));","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"    public void commit_commitPastEvenCapacity_pruneHistory() {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook initialState \u003d new TaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook(2, initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P3);","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P4);","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook halfwayState \u003d new TaskBook(initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addPerson(P3);","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook expected \u003d new VersionedTaskBook(halfwayState);","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"        expected.addPerson(P4);","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"        expected.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        // Should be equivalent to another VersionedTaskBook that only has 2 commits in it.","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"        // Note that there is already a commit in the VersionedTaskBook on instantiation.","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(expected.isEquivalentTo(versioned));","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"    public void commit_commitPastOddCapacity_pruneHistory() {","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook initialState \u003d new TaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook(3, initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P3);","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T2);","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T3);","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook halfwayState \u003d new TaskBook(initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addPerson(P3);","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"        halfwayState.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook expected \u003d new VersionedTaskBook(halfwayState);","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"seetohjinwei"},"content":"        expected.addTask(T2);","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"seetohjinwei"},"content":"        expected.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"        expected.addTask(T3);","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"seetohjinwei"},"content":"        expected.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"seetohjinwei"},"content":"        // Should be equivalent to another VersionedTaskBook that only has 3 commits in it.","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"seetohjinwei"},"content":"        // Note that there is already a commit in the VersionedTaskBook on instantiation.","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(expected.isEquivalentTo(versioned));","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"seetohjinwei"},"content":"    public void commit_commitAfterUndo_cannotRedo() {","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(versioned.canRedo());","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"seetohjinwei"},"content":"        // Commit blocks redo because future history is removed.","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(versioned.canRedo());","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"seetohjinwei"},"content":"    public void canUndo_canUndo_true() {","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(versioned.canUndo());","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"seetohjinwei"},"content":"    public void canUndo_cannotUndo_false() {","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(versioned.canUndo());","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"seetohjinwei"},"content":"    public void undo_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook initialState \u003d new TaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook(initialState);","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(initialState, versioned);","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"seetohjinwei"},"content":"    public void canRedo_canRedo_true() {","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T3);","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"seetohjinwei"},"content":"        assertTrue(versioned.canRedo());","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"seetohjinwei"},"content":"    public void canRedo_cannotRedo_false() {","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"seetohjinwei"},"content":"        assertFalse(versioned.canRedo());","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"seetohjinwei"},"content":"    public void redo_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook initialState \u003d new TaskBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook expected \u003d new TaskBook(initialState);","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"seetohjinwei"},"content":"        expected.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook(initialState);","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addTask(T1);","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"seetohjinwei"},"content":"        versioned.redo();","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(expected, versioned);","lastModifiedDate":"2022-10-21"},{"lineNumber":189,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"seetohjinwei"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"seetohjinwei"},"content":"    public void undoRedoCommit() {","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook initial \u003d new TaskBook();","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook expected \u003d new TaskBook(initial);","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"seetohjinwei"},"content":"        expected.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"seetohjinwei"},"content":"        VersionedTaskBook versioned \u003d new VersionedTaskBook(initial);","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P1);","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":201,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"seetohjinwei"},"content":"        versioned.addPerson(P2);","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"seetohjinwei"},"content":"        versioned.commit();","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"seetohjinwei"},"content":"        versioned.redo();","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(expected, versioned);","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"seetohjinwei"},"content":"        versioned.undo();","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(initial, versioned);","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"seetohjinwei":212}},{"path":"src/test/java/taskbook/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":32,"xiaobill8":5}},{"path":"src/test/java/taskbook/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":64,"xiaobill8":5}},{"path":"src/test/java/taskbook/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":73,"xiaobill8":2}},{"path":"src/test/java/taskbook/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":36,"xiaobill8":5}},{"path":"src/test/java/taskbook/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"public class PersonTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    public void isSamePerson() {","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.ALICE.isSamePerson(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.isSamePerson(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        Person editedBob \u003d new PersonBuilder(TypicalTaskBook.BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        editedBob \u003d new PersonBuilder(TypicalTaskBook.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.BOB.isSamePerson(editedBob));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"    public void equals() {","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        Person aliceCopy \u003d new PersonBuilder(TypicalTaskBook.ALICE).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.ALICE.equals(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(5));","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(TypicalTaskBook.BOB));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"xiaobill8":90}},{"path":"src/test/java/taskbook/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":36,"xiaobill8":5}},{"path":"src/test/java/taskbook/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.PersonBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(uniquePersonList.contains(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        assertTrue(uniquePersonList.contains(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"                -\u003e uniquePersonList.setPerson(null, TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"                -\u003e uniquePersonList.setPerson(TypicalTaskBook.ALICE, null));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(PersonNotFoundException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"                -\u003e uniquePersonList.setPerson(TypicalTaskBook.ALICE, TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.setPerson(TypicalTaskBook.ALICE, TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        expectedUniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.setPerson(TypicalTaskBook.ALICE, editedAlice);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.setPerson(TypicalTaskBook.ALICE, TypicalTaskBook.BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"        expectedUniquePersonList.add(TypicalTaskBook.BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"                -\u003e uniquePersonList.setPerson(TypicalTaskBook.ALICE, TypicalTaskBook.BOB));","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(TypicalTaskBook.ALICE));","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.remove(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"xiaobill8"},"content":"        expectedUniquePersonList.add(TypicalTaskBook.BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"xiaobill8"},"content":"        uniquePersonList.add(TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"xiaobill8"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(TypicalTaskBook.BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"xiaobill8"},"content":"        expectedUniquePersonList.add(TypicalTaskBook.BOB);","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"xiaobill8"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(TypicalTaskBook.ALICE, TypicalTaskBook.ALICE);","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"xiaobill8"},"content":"                -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":173,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":122,"xiaobill8":54}},{"path":"src/test/java/taskbook/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"-":20,"xiaobill8":6}},{"path":"src/test/java/taskbook/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bananamonkey4655"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.DeadlineBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"bananamonkey4655"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    public void isSameDeadline() {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"bananamonkey4655"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.EATING.isSameTask(TypicalTaskBook.EATING));","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"bananamonkey4655"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.EATING.isSameTask(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        // same name, same assignment, same description, same deadline, all other attributes different","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"bananamonkey4655"},"content":"        // -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        Deadline editedEating \u003d new DeadlineBuilder().withPersonName(TypicalTaskBook.ALICE)","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"bananamonkey4655"},"content":"                .withAssignment(Assignment.TO).withDescription(\"eat fruit\").withIsDone(false)","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"                .withDeadlineDate(LocalDate.of(2022, 11, 9)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.EATING.isSameTask(editedEating));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        // different name, all other attributes same","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"        // -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        editedEating \u003d new DeadlineBuilder().withPersonName(TypicalTaskBook.BOB)","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"bananamonkey4655"},"content":"                .withAssignment(Assignment.TO).withDescription(\"eat fruit\").withIsDone(false)","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"                .withDeadlineDate(LocalDate.of(2022, 11, 9)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.EATING.isSameTask(editedEating));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"bananamonkey4655"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"bananamonkey4655":20,"xiaobill8":16}},{"path":"src/test/java/taskbook/model/task/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.EventBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class EventTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    public void isSameEvent() {","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.PARTYING.isSameTask(TypicalTaskBook.PARTYING));","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.PARTYING.isSameTask(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        // same person, same assignment, same description, same deadline, all other attributes different","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"        // -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"        Event editedEating \u003d new EventBuilder().withPersonName(TypicalTaskBook.CARL)","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"                .withAssignment(Assignment.TO).withDescription(\"party at kevin\u0027s house\").withIsDone(true)","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"                .withEventDate(LocalDate.of(2022, 10, 11)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.PARTYING.isSameTask(editedEating));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        // different person, all other attributes same","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        // -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        editedEating \u003d new EventBuilder().withPersonName(TypicalTaskBook.GEORGE)","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"                .withAssignment(Assignment.TO).withDescription(\"party at kevin\u0027s house\").withIsDone(true)","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"                .withEventDate(LocalDate.of(2022, 10, 11)).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.PARTYING.isSameTask(editedEating));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"xiaobill8":36}},{"path":"src/test/java/taskbook/model/task/TodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.model.task;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TodoBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"public class TodoTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    public void isSameTodo() {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.SLEEPING.isSameTask(TypicalTaskBook.SLEEPING));","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.SLEEPING.isSameTask(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"        // same person, same assignment, same description, same deadline, all other attributes different","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        // -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"        Todo editedEating \u003d new TodoBuilder().withPersonName(TypicalTaskBook.BENSON)","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"                .withAssignment(Assignment.FROM).withDescription(\"sleep early\").withIsDone(false)","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertTrue(TypicalTaskBook.SLEEPING.isSameTask(editedEating));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        // different person, all other attributes same","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        // -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        editedEating \u003d new TodoBuilder().withPersonName(TypicalTaskBook.BOB)","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"                .withAssignment(Assignment.FROM).withDescription(\"sleep early\").withIsDone(false)","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"                .build();","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertFalse(TypicalTaskBook.SLEEPING.isSameTask(editedEating));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"xiaobill8":34}},{"path":"src/test/java/taskbook/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_NAME \u003d TypicalTaskBook.BENSON.getName().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_PHONE \u003d TypicalTaskBook.BENSON.getPhone().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_EMAIL \u003d TypicalTaskBook.BENSON.getEmail().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_ADDRESS \u003d TypicalTaskBook.BENSON.getAddress().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalTaskBook.BENSON.getTags().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalTaskBook.BENSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(TypicalTaskBook.BENSON, person.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null,","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"                null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"                Phone.class.getSimpleName());","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"                VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"                Email.class.getSimpleName());","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"                Address.class.getSimpleName());","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":74,"xiaobill8":42}},{"path":"src/test/java/taskbook/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_NAME \u003d TypicalTaskBook.BENSON.getName().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_PHONE \u003d TypicalTaskBook.BENSON.getPhone().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_EMAIL \u003d TypicalTaskBook.BENSON.getEmail().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_ADDRESS \u003d TypicalTaskBook.BENSON.getAddress().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalTaskBook.BENSON.getTags().stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_ASSIGNMENT \u003d TypicalTaskBook.SLEEPING.getAssignment().name();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private static final String VALID_DESCRIPTION \u003d TypicalTaskBook.SLEEPING.getDescription().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"        taskBook.addPerson(TypicalTaskBook.BENSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTodo(TypicalTaskBook.SLEEPING);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        Assertions.assertEquals(TypicalTaskBook.SLEEPING, task.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        taskBook.addPerson(TypicalTaskBook.BENSON);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_NAME, VALID_ASSIGNMENT, VALID_DESCRIPTION, false);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, ((tb) -\u003e task.toModelType(tb)));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null,","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"                null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"                Phone.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"                VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"                Email.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"                Address.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"xiaobill8"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"xiaobill8"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"xiaobill8":119}},{"path":"src/test/java/taskbook/storage/JsonSerializableTaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.util.JsonUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"public class JsonSerializableTaskBookTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableTaskBookTest\");","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsTaskBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonTaskBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonTaskBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        TaskBook taskBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"        TaskBook typicalPersonsTaskBook \u003d TypicalTaskBook.getTypicalTaskBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"        assertEquals(taskBookFromFile, typicalPersonsTaskBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableTaskBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":24,"seetohjinwei":2,"xiaobill8":22}},{"path":"src/test/java/taskbook/storage/JsonTaskBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"public class JsonTaskBookStorageTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskBookStorageTest\");","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    @TempDir","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    public void readTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readTaskBook(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    private java.util.Optional\u003cReadOnlyTaskBook\u003e readTaskBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"        return new JsonTaskBookStorage(Paths.get(filePath)).readTaskBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"                : null;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        assertFalse(readTaskBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    public void readTaskBook_invalidPersonTaskBook_throwDataConversionException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"                -\u003e readTaskBook(\"invalidPersonTaskBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    public void readTaskBook_invalidAndValidPersonTaskBook_throwDataConversionException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"                -\u003e readTaskBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"    public void readAndSaveTaskBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        TaskBook original \u003d TypicalTaskBook.getTypicalTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"        JsonTaskBookStorage jsonTaskBookStorage \u003d new JsonTaskBookStorage(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"        ReadOnlyTaskBook readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        original.addPerson(TypicalTaskBook.HOON);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        original.removePerson(TypicalTaskBook.FIONA); // v1.2: Must not remove person who has a task","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"        original.addPerson(TypicalTaskBook.IDA);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        jsonTaskBookStorage.saveTaskBook(original); // file path not specified","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook().get(); // file path not specified","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"    // TODO: Test if person is removed all his/her tasks are removed such that readAndSaveTaskBook all in order","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"    public void saveTaskBook_nullTaskBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"                -\u003e saveTaskBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"     * Saves {@code TaskBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"    private void saveTaskBook(ReadOnlyTaskBook taskBook, String filePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"            new JsonTaskBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"                    .saveTaskBook(taskBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"    public void saveTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveTaskBook(new TaskBook(), null));","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"xiaobill8":111}},{"path":"src/test/java/taskbook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        userPrefs.setTaskBookFilePath(Paths.get(\"data/taskbook.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":113,"xiaobill8":10}},{"path":"src/test/java/taskbook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.storage;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.GuiSettings;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.UserPrefs;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.TypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"        JsonTaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        storageManager \u003d new StorageManager(taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    public void taskBookReadSave() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"         * {@link JsonTaskBookStorage} class.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskBookStorageTest} class.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"        TaskBook original \u003d TypicalTaskBook.getTypicalTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"        storageManager.saveTaskBook(original);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"        ReadOnlyTaskBook retrieved \u003d storageManager.readTaskBook().get();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        assertEquals(original, new TaskBook(retrieved));","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"    public void gettaskBookFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"        assertNotNull(storageManager.getTaskBookFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":51,"xiaobill8":17}},{"path":"src/test/java/taskbook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"xiaobill8":1}},{"path":"src/test/java/taskbook/testutil/DeadlineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" * A utility class to help with building Deadline objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"public class DeadlineBuilder {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is the default Deadline description.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    public static final String DEFAULT_NAME \u003d \"defaultName\";","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private Name name;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private Assignment assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private Description description;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private boolean isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"     * Creates a {@code DeadlineBuilder} with the default details.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        assignment \u003d Assignment.FROM;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"        deadlineDate \u003d LocalDate.parse(\"2007-07-07\");","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Name} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder withName(Name name) {","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Name} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder withPersonName(Person person) {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Assignment} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder withAssignment(Assignment assignment) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Description} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder withDescription(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code isDone} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code deadlineDate} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"    public DeadlineBuilder withDeadlineDate(LocalDate deadlineDate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"     * Sets the {@code tags} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"    public DeadlineBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"bananamonkey4655"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"            this.tags.addAll(ParserUtil.parseTags(Arrays.asList(tags)));","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"bananamonkey4655"},"content":"            return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"bananamonkey4655"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"     * Builds a {@code Deadline} based on the parameters stored in the {@code DeadlineBuilder}.","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"    public Deadline build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"bananamonkey4655"},"content":"        return new Deadline(this.name, this.assignment, this.description, this.isDone, this.deadlineDate, this.tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":22,"xiaobill8":87}},{"path":"src/test/java/taskbook/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    private ContactEditCommand.EditPersonDescriptor descriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new ContactEditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    public EditPersonDescriptorBuilder(ContactEditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"        this.descriptor \u003d new ContactEditCommand.EditPersonDescriptor(descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new ContactEditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"    public ContactEditCommand.EditPersonDescriptor build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":73,"seetohjinwei":7,"xiaobill8":7}},{"path":"src/test/java/taskbook/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seetohjinwei"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.DateParser;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.EditTaskDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"seetohjinwei"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seetohjinwei"},"content":"    private final EditTaskDescriptor descriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"seetohjinwei"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"seetohjinwei"},"content":"     * Returns an {@code EditTaskDescriptorBuilder} with fields containing {@code todo}\u0027s details.","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder(Todo todo) {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setName(todo.getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setAssignment(todo.getAssignment());","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setDescription(todo.getDescription());","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setIsDone(todo.isDone());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"     * Returns an {@code EditTaskDescriptorBuilder} with fields containing {@code deadline}\u0027s details.","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder(Deadline deadline) {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setName(deadline.getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setAssignment(deadline.getAssignment());","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setDescription(deadline.getDescription());","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setIsDone(deadline.isDone());","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setDate(deadline.getDate());","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seetohjinwei"},"content":"     * Returns an {@code EditTaskDescriptorBuilder} with fields containing {@code event}\u0027s details.","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder(Event event) {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seetohjinwei"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setAssignment(event.getAssignment());","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setDescription(event.getDescription());","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setIsDone(event.isDone());","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setDate(event.getDate());","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seetohjinwei"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"seetohjinwei"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seetohjinwei"},"content":"     * Sets the {@code Assignment} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder withAssignment(Assignment assignment) {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setAssignment(assignment);","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"seetohjinwei"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"seetohjinwei"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"seetohjinwei"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"seetohjinwei"},"content":"     * Sets the {@code isDone} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"seetohjinwei"},"content":"        descriptor.setIsDone(isDone);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"seetohjinwei"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seetohjinwei"},"content":"     * Sets the {@code Date} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"seetohjinwei"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"seetohjinwei"},"content":"            descriptor.setDate(DateParser.parse(date));","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"seetohjinwei"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"seetohjinwei"},"content":"            // Silently fail.","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"seetohjinwei"},"content":"            return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"seetohjinwei"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"seetohjinwei"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"seetohjinwei"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"seetohjinwei"},"content":"        return descriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"seetohjinwei"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"seetohjinwei":111}},{"path":"src/test/java/taskbook/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"public class EventBuilder {","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is the default Event description.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"    public static final String DEFAULT_NAME \u003d \"defaultName\";","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private Name name;","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private Assignment assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private Description description;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"    private boolean isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"bananamonkey4655"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"    public EventBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        assignment \u003d Assignment.FROM;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"bananamonkey4655"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"bananamonkey4655"},"content":"        eventDate \u003d LocalDate.parse(\"2007-07-07\");","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Person} of the {@code Event} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    public EventBuilder withPersonName(Person person) {","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Assignment} of the {@code Event} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    public EventBuilder withAssignment(Assignment assignment) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Description} of the {@code Event} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"    public EventBuilder withDescription(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code isDone} of the {@code Event} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"    public EventBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code eventDate} of the {@code Event} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"    public EventBuilder withEventDate(LocalDate eventDate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"     * Sets the {@code tags} of the {@code Event} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"bananamonkey4655"},"content":"    public EventBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"bananamonkey4655"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"bananamonkey4655"},"content":"            this.tags.addAll(ParserUtil.parseTags(Arrays.asList(tags)));","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"bananamonkey4655"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"            return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"bananamonkey4655"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"xiaobill8"},"content":"     * Builds a {@code Event} based on the parameters stored in the {@code EventBuilder}.","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"    public Event build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"bananamonkey4655"},"content":"        return new Event(this.name, this.assignment, this.description, this.isDone, this.eventDate, this.tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":22,"xiaobill8":79}},{"path":"src/test/java/taskbook/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Address;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":88,"xiaobill8":8}},{"path":"src/test/java/taskbook/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactAddCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.commands.contacts.ContactDeleteCommand;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.logic.commands.contacts.ContactEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":" * A utility class for Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"public class PersonUtil {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        return ContactAddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * Returns a delete command string for deleting a index.","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    public static String getDeleteCommand(int index) {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        return ContactDeleteCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + index;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        sb.append(CliSyntax.PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"        sb.append(CliSyntax.PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"        sb.append(CliSyntax.PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"        );","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"seetohjinwei"},"content":"    public static String getEditPersonDescriptorDetails(ContactEditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(CliSyntax.PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(CliSyntax.PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"        descriptor.getAddress().ifPresent(address","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"                -\u003e sb.append(CliSyntax.PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"                sb.append(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"            } else {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"seetohjinwei":2,"xiaobill8":64}},{"path":"src/test/java/taskbook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"xiaobill8":1}},{"path":"src/test/java/taskbook/testutil/TaskBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"seetohjinwei"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":" * A utility class to help with building taskBook objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":" *     {@code TaskBook ab \u003d new TaskBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"public class TaskBookBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"    private TaskBook taskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"    public TaskBookBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":"        taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"    public TaskBookBuilder(TaskBook taskBook) {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"        this.taskBook \u003d taskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"     * Adds a new {@code Person} to the {@code TaskBook} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    public TaskBookBuilder withPerson(Person person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"xiaobill8"},"content":"        taskBook.addPerson(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"seetohjinwei"},"content":"     * Adds a new {@code Task} to the {@code TaskBook} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    public TaskBookBuilder withTask(Task task) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    public TaskBook build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"        return taskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"seetohjinwei":9,"xiaobill8":34}},{"path":"src/test/java/taskbook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.Model;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":51,"xiaobill8":4}},{"path":"src/test/java/taskbook/testutil/TodoBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"bananamonkey4655"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Name;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"bananamonkey4655"},"content":"import taskbook.model.tag.Tag;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Description;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"xiaobill8"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"xiaobill8"},"content":" * A utility class to help with building Todo objects.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"xiaobill8"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"xiaobill8"},"content":"public class TodoBuilder {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is the default Todo description.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"    public static final String DEFAULT_NAME \u003d \"defaultName\";","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"    private Name name;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"    private Assignment assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"    private Description description;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"xiaobill8"},"content":"    private boolean isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"bananamonkey4655"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"     * Creates a {@code TodoBuilder} with the default details.","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    public TodoBuilder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"xiaobill8"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"xiaobill8"},"content":"        assignment \u003d Assignment.FROM;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"bananamonkey4655"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Name} of the {@code Todo} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"    public TodoBuilder withName(Name name) {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Name} of the {@code Todo} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"xiaobill8"},"content":"    public TodoBuilder withPersonName(Person person) {","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"xiaobill8"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Assignment} of the {@code Todo} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"xiaobill8"},"content":"    public TodoBuilder withAssignment(Assignment assignment) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"xiaobill8"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code Description} of the {@code Todo} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"xiaobill8"},"content":"    public TodoBuilder withDescription(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"xiaobill8"},"content":"     * Sets the {@code isDone} of the {@code Todo} that we are building.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    public TodoBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"        return this;","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"bananamonkey4655"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"bananamonkey4655"},"content":"     * Sets the {@code tags} of the {@code Todo} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"bananamonkey4655"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"bananamonkey4655"},"content":"    public TodoBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"bananamonkey4655"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"bananamonkey4655"},"content":"            this.tags.addAll(ParserUtil.parseTags(Arrays.asList(tags)));","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"bananamonkey4655"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"bananamonkey4655"},"content":"            return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"bananamonkey4655"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"bananamonkey4655"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"bananamonkey4655"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"bananamonkey4655"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"xiaobill8"},"content":"     * Builds a {@code Todo} based on the parameters stored in the {@code TodoBuilder}.","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"xiaobill8"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"    public Todo build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"bananamonkey4655"},"content":"        return new Todo(this.name, this.assignment, this.description, this.isDone, this.tags);","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"bananamonkey4655":22,"xiaobill8":76}},{"path":"src/test/java/taskbook/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"import taskbook.commons.core.index.Index;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"seetohjinwei"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seetohjinwei"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seetohjinwei"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seetohjinwei"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":10,"seetohjinwei":4,"xiaobill8":2}},{"path":"src/test/java/taskbook/testutil/TypicalTaskBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.testutil;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import static taskbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"xiaobill8"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.person.Person;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Deadline;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Event;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"xiaobill8"},"content":"import taskbook.model.task.enums.Assignment;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":" * A utility class containing a list of {@code Task} and {@code Person} objects to be used in tests.","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"xiaobill8"},"content":"public class TypicalTaskBook {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"xiaobill8"},"content":"    // Typical Persons","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"seetohjinwei"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"seetohjinwei"},"content":"    * Do not add any tasks to Zed. Leave Zed as the *first* element in {@link TypicalTaskBook#getTypicalTasks()} .","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"seetohjinwei"},"content":"    * Changing these will break the testcases which rely on Zed *not* having tests and being the first element.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"seetohjinwei"},"content":"    */","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"seetohjinwei"},"content":"    public static final Person ZED \u003d new PersonBuilder().withName(\"Zed HatesTasks\")","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"seetohjinwei"},"content":"        .withAddress(\"NUS School of Computing, COM1, 13, Computing Dr, 117417\").withEmail(\"zed@example.com\")","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"seetohjinwei"},"content":"        .withPhone(\"91234567\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"    // Typical Dates","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"xiaobill8"},"content":"    public static final LocalDate NOV_NINE \u003d LocalDate.of(2022, 11, 9);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"xiaobill8"},"content":"    public static final LocalDate OCT_ELEVEN \u003d LocalDate.of(2022, 10, 11);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"xiaobill8"},"content":"    // Typical Tasks","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"xiaobill8"},"content":"    public static final Deadline EATING \u003d new DeadlineBuilder().withPersonName(ALICE)","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"xiaobill8"},"content":"            .withAssignment(Assignment.TO).withDescription(\"eat fruit\").withIsDone(true)","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"xiaobill8"},"content":"            .withDeadlineDate(NOV_NINE).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"xiaobill8"},"content":"    public static final Todo SLEEPING \u003d new TodoBuilder().withPersonName(BENSON)","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"xiaobill8"},"content":"            .withAssignment(Assignment.FROM).withDescription(\"sleep early\").withIsDone(false)","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"xiaobill8"},"content":"            .build();","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"xiaobill8"},"content":"    public static final Event PARTYING \u003d new EventBuilder().withPersonName(CARL)","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"xiaobill8"},"content":"            .withAssignment(Assignment.TO).withDescription(\"party at kevin\u0027s house\")","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"xiaobill8"},"content":"            .withEventDate(OCT_ELEVEN).withIsDone(true).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"xiaobill8"},"content":"    private TypicalTaskBook() {} // prevents instantiation","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"xiaobill8"},"content":"     * Returns an {@code TaskBook} with all the typical persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"bananamonkey4655"},"content":"    public static TaskBook getTypicalTaskBook() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"xiaobill8"},"content":"        TaskBook tb \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"xiaobill8"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"xiaobill8"},"content":"                tb.addPerson(person);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"xiaobill8"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"xiaobill8"},"content":"            for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"xiaobill8"},"content":"                tb.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-13"},{"lineNumber":106,"author":{"gitId":"xiaobill8"},"content":"            return tb;","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"xiaobill8"},"content":"        } catch (Exception exception) {","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"xiaobill8"},"content":"            exception.printStackTrace();","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"xiaobill8"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"xiaobill8"},"content":"        return tb;","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"seetohjinwei"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ZED, ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":116,"author":{"gitId":"xiaobill8"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"xiaobill8"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"xiaobill8"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EATING, SLEEPING, PARTYING));","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"xiaobill8"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"bananamonkey4655":1,"-":54,"seetohjinwei":8,"xiaobill8":57}},{"path":"src/test/java/taskbook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":34,"xiaobill8":1}},{"path":"src/test/java/taskbook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xiaobill8"},"content":"package taskbook.ui;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"xiaobill8"},"content":"import taskbook.MainApp;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"xiaobill8"},"content":"import taskbook.testutil.Assert;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"xiaobill8"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":99,"xiaobill8":15}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"\u003c?import taskbook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"xiaobill8":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"xiaobill8"},"content":"\u003cfx:root type\u003d\"taskbook.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"xiaobill8":1}}]
